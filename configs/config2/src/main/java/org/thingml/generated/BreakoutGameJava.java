/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : BreakoutGameJava
 **/
public class BreakoutGameJava extends Component implements IBreakoutGameJava_display, IBreakoutGameJava_game, IBreakoutGameJava_controller, IBreakoutGameJava_clock {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tbytesSentCounter = " + BreakoutGame_bytesSentCounter_var;
result += "\tstartTime = " + BreakoutGame_startTime_var;
result += "\tstopTime = " + BreakoutGame_stopTime_var;
result += "\tlastTimestamp = " + BreakoutGame_lastTimestamp_var;
result += "\tcounter = " + BreakoutGame_counter_var;
result += "\ttrackMemory = " + BreakoutGame_trackMemory_var;
result += "\tXDISPSIZE = " + BreakoutGame_XDISPSIZE_var;
result += "\tYDISPSIZE = " + BreakoutGame_YDISPSIZE_var;
result += "\tSCALE = " + BreakoutGame_SCALE_var;
result += "\tXMAX = " + BreakoutGame_XMAX_var;
result += "\tYMAX = " + BreakoutGame_YMAX_var;
result += "\tTOP = " + BreakoutGame_TOP_var;
result += "\tBOTTOM = " + BreakoutGame_BOTTOM_var;
result += "\tLEFT = " + BreakoutGame_LEFT_var;
result += "\tRIGHT = " + BreakoutGame_RIGHT_var;
result += "\tbr = " + BreakoutGame_br_var;
result += "\tbx = " + BreakoutGame_bx_var;
result += "\tby = " + BreakoutGame_by_var;
result += "\tdx = " + BreakoutGame_dx_var;
result += "\tdy = " + BreakoutGame_dy_var;
result += "\tpadx = " + BreakoutGame_padx_var;
result += "\tpady = " + BreakoutGame_pady_var;
result += "\tpadlen = " + BreakoutGame_padlen_var;
result += "\tprevBX = " + BreakoutGame_prevBX_var;
result += "\tprevBY = " + BreakoutGame_prevBY_var;
result += "\tbgcolor = " + BreakoutGame_bgcolor_var;
result += "\tfgcolor = " + BreakoutGame_fgcolor_var;
result += "\tperiod = " + BreakoutGame_period_var;
result += "\tprevPX = " + BreakoutGame_prevPX_var;
result += "\tprevPY = " + BreakoutGame_prevPY_var;
result += "\tBRICK_ROWS = " + BreakoutGame_BRICK_ROWS_var;
result += "\tBRICK_HEIGHT = " + BreakoutGame_BRICK_HEIGHT_var;
result += "\tbricks = " + BreakoutGame_bricks_var;
result += "\tscore = " + BreakoutGame_score_var;
result += "\tlives = " + BreakoutGame_lives_var;
result += "\tlevel = " + BreakoutGame_level_var;
result += "";
return result;
}

public synchronized void timer_timeout_via_clock(int TimerMsgs_timer_timeout_id_var){
final Event _msg = timer_timeoutType.instantiate(TimerMsgs_timer_timeout_id_var);
_msg.setPort(clock_port);
receive(_msg);
}

public synchronized void displayReady__via_display(byte DisplayMsgs_displayReady__var47_var){
final Event _msg = displayReady_Type.instantiate(DisplayMsgs_displayReady__var47_var);
_msg.setPort(display_port);
receive(_msg);
}

public synchronized void displayReadyvar8_via_display(byte DisplayMsgs_displayReadyvar8_var23_var, byte DisplayMsgs_displayReadyvar8_var8_var){
final Event _msg = displayReadyvar8Type.instantiate(DisplayMsgs_displayReadyvar8_var23_var, DisplayMsgs_displayReadyvar8_var8_var);
_msg.setPort(display_port);
receive(_msg);
}

public synchronized void displayReady_bis__via_display(byte DisplayMsgs_displayReady_bis__var32_var){
final Event _msg = displayReady_bis_Type.instantiate(DisplayMsgs_displayReady_bis__var32_var);
_msg.setPort(display_port);
receive(_msg);
}

public synchronized void displayReady_bisvar8_via_display(byte DisplayMsgs_displayReady_bisvar8_var43_var, byte DisplayMsgs_displayReady_bisvar8_var8_var){
final Event _msg = displayReady_bisvar8Type.instantiate(DisplayMsgs_displayReady_bisvar8_var43_var, DisplayMsgs_displayReady_bisvar8_var8_var);
_msg.setPort(display_port);
receive(_msg);
}

public synchronized void positionxvar11_via_controller(byte ControllerMsgs_positionxvar11_var62_var, int ControllerMsgs_positionxvar11_x_var, byte ControllerMsgs_positionxvar11_var11_var){
final Event _msg = positionxvar11Type.instantiate(ControllerMsgs_positionxvar11_var62_var, ControllerMsgs_positionxvar11_x_var, ControllerMsgs_positionxvar11_var11_var);
_msg.setPort(controller_port);
receive(_msg);
}

public synchronized void positiony_via_controller(byte ControllerMsgs_positiony_var59_var, int ControllerMsgs_positiony_y_var){
final Event _msg = positionyType.instantiate(ControllerMsgs_positiony_var59_var, ControllerMsgs_positiony_y_var);
_msg.setPort(controller_port);
receive(_msg);
}

public synchronized void position_bis__via_controller(byte ControllerMsgs_position_bis__var58_var){
final Event _msg = position_bis_Type.instantiate(ControllerMsgs_position_bis__var58_var);
_msg.setPort(controller_port);
receive(_msg);
}

public synchronized void position_bisxvar11y_via_controller(byte ControllerMsgs_position_bisxvar11y_var64_var, int ControllerMsgs_position_bisxvar11y_y_var, int ControllerMsgs_position_bisxvar11y_x_var, byte ControllerMsgs_position_bisxvar11y_var11_var){
final Event _msg = position_bisxvar11yType.instantiate(ControllerMsgs_position_bisxvar11y_var64_var, ControllerMsgs_position_bisxvar11y_y_var, ControllerMsgs_position_bisxvar11y_x_var, ControllerMsgs_position_bisxvar11y_var11_var);
_msg.setPort(controller_port);
receive(_msg);
}

public synchronized void lostBall_via_game(){
final Event _msg = lostBallType.instantiate();
_msg.setPort(game_port);
receive(_msg);
}

public synchronized void nextLevel_via_game(){
final Event _msg = nextLevelType.instantiate();
_msg.setPort(game_port);
receive(_msg);
}

private void sendTimer_start_via_clock(int TimerMsgs_timer_start_id_var, int TimerMsgs_timer_start_time_var){
clock_port.send(timer_startType.instantiate(TimerMsgs_timer_start_id_var, TimerMsgs_timer_start_time_var));
}

private void sendTimer_cancel_via_clock(int TimerMsgs_timer_cancel_id_var){
clock_port.send(timer_cancelType.instantiate(TimerMsgs_timer_cancel_id_var));
}

private void sendCreateysizevar9_via_display(byte DisplayMsgs_createysizevar9_var9_var, byte DisplayMsgs_createysizevar9_var29_var, int DisplayMsgs_createysizevar9_ysize_var){
display_port.send(createysizevar9Type.instantiate(DisplayMsgs_createysizevar9_var9_var, DisplayMsgs_createysizevar9_var29_var, DisplayMsgs_createysizevar9_ysize_var));
}

private void sendCreatexsize_via_display(byte DisplayMsgs_createxsize_var15_var, int DisplayMsgs_createxsize_xsize_var){
display_port.send(createxsizeType.instantiate(DisplayMsgs_createxsize_var15_var, DisplayMsgs_createxsize_xsize_var));
}

private void sendFillRectyvar2_via_display(byte DisplayMsgs_fillRectyvar2_var28_var, byte DisplayMsgs_fillRectyvar2_var2_var, int DisplayMsgs_fillRectyvar2_y_var){
display_port.send(fillRectyvar2Type.instantiate(DisplayMsgs_fillRectyvar2_var28_var, DisplayMsgs_fillRectyvar2_var2_var, DisplayMsgs_fillRectyvar2_y_var));
}

private void sendFillRectxwidthheight_via_display(byte DisplayMsgs_fillRectxwidthheight_var22_var, int DisplayMsgs_fillRectxwidthheight_x_var, int DisplayMsgs_fillRectxwidthheight_width_var, int DisplayMsgs_fillRectxwidthheight_height_var){
display_port.send(fillRectxwidthheightType.instantiate(DisplayMsgs_fillRectxwidthheight_var22_var, DisplayMsgs_fillRectxwidthheight_x_var, DisplayMsgs_fillRectxwidthheight_width_var, DisplayMsgs_fillRectxwidthheight_height_var));
}

private void sendDrawRectwidthx_via_display(byte DisplayMsgs_drawRectwidthx_var48_var, int DisplayMsgs_drawRectwidthx_x_var, int DisplayMsgs_drawRectwidthx_width_var){
display_port.send(drawRectwidthxType.instantiate(DisplayMsgs_drawRectwidthx_var48_var, DisplayMsgs_drawRectwidthx_x_var, DisplayMsgs_drawRectwidthx_width_var));
}

private void sendDrawRectvar3yheight_via_display(byte DisplayMsgs_drawRectvar3yheight_var57_var, int DisplayMsgs_drawRectvar3yheight_y_var, int DisplayMsgs_drawRectvar3yheight_height_var, byte DisplayMsgs_drawRectvar3yheight_var3_var){
display_port.send(drawRectvar3yheightType.instantiate(DisplayMsgs_drawRectvar3yheight_var57_var, DisplayMsgs_drawRectvar3yheight_y_var, DisplayMsgs_drawRectvar3yheight_height_var, DisplayMsgs_drawRectvar3yheight_var3_var));
}

private void sendClear__via_display(byte DisplayMsgs_clear__var19_var){
display_port.send(clear_Type.instantiate(DisplayMsgs_clear__var19_var));
}

private void sendClearvar1_via_display(byte DisplayMsgs_clearvar1_var53_var, byte DisplayMsgs_clearvar1_var1_var){
display_port.send(clearvar1Type.instantiate(DisplayMsgs_clearvar1_var53_var, DisplayMsgs_clearvar1_var1_var));
}

private void sendSetColorrbvar7_via_display(byte DisplayMsgs_setColorrbvar7_var7_var, byte DisplayMsgs_setColorrbvar7_var40_var, int DisplayMsgs_setColorrbvar7_r_var, int DisplayMsgs_setColorrbvar7_b_var){
display_port.send(setColorrbvar7Type.instantiate(DisplayMsgs_setColorrbvar7_var7_var, DisplayMsgs_setColorrbvar7_var40_var, DisplayMsgs_setColorrbvar7_r_var, DisplayMsgs_setColorrbvar7_b_var));
}

private void sendSetColorg_via_display(byte DisplayMsgs_setColorg_var27_var, int DisplayMsgs_setColorg_g_var){
display_port.send(setColorgType.instantiate(DisplayMsgs_setColorg_var27_var, DisplayMsgs_setColorg_g_var));
}

private void sendSetBGColorvar5g_via_display(byte DisplayMsgs_setBGColorvar5g_var26_var, int DisplayMsgs_setBGColorvar5g_g_var, byte DisplayMsgs_setBGColorvar5g_var5_var){
display_port.send(setBGColorvar5gType.instantiate(DisplayMsgs_setBGColorvar5g_var26_var, DisplayMsgs_setBGColorvar5g_g_var, DisplayMsgs_setBGColorvar5g_var5_var));
}

private void sendSetBGColorrb_via_display(int DisplayMsgs_setBGColorrb_r_var, byte DisplayMsgs_setBGColorrb_var25_var, int DisplayMsgs_setBGColorrb_b_var){
display_port.send(setBGColorrbType.instantiate(DisplayMsgs_setBGColorrb_r_var, DisplayMsgs_setBGColorrb_var25_var, DisplayMsgs_setBGColorrb_b_var));
}

private void sendDrawIntegervar0xy_via_display(byte DisplayMsgs_drawIntegervar0xy_var0_var, byte DisplayMsgs_drawIntegervar0xy_var50_var, int DisplayMsgs_drawIntegervar0xy_x_var, int DisplayMsgs_drawIntegervar0xy_y_var){
display_port.send(drawIntegervar0xyType.instantiate(DisplayMsgs_drawIntegervar0xy_var0_var, DisplayMsgs_drawIntegervar0xy_var50_var, DisplayMsgs_drawIntegervar0xy_x_var, DisplayMsgs_drawIntegervar0xy_y_var));
}

private void sendDrawIntegerdigitsscalev_via_display(int DisplayMsgs_drawIntegerdigitsscalev_scale_var, int DisplayMsgs_drawIntegerdigitsscalev_digits_var, byte DisplayMsgs_drawIntegerdigitsscalev_var44_var, int DisplayMsgs_drawIntegerdigitsscalev_v_var){
display_port.send(drawIntegerdigitsscalevType.instantiate(DisplayMsgs_drawIntegerdigitsscalev_scale_var, DisplayMsgs_drawIntegerdigitsscalev_digits_var, DisplayMsgs_drawIntegerdigitsscalev_var44_var, DisplayMsgs_drawIntegerdigitsscalev_v_var));
}

private void sendUpdate__via_display(byte DisplayMsgs_update__var24_var){
display_port.send(update_Type.instantiate(DisplayMsgs_update__var24_var));
}

private void sendUpdatevar4_via_display(byte DisplayMsgs_updatevar4_var41_var, byte DisplayMsgs_updatevar4_var4_var){
display_port.send(updatevar4Type.instantiate(DisplayMsgs_updatevar4_var41_var, DisplayMsgs_updatevar4_var4_var));
}

private void sendDrawThingMLvar10x_via_display(byte DisplayMsgs_drawThingMLvar10x_var18_var, byte DisplayMsgs_drawThingMLvar10x_var10_var, int DisplayMsgs_drawThingMLvar10x_x_var){
display_port.send(drawThingMLvar10xType.instantiate(DisplayMsgs_drawThingMLvar10x_var18_var, DisplayMsgs_drawThingMLvar10x_var10_var, DisplayMsgs_drawThingMLvar10x_x_var));
}

private void sendDrawThingMLy_via_display(byte DisplayMsgs_drawThingMLy_var54_var, int DisplayMsgs_drawThingMLy_y_var){
display_port.send(drawThingMLyType.instantiate(DisplayMsgs_drawThingMLy_var54_var, DisplayMsgs_drawThingMLy_y_var));
}

private void sendCreate_bisysize_via_display(byte DisplayMsgs_create_bisysize_var45_var, int DisplayMsgs_create_bisysize_ysize_var){
display_port.send(create_bisysizeType.instantiate(DisplayMsgs_create_bisysize_var45_var, DisplayMsgs_create_bisysize_ysize_var));
}

private void sendCreate_bisvar9xsize_via_display(byte DisplayMsgs_create_bisvar9xsize_var9_var, byte DisplayMsgs_create_bisvar9xsize_var34_var, int DisplayMsgs_create_bisvar9xsize_xsize_var){
display_port.send(create_bisvar9xsizeType.instantiate(DisplayMsgs_create_bisvar9xsize_var9_var, DisplayMsgs_create_bisvar9xsize_var34_var, DisplayMsgs_create_bisvar9xsize_xsize_var));
}

private void sendFillRect_bisyvar2x_via_display(byte DisplayMsgs_fillRect_bisyvar2x_var16_var, byte DisplayMsgs_fillRect_bisyvar2x_var2_var, int DisplayMsgs_fillRect_bisyvar2x_y_var, int DisplayMsgs_fillRect_bisyvar2x_x_var){
display_port.send(fillRect_bisyvar2xType.instantiate(DisplayMsgs_fillRect_bisyvar2x_var16_var, DisplayMsgs_fillRect_bisyvar2x_var2_var, DisplayMsgs_fillRect_bisyvar2x_y_var, DisplayMsgs_fillRect_bisyvar2x_x_var));
}

private void sendFillRect_biswidthheight_via_display(int DisplayMsgs_fillRect_biswidthheight_width_var, byte DisplayMsgs_fillRect_biswidthheight_var39_var, int DisplayMsgs_fillRect_biswidthheight_height_var){
display_port.send(fillRect_biswidthheightType.instantiate(DisplayMsgs_fillRect_biswidthheight_width_var, DisplayMsgs_fillRect_biswidthheight_var39_var, DisplayMsgs_fillRect_biswidthheight_height_var));
}

private void sendDrawRect_biswidthxvar3_via_display(byte DisplayMsgs_drawRect_biswidthxvar3_var35_var, byte DisplayMsgs_drawRect_biswidthxvar3_var3_var, int DisplayMsgs_drawRect_biswidthxvar3_x_var, int DisplayMsgs_drawRect_biswidthxvar3_width_var){
display_port.send(drawRect_biswidthxvar3Type.instantiate(DisplayMsgs_drawRect_biswidthxvar3_var35_var, DisplayMsgs_drawRect_biswidthxvar3_var3_var, DisplayMsgs_drawRect_biswidthxvar3_x_var, DisplayMsgs_drawRect_biswidthxvar3_width_var));
}

private void sendDrawRect_bisyheight_via_display(byte DisplayMsgs_drawRect_bisyheight_var17_var, int DisplayMsgs_drawRect_bisyheight_y_var, int DisplayMsgs_drawRect_bisyheight_height_var){
display_port.send(drawRect_bisyheightType.instantiate(DisplayMsgs_drawRect_bisyheight_var17_var, DisplayMsgs_drawRect_bisyheight_y_var, DisplayMsgs_drawRect_bisyheight_height_var));
}

private void sendClear_bis__via_display(byte DisplayMsgs_clear_bis__var38_var){
display_port.send(clear_bis_Type.instantiate(DisplayMsgs_clear_bis__var38_var));
}

private void sendClear_bisvar1_via_display(byte DisplayMsgs_clear_bisvar1_var33_var, byte DisplayMsgs_clear_bisvar1_var1_var){
display_port.send(clear_bisvar1Type.instantiate(DisplayMsgs_clear_bisvar1_var33_var, DisplayMsgs_clear_bisvar1_var1_var));
}

private void sendSetColor_bisr_via_display(byte DisplayMsgs_setColor_bisr_var31_var, int DisplayMsgs_setColor_bisr_r_var){
display_port.send(setColor_bisrType.instantiate(DisplayMsgs_setColor_bisr_var31_var, DisplayMsgs_setColor_bisr_r_var));
}

private void sendSetColor_bisbvar7g_via_display(byte DisplayMsgs_setColor_bisbvar7g_var7_var, int DisplayMsgs_setColor_bisbvar7g_g_var, byte DisplayMsgs_setColor_bisbvar7g_var42_var, int DisplayMsgs_setColor_bisbvar7g_b_var){
display_port.send(setColor_bisbvar7gType.instantiate(DisplayMsgs_setColor_bisbvar7g_var7_var, DisplayMsgs_setColor_bisbvar7g_g_var, DisplayMsgs_setColor_bisbvar7g_var42_var, DisplayMsgs_setColor_bisbvar7g_b_var));
}

private void sendSetBGColor_bisvar5g_via_display(int DisplayMsgs_setBGColor_bisvar5g_g_var, byte DisplayMsgs_setBGColor_bisvar5g_var56_var, byte DisplayMsgs_setBGColor_bisvar5g_var5_var){
display_port.send(setBGColor_bisvar5gType.instantiate(DisplayMsgs_setBGColor_bisvar5g_g_var, DisplayMsgs_setBGColor_bisvar5g_var56_var, DisplayMsgs_setBGColor_bisvar5g_var5_var));
}

private void sendSetBGColor_bisrb_via_display(int DisplayMsgs_setBGColor_bisrb_b_var, byte DisplayMsgs_setBGColor_bisrb_var20_var, int DisplayMsgs_setBGColor_bisrb_r_var){
display_port.send(setBGColor_bisrbType.instantiate(DisplayMsgs_setBGColor_bisrb_b_var, DisplayMsgs_setBGColor_bisrb_var20_var, DisplayMsgs_setBGColor_bisrb_r_var));
}

private void sendDrawInteger_bisvar0xydigits_via_display(int DisplayMsgs_drawInteger_bisvar0xydigits_digits_var, byte DisplayMsgs_drawInteger_bisvar0xydigits_var51_var, int DisplayMsgs_drawInteger_bisvar0xydigits_y_var, byte DisplayMsgs_drawInteger_bisvar0xydigits_var0_var, int DisplayMsgs_drawInteger_bisvar0xydigits_x_var){
display_port.send(drawInteger_bisvar0xydigitsType.instantiate(DisplayMsgs_drawInteger_bisvar0xydigits_digits_var, DisplayMsgs_drawInteger_bisvar0xydigits_var51_var, DisplayMsgs_drawInteger_bisvar0xydigits_y_var, DisplayMsgs_drawInteger_bisvar0xydigits_var0_var, DisplayMsgs_drawInteger_bisvar0xydigits_x_var));
}

private void sendDrawInteger_bisscalev_via_display(byte DisplayMsgs_drawInteger_bisscalev_var49_var, int DisplayMsgs_drawInteger_bisscalev_scale_var, int DisplayMsgs_drawInteger_bisscalev_v_var){
display_port.send(drawInteger_bisscalevType.instantiate(DisplayMsgs_drawInteger_bisscalev_var49_var, DisplayMsgs_drawInteger_bisscalev_scale_var, DisplayMsgs_drawInteger_bisscalev_v_var));
}

private void sendUpdate_bis__via_display(byte DisplayMsgs_update_bis__var30_var){
display_port.send(update_bis_Type.instantiate(DisplayMsgs_update_bis__var30_var));
}

private void sendUpdate_bisvar4_via_display(byte DisplayMsgs_update_bisvar4_var55_var, byte DisplayMsgs_update_bisvar4_var4_var){
display_port.send(update_bisvar4Type.instantiate(DisplayMsgs_update_bisvar4_var55_var, DisplayMsgs_update_bisvar4_var4_var));
}

private void sendDrawThingML_bisvar10x_via_display(int DisplayMsgs_drawThingML_bisvar10x_x_var, byte DisplayMsgs_drawThingML_bisvar10x_var37_var, byte DisplayMsgs_drawThingML_bisvar10x_var10_var){
display_port.send(drawThingML_bisvar10xType.instantiate(DisplayMsgs_drawThingML_bisvar10x_x_var, DisplayMsgs_drawThingML_bisvar10x_var37_var, DisplayMsgs_drawThingML_bisvar10x_var10_var));
}

private void sendDrawThingML_bisy_via_display(byte DisplayMsgs_drawThingML_bisy_var52_var, int DisplayMsgs_drawThingML_bisy_y_var){
display_port.send(drawThingML_bisyType.instantiate(DisplayMsgs_drawThingML_bisy_var52_var, DisplayMsgs_drawThingML_bisy_y_var));
}

private void sendUpdateIA__via_ia(byte IAControllerMsg_updateIA__var69_var){
ia_port.send(updateIA_Type.instantiate(IAControllerMsg_updateIA__var69_var));
}

private void sendUpdateIAvar13padyballxballypadx_via_ia(byte IAControllerMsg_updateIAvar13padyballxballypadx_var66_var, int IAControllerMsg_updateIAvar13padyballxballypadx_pady_var, byte IAControllerMsg_updateIAvar13padyballxballypadx_var13_var, int IAControllerMsg_updateIAvar13padyballxballypadx_padx_var, int IAControllerMsg_updateIAvar13padyballxballypadx_ballx_var, int IAControllerMsg_updateIAvar13padyballxballypadx_bally_var){
ia_port.send(updateIAvar13padyballxballypadxType.instantiate(IAControllerMsg_updateIAvar13padyballxballypadx_var66_var, IAControllerMsg_updateIAvar13padyballxballypadx_pady_var, IAControllerMsg_updateIAvar13padyballxballypadx_var13_var, IAControllerMsg_updateIAvar13padyballxballypadx_padx_var, IAControllerMsg_updateIAvar13padyballxballypadx_ballx_var, IAControllerMsg_updateIAvar13padyballxballypadx_bally_var));
}

private void sendUpdateIA_bis__via_ia(byte IAControllerMsg_updateIA_bis__var68_var){
ia_port.send(updateIA_bis_Type.instantiate(IAControllerMsg_updateIA_bis__var68_var));
}

private void sendUpdateIA_bisvar13padyballxballypadx_via_ia(byte IAControllerMsg_updateIA_bisvar13padyballxballypadx_var67_var, int IAControllerMsg_updateIA_bisvar13padyballxballypadx_bally_var, int IAControllerMsg_updateIA_bisvar13padyballxballypadx_ballx_var, byte IAControllerMsg_updateIA_bisvar13padyballxballypadx_var13_var, int IAControllerMsg_updateIA_bisvar13padyballxballypadx_padx_var, int IAControllerMsg_updateIA_bisvar13padyballxballypadx_pady_var){
ia_port.send(updateIA_bisvar13padyballxballypadxType.instantiate(IAControllerMsg_updateIA_bisvar13padyballxballypadx_var67_var, IAControllerMsg_updateIA_bisvar13padyballxballypadx_bally_var, IAControllerMsg_updateIA_bisvar13padyballxballypadx_ballx_var, IAControllerMsg_updateIA_bisvar13padyballxballypadx_var13_var, IAControllerMsg_updateIA_bisvar13padyballxballypadx_padx_var, IAControllerMsg_updateIA_bisvar13padyballxballypadx_pady_var));
}

private void sendLostBall_via_game(){
game_port.send(lostBallType.instantiate());
}

private void sendNextLevel_via_game(){
game_port.send(nextLevelType.instantiate());
}

//Attributes
private int BreakoutGame_SC_controller_position_x_var;
private long BreakoutGame_startTime_var;
private boolean BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var;
private int BreakoutGame_BRICK_ROWS_var;
private int BreakoutGame_prevBY_var;
private int BreakoutGame_by_var;
private boolean BreakoutGame_SC_INIT_received_display_displayReady__var;
private boolean BreakoutGame_SC_INIT_received_display_displayReady_bis__var;
private long BreakoutGame_lastTimestamp_var;
private int BreakoutGame_SC_controller_position_bis_y_var;
private byte BreakoutGame_SC_controller_position_var11_var;
private int BreakoutGame_score_var;
private int BreakoutGame_SC_LAUNCH_countdown_var;
private int BreakoutGame_SC_controller_position_y_var;
private int BreakoutGame_SCALE_var;
private int BreakoutGame_lives_var;
private int BreakoutGame_XDISPSIZE_var;
private int BreakoutGame_YDISPSIZE_var;
private int BreakoutGame_XMAX_var;
private int BreakoutGame_padx_var;
private int[] BreakoutGame_bgcolor_var;
private int BreakoutGame_padlen_var;
private int BreakoutGame_TOP_var;
private int BreakoutGame_bx_var;
private boolean BreakoutGame_SC_INIT_received_display_displayReadyvar8_var;
private int BreakoutGame_period_var;
private boolean BreakoutGame_trackMemory_var;
private int BreakoutGame_prevPY_var;
private int BreakoutGame_BRICK_HEIGHT_var;
private byte BreakoutGame_SC_INIT_display_displayReady_var8_var;
private int BreakoutGame_SC_controller_position_bis_x_var;
private boolean BreakoutGame_SC_received_controller_position_bis__var;
private int BreakoutGame_RIGHT_var;
private int BreakoutGame_prevPX_var;
private byte BreakoutGame_SC_controller_position_bis_var11_var;
private int BreakoutGame_prevBX_var;
private int BreakoutGame_br_var;
private int BreakoutGame_pady_var;
private boolean BreakoutGame_SC_received_controller_positionxvar11_var;
private boolean BreakoutGame_SC_received_controller_position_bisxvar11y_var;
private int BreakoutGame_BOTTOM_var;
private int BreakoutGame_dy_var;
private int BreakoutGame_level_var;
private long BreakoutGame_bytesSentCounter_var;
private long BreakoutGame_stopTime_var;
private boolean BreakoutGame_SC_received_controller_positiony_var;
private int BreakoutGame_counter_var;
private byte BreakoutGame_SC_INIT_display_displayReady_bis_var8_var;
private int BreakoutGame_LEFT_var;
private int BreakoutGame_YMAX_var;
private int[] BreakoutGame_fgcolor_var;
private int[] BreakoutGame_bricks_var;
private int BreakoutGame_dx_var;
//Ports
private Port clock_port;
private Port display_port;
private Port controller_port;
private Port ia_port;
private Port game_port;
//Message types
protected final Timer_cancelMessageType timer_cancelType = new Timer_cancelMessageType();
protected final Timer_timeoutMessageType timer_timeoutType = new Timer_timeoutMessageType();
protected final Timer_startMessageType timer_startType = new Timer_startMessageType();
protected final Destroy_bisvar6MessageType destroy_bisvar6Type = new Destroy_bisvar6MessageType();
protected final CreatexsizeMessageType createxsizeType = new CreatexsizeMessageType();
protected final FillRect_bisyvar2xMessageType fillRect_bisyvar2xType = new FillRect_bisyvar2xMessageType();
protected final DrawRect_bisyheightMessageType drawRect_bisyheightType = new DrawRect_bisyheightMessageType();
protected final DrawThingMLvar10xMessageType drawThingMLvar10xType = new DrawThingMLvar10xMessageType();
protected final Clear_MessageType clear_Type = new Clear_MessageType();
protected final SetBGColor_bisrbMessageType setBGColor_bisrbType = new SetBGColor_bisrbMessageType();
protected final Destroy_MessageType destroy_Type = new Destroy_MessageType();
protected final FillRectxwidthheightMessageType fillRectxwidthheightType = new FillRectxwidthheightMessageType();
protected final DisplayReadyvar8MessageType displayReadyvar8Type = new DisplayReadyvar8MessageType();
protected final Update_MessageType update_Type = new Update_MessageType();
protected final SetBGColorrbMessageType setBGColorrbType = new SetBGColorrbMessageType();
protected final SetBGColorvar5gMessageType setBGColorvar5gType = new SetBGColorvar5gMessageType();
protected final SetColorgMessageType setColorgType = new SetColorgMessageType();
protected final FillRectyvar2MessageType fillRectyvar2Type = new FillRectyvar2MessageType();
protected final Createysizevar9MessageType createysizevar9Type = new Createysizevar9MessageType();
protected final Update_bis_MessageType update_bis_Type = new Update_bis_MessageType();
protected final SetColor_bisrMessageType setColor_bisrType = new SetColor_bisrMessageType();
protected final DisplayReady_bis_MessageType displayReady_bis_Type = new DisplayReady_bis_MessageType();
protected final Clear_bisvar1MessageType clear_bisvar1Type = new Clear_bisvar1MessageType();
protected final Create_bisvar9xsizeMessageType create_bisvar9xsizeType = new Create_bisvar9xsizeMessageType();
protected final DrawRect_biswidthxvar3MessageType drawRect_biswidthxvar3Type = new DrawRect_biswidthxvar3MessageType();
protected final Destroyvar6MessageType destroyvar6Type = new Destroyvar6MessageType();
protected final DrawThingML_bisvar10xMessageType drawThingML_bisvar10xType = new DrawThingML_bisvar10xMessageType();
protected final Clear_bis_MessageType clear_bis_Type = new Clear_bis_MessageType();
protected final FillRect_biswidthheightMessageType fillRect_biswidthheightType = new FillRect_biswidthheightMessageType();
protected final SetColorrbvar7MessageType setColorrbvar7Type = new SetColorrbvar7MessageType();
protected final Updatevar4MessageType updatevar4Type = new Updatevar4MessageType();
protected final SetColor_bisbvar7gMessageType setColor_bisbvar7gType = new SetColor_bisbvar7gMessageType();
protected final DisplayReady_bisvar8MessageType displayReady_bisvar8Type = new DisplayReady_bisvar8MessageType();
protected final DrawIntegerdigitsscalevMessageType drawIntegerdigitsscalevType = new DrawIntegerdigitsscalevMessageType();
protected final Create_bisysizeMessageType create_bisysizeType = new Create_bisysizeMessageType();
protected final Destroy_bis_MessageType destroy_bis_Type = new Destroy_bis_MessageType();
protected final DisplayReady_MessageType displayReady_Type = new DisplayReady_MessageType();
protected final DrawRectwidthxMessageType drawRectwidthxType = new DrawRectwidthxMessageType();
protected final DrawInteger_bisscalevMessageType drawInteger_bisscalevType = new DrawInteger_bisscalevMessageType();
protected final DrawIntegervar0xyMessageType drawIntegervar0xyType = new DrawIntegervar0xyMessageType();
protected final DrawInteger_bisvar0xydigitsMessageType drawInteger_bisvar0xydigitsType = new DrawInteger_bisvar0xydigitsMessageType();
protected final DrawThingML_bisyMessageType drawThingML_bisyType = new DrawThingML_bisyMessageType();
protected final Clearvar1MessageType clearvar1Type = new Clearvar1MessageType();
protected final DrawThingMLyMessageType drawThingMLyType = new DrawThingMLyMessageType();
protected final Update_bisvar4MessageType update_bisvar4Type = new Update_bisvar4MessageType();
protected final SetBGColor_bisvar5gMessageType setBGColor_bisvar5gType = new SetBGColor_bisvar5gMessageType();
protected final DrawRectvar3yheightMessageType drawRectvar3yheightType = new DrawRectvar3yheightMessageType();
protected final Position_bis_MessageType position_bis_Type = new Position_bis_MessageType();
protected final PositionyMessageType positionyType = new PositionyMessageType();
protected final Velocityvar12dxMessageType velocityvar12dxType = new Velocityvar12dxMessageType();
protected final VelocitydyMessageType velocitydyType = new VelocitydyMessageType();
protected final Positionxvar11MessageType positionxvar11Type = new Positionxvar11MessageType();
protected final Velocity_bisdyMessageType velocity_bisdyType = new Velocity_bisdyMessageType();
protected final Position_bisxvar11yMessageType position_bisxvar11yType = new Position_bisxvar11yMessageType();
protected final Velocity_bisvar12dxMessageType velocity_bisvar12dxType = new Velocity_bisvar12dxMessageType();
protected final UpdateIAvar13padyballxballypadxMessageType updateIAvar13padyballxballypadxType = new UpdateIAvar13padyballxballypadxMessageType();
protected final UpdateIA_bisvar13padyballxballypadxMessageType updateIA_bisvar13padyballxballypadxType = new UpdateIA_bisvar13padyballxballypadxMessageType();
protected final UpdateIA_bis_MessageType updateIA_bis_Type = new UpdateIA_bis_MessageType();
protected final UpdateIA_MessageType updateIA_Type = new UpdateIA_MessageType();
protected final NextLevelMessageType nextLevelType = new NextLevelMessageType();
protected final LostBallMessageType lostBallType = new LostBallMessageType();
//Empty Constructor
public BreakoutGameJava() {
super();
}

//Getters and Setters for non readonly/final attributes
public int getBreakoutGame_SC_controller_position_x_var() {
return BreakoutGame_SC_controller_position_x_var;
}

public void setBreakoutGame_SC_controller_position_x_var(int BreakoutGame_SC_controller_position_x_var) {
this.BreakoutGame_SC_controller_position_x_var = BreakoutGame_SC_controller_position_x_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_x_var(int BreakoutGame_SC_controller_position_x_var) {
this.BreakoutGame_SC_controller_position_x_var = BreakoutGame_SC_controller_position_x_var;
return this;
}

public long getBreakoutGame_startTime_var() {
return BreakoutGame_startTime_var;
}

public void setBreakoutGame_startTime_var(long BreakoutGame_startTime_var) {
this.BreakoutGame_startTime_var = BreakoutGame_startTime_var;
}

public BreakoutGameJava initBreakoutGame_startTime_var(long BreakoutGame_startTime_var) {
this.BreakoutGame_startTime_var = BreakoutGame_startTime_var;
return this;
}

public boolean getBreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var() {
return BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var;
}

public void setBreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var(boolean BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var) {
this.BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var = BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var(boolean BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var) {
this.BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var = BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var;
return this;
}

public int getBreakoutGame_BRICK_ROWS_var() {
return BreakoutGame_BRICK_ROWS_var;
}

public BreakoutGameJava initBreakoutGame_BRICK_ROWS_var(int BreakoutGame_BRICK_ROWS_var) {
this.BreakoutGame_BRICK_ROWS_var = BreakoutGame_BRICK_ROWS_var;
return this;
}

public int getBreakoutGame_prevBY_var() {
return BreakoutGame_prevBY_var;
}

public void setBreakoutGame_prevBY_var(int BreakoutGame_prevBY_var) {
this.BreakoutGame_prevBY_var = BreakoutGame_prevBY_var;
}

public BreakoutGameJava initBreakoutGame_prevBY_var(int BreakoutGame_prevBY_var) {
this.BreakoutGame_prevBY_var = BreakoutGame_prevBY_var;
return this;
}

public int getBreakoutGame_by_var() {
return BreakoutGame_by_var;
}

public void setBreakoutGame_by_var(int BreakoutGame_by_var) {
this.BreakoutGame_by_var = BreakoutGame_by_var;
}

public BreakoutGameJava initBreakoutGame_by_var(int BreakoutGame_by_var) {
this.BreakoutGame_by_var = BreakoutGame_by_var;
return this;
}

public boolean getBreakoutGame_SC_INIT_received_display_displayReady__var() {
return BreakoutGame_SC_INIT_received_display_displayReady__var;
}

public void setBreakoutGame_SC_INIT_received_display_displayReady__var(boolean BreakoutGame_SC_INIT_received_display_displayReady__var) {
this.BreakoutGame_SC_INIT_received_display_displayReady__var = BreakoutGame_SC_INIT_received_display_displayReady__var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_received_display_displayReady__var(boolean BreakoutGame_SC_INIT_received_display_displayReady__var) {
this.BreakoutGame_SC_INIT_received_display_displayReady__var = BreakoutGame_SC_INIT_received_display_displayReady__var;
return this;
}

public boolean getBreakoutGame_SC_INIT_received_display_displayReady_bis__var() {
return BreakoutGame_SC_INIT_received_display_displayReady_bis__var;
}

public void setBreakoutGame_SC_INIT_received_display_displayReady_bis__var(boolean BreakoutGame_SC_INIT_received_display_displayReady_bis__var) {
this.BreakoutGame_SC_INIT_received_display_displayReady_bis__var = BreakoutGame_SC_INIT_received_display_displayReady_bis__var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_received_display_displayReady_bis__var(boolean BreakoutGame_SC_INIT_received_display_displayReady_bis__var) {
this.BreakoutGame_SC_INIT_received_display_displayReady_bis__var = BreakoutGame_SC_INIT_received_display_displayReady_bis__var;
return this;
}

public long getBreakoutGame_lastTimestamp_var() {
return BreakoutGame_lastTimestamp_var;
}

public void setBreakoutGame_lastTimestamp_var(long BreakoutGame_lastTimestamp_var) {
this.BreakoutGame_lastTimestamp_var = BreakoutGame_lastTimestamp_var;
}

public BreakoutGameJava initBreakoutGame_lastTimestamp_var(long BreakoutGame_lastTimestamp_var) {
this.BreakoutGame_lastTimestamp_var = BreakoutGame_lastTimestamp_var;
return this;
}

public int getBreakoutGame_SC_controller_position_bis_y_var() {
return BreakoutGame_SC_controller_position_bis_y_var;
}

public void setBreakoutGame_SC_controller_position_bis_y_var(int BreakoutGame_SC_controller_position_bis_y_var) {
this.BreakoutGame_SC_controller_position_bis_y_var = BreakoutGame_SC_controller_position_bis_y_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_bis_y_var(int BreakoutGame_SC_controller_position_bis_y_var) {
this.BreakoutGame_SC_controller_position_bis_y_var = BreakoutGame_SC_controller_position_bis_y_var;
return this;
}

public byte getBreakoutGame_SC_controller_position_var11_var() {
return BreakoutGame_SC_controller_position_var11_var;
}

public void setBreakoutGame_SC_controller_position_var11_var(byte BreakoutGame_SC_controller_position_var11_var) {
this.BreakoutGame_SC_controller_position_var11_var = BreakoutGame_SC_controller_position_var11_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_var11_var(byte BreakoutGame_SC_controller_position_var11_var) {
this.BreakoutGame_SC_controller_position_var11_var = BreakoutGame_SC_controller_position_var11_var;
return this;
}

public int getBreakoutGame_score_var() {
return BreakoutGame_score_var;
}

public void setBreakoutGame_score_var(int BreakoutGame_score_var) {
this.BreakoutGame_score_var = BreakoutGame_score_var;
}

public BreakoutGameJava initBreakoutGame_score_var(int BreakoutGame_score_var) {
this.BreakoutGame_score_var = BreakoutGame_score_var;
return this;
}

public int getBreakoutGame_SC_LAUNCH_countdown_var() {
return BreakoutGame_SC_LAUNCH_countdown_var;
}

public void setBreakoutGame_SC_LAUNCH_countdown_var(int BreakoutGame_SC_LAUNCH_countdown_var) {
this.BreakoutGame_SC_LAUNCH_countdown_var = BreakoutGame_SC_LAUNCH_countdown_var;
}

public BreakoutGameJava initBreakoutGame_SC_LAUNCH_countdown_var(int BreakoutGame_SC_LAUNCH_countdown_var) {
this.BreakoutGame_SC_LAUNCH_countdown_var = BreakoutGame_SC_LAUNCH_countdown_var;
return this;
}

public int getBreakoutGame_SC_controller_position_y_var() {
return BreakoutGame_SC_controller_position_y_var;
}

public void setBreakoutGame_SC_controller_position_y_var(int BreakoutGame_SC_controller_position_y_var) {
this.BreakoutGame_SC_controller_position_y_var = BreakoutGame_SC_controller_position_y_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_y_var(int BreakoutGame_SC_controller_position_y_var) {
this.BreakoutGame_SC_controller_position_y_var = BreakoutGame_SC_controller_position_y_var;
return this;
}

public int getBreakoutGame_SCALE_var() {
return BreakoutGame_SCALE_var;
}

public BreakoutGameJava initBreakoutGame_SCALE_var(int BreakoutGame_SCALE_var) {
this.BreakoutGame_SCALE_var = BreakoutGame_SCALE_var;
return this;
}

public int getBreakoutGame_lives_var() {
return BreakoutGame_lives_var;
}

public void setBreakoutGame_lives_var(int BreakoutGame_lives_var) {
this.BreakoutGame_lives_var = BreakoutGame_lives_var;
}

public BreakoutGameJava initBreakoutGame_lives_var(int BreakoutGame_lives_var) {
this.BreakoutGame_lives_var = BreakoutGame_lives_var;
return this;
}

public int getBreakoutGame_XDISPSIZE_var() {
return BreakoutGame_XDISPSIZE_var;
}

public BreakoutGameJava initBreakoutGame_XDISPSIZE_var(int BreakoutGame_XDISPSIZE_var) {
this.BreakoutGame_XDISPSIZE_var = BreakoutGame_XDISPSIZE_var;
return this;
}

public int getBreakoutGame_YDISPSIZE_var() {
return BreakoutGame_YDISPSIZE_var;
}

public BreakoutGameJava initBreakoutGame_YDISPSIZE_var(int BreakoutGame_YDISPSIZE_var) {
this.BreakoutGame_YDISPSIZE_var = BreakoutGame_YDISPSIZE_var;
return this;
}

public int getBreakoutGame_XMAX_var() {
return BreakoutGame_XMAX_var;
}

public BreakoutGameJava initBreakoutGame_XMAX_var(int BreakoutGame_XMAX_var) {
this.BreakoutGame_XMAX_var = BreakoutGame_XMAX_var;
return this;
}

public int getBreakoutGame_padx_var() {
return BreakoutGame_padx_var;
}

public void setBreakoutGame_padx_var(int BreakoutGame_padx_var) {
this.BreakoutGame_padx_var = BreakoutGame_padx_var;
}

public BreakoutGameJava initBreakoutGame_padx_var(int BreakoutGame_padx_var) {
this.BreakoutGame_padx_var = BreakoutGame_padx_var;
return this;
}

public int[] getBreakoutGame_bgcolor_var() {
return BreakoutGame_bgcolor_var;
}

public void setBreakoutGame_bgcolor_var(int[] BreakoutGame_bgcolor_var) {
this.BreakoutGame_bgcolor_var = BreakoutGame_bgcolor_var;
}

public BreakoutGameJava initBreakoutGame_bgcolor_var(int[] BreakoutGame_bgcolor_var) {
this.BreakoutGame_bgcolor_var = BreakoutGame_bgcolor_var;
return this;
}

public int getBreakoutGame_padlen_var() {
return BreakoutGame_padlen_var;
}

public void setBreakoutGame_padlen_var(int BreakoutGame_padlen_var) {
this.BreakoutGame_padlen_var = BreakoutGame_padlen_var;
}

public BreakoutGameJava initBreakoutGame_padlen_var(int BreakoutGame_padlen_var) {
this.BreakoutGame_padlen_var = BreakoutGame_padlen_var;
return this;
}

public int getBreakoutGame_TOP_var() {
return BreakoutGame_TOP_var;
}

public BreakoutGameJava initBreakoutGame_TOP_var(int BreakoutGame_TOP_var) {
this.BreakoutGame_TOP_var = BreakoutGame_TOP_var;
return this;
}

public int getBreakoutGame_bx_var() {
return BreakoutGame_bx_var;
}

public void setBreakoutGame_bx_var(int BreakoutGame_bx_var) {
this.BreakoutGame_bx_var = BreakoutGame_bx_var;
}

public BreakoutGameJava initBreakoutGame_bx_var(int BreakoutGame_bx_var) {
this.BreakoutGame_bx_var = BreakoutGame_bx_var;
return this;
}

public boolean getBreakoutGame_SC_INIT_received_display_displayReadyvar8_var() {
return BreakoutGame_SC_INIT_received_display_displayReadyvar8_var;
}

public void setBreakoutGame_SC_INIT_received_display_displayReadyvar8_var(boolean BreakoutGame_SC_INIT_received_display_displayReadyvar8_var) {
this.BreakoutGame_SC_INIT_received_display_displayReadyvar8_var = BreakoutGame_SC_INIT_received_display_displayReadyvar8_var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_received_display_displayReadyvar8_var(boolean BreakoutGame_SC_INIT_received_display_displayReadyvar8_var) {
this.BreakoutGame_SC_INIT_received_display_displayReadyvar8_var = BreakoutGame_SC_INIT_received_display_displayReadyvar8_var;
return this;
}

public int getBreakoutGame_period_var() {
return BreakoutGame_period_var;
}

public BreakoutGameJava initBreakoutGame_period_var(int BreakoutGame_period_var) {
this.BreakoutGame_period_var = BreakoutGame_period_var;
return this;
}

public boolean getBreakoutGame_trackMemory_var() {
return BreakoutGame_trackMemory_var;
}

public BreakoutGameJava initBreakoutGame_trackMemory_var(boolean BreakoutGame_trackMemory_var) {
this.BreakoutGame_trackMemory_var = BreakoutGame_trackMemory_var;
return this;
}

public int getBreakoutGame_prevPY_var() {
return BreakoutGame_prevPY_var;
}

public void setBreakoutGame_prevPY_var(int BreakoutGame_prevPY_var) {
this.BreakoutGame_prevPY_var = BreakoutGame_prevPY_var;
}

public BreakoutGameJava initBreakoutGame_prevPY_var(int BreakoutGame_prevPY_var) {
this.BreakoutGame_prevPY_var = BreakoutGame_prevPY_var;
return this;
}

public int getBreakoutGame_BRICK_HEIGHT_var() {
return BreakoutGame_BRICK_HEIGHT_var;
}

public BreakoutGameJava initBreakoutGame_BRICK_HEIGHT_var(int BreakoutGame_BRICK_HEIGHT_var) {
this.BreakoutGame_BRICK_HEIGHT_var = BreakoutGame_BRICK_HEIGHT_var;
return this;
}

public byte getBreakoutGame_SC_INIT_display_displayReady_var8_var() {
return BreakoutGame_SC_INIT_display_displayReady_var8_var;
}

public void setBreakoutGame_SC_INIT_display_displayReady_var8_var(byte BreakoutGame_SC_INIT_display_displayReady_var8_var) {
this.BreakoutGame_SC_INIT_display_displayReady_var8_var = BreakoutGame_SC_INIT_display_displayReady_var8_var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_display_displayReady_var8_var(byte BreakoutGame_SC_INIT_display_displayReady_var8_var) {
this.BreakoutGame_SC_INIT_display_displayReady_var8_var = BreakoutGame_SC_INIT_display_displayReady_var8_var;
return this;
}

public int getBreakoutGame_SC_controller_position_bis_x_var() {
return BreakoutGame_SC_controller_position_bis_x_var;
}

public void setBreakoutGame_SC_controller_position_bis_x_var(int BreakoutGame_SC_controller_position_bis_x_var) {
this.BreakoutGame_SC_controller_position_bis_x_var = BreakoutGame_SC_controller_position_bis_x_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_bis_x_var(int BreakoutGame_SC_controller_position_bis_x_var) {
this.BreakoutGame_SC_controller_position_bis_x_var = BreakoutGame_SC_controller_position_bis_x_var;
return this;
}

public boolean getBreakoutGame_SC_received_controller_position_bis__var() {
return BreakoutGame_SC_received_controller_position_bis__var;
}

public void setBreakoutGame_SC_received_controller_position_bis__var(boolean BreakoutGame_SC_received_controller_position_bis__var) {
this.BreakoutGame_SC_received_controller_position_bis__var = BreakoutGame_SC_received_controller_position_bis__var;
}

public BreakoutGameJava initBreakoutGame_SC_received_controller_position_bis__var(boolean BreakoutGame_SC_received_controller_position_bis__var) {
this.BreakoutGame_SC_received_controller_position_bis__var = BreakoutGame_SC_received_controller_position_bis__var;
return this;
}

public int getBreakoutGame_RIGHT_var() {
return BreakoutGame_RIGHT_var;
}

public BreakoutGameJava initBreakoutGame_RIGHT_var(int BreakoutGame_RIGHT_var) {
this.BreakoutGame_RIGHT_var = BreakoutGame_RIGHT_var;
return this;
}

public int getBreakoutGame_prevPX_var() {
return BreakoutGame_prevPX_var;
}

public void setBreakoutGame_prevPX_var(int BreakoutGame_prevPX_var) {
this.BreakoutGame_prevPX_var = BreakoutGame_prevPX_var;
}

public BreakoutGameJava initBreakoutGame_prevPX_var(int BreakoutGame_prevPX_var) {
this.BreakoutGame_prevPX_var = BreakoutGame_prevPX_var;
return this;
}

public byte getBreakoutGame_SC_controller_position_bis_var11_var() {
return BreakoutGame_SC_controller_position_bis_var11_var;
}

public void setBreakoutGame_SC_controller_position_bis_var11_var(byte BreakoutGame_SC_controller_position_bis_var11_var) {
this.BreakoutGame_SC_controller_position_bis_var11_var = BreakoutGame_SC_controller_position_bis_var11_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_bis_var11_var(byte BreakoutGame_SC_controller_position_bis_var11_var) {
this.BreakoutGame_SC_controller_position_bis_var11_var = BreakoutGame_SC_controller_position_bis_var11_var;
return this;
}

public int getBreakoutGame_prevBX_var() {
return BreakoutGame_prevBX_var;
}

public void setBreakoutGame_prevBX_var(int BreakoutGame_prevBX_var) {
this.BreakoutGame_prevBX_var = BreakoutGame_prevBX_var;
}

public BreakoutGameJava initBreakoutGame_prevBX_var(int BreakoutGame_prevBX_var) {
this.BreakoutGame_prevBX_var = BreakoutGame_prevBX_var;
return this;
}

public int getBreakoutGame_br_var() {
return BreakoutGame_br_var;
}

public BreakoutGameJava initBreakoutGame_br_var(int BreakoutGame_br_var) {
this.BreakoutGame_br_var = BreakoutGame_br_var;
return this;
}

public int getBreakoutGame_pady_var() {
return BreakoutGame_pady_var;
}

public void setBreakoutGame_pady_var(int BreakoutGame_pady_var) {
this.BreakoutGame_pady_var = BreakoutGame_pady_var;
}

public BreakoutGameJava initBreakoutGame_pady_var(int BreakoutGame_pady_var) {
this.BreakoutGame_pady_var = BreakoutGame_pady_var;
return this;
}

public boolean getBreakoutGame_SC_received_controller_positionxvar11_var() {
return BreakoutGame_SC_received_controller_positionxvar11_var;
}

public void setBreakoutGame_SC_received_controller_positionxvar11_var(boolean BreakoutGame_SC_received_controller_positionxvar11_var) {
this.BreakoutGame_SC_received_controller_positionxvar11_var = BreakoutGame_SC_received_controller_positionxvar11_var;
}

public BreakoutGameJava initBreakoutGame_SC_received_controller_positionxvar11_var(boolean BreakoutGame_SC_received_controller_positionxvar11_var) {
this.BreakoutGame_SC_received_controller_positionxvar11_var = BreakoutGame_SC_received_controller_positionxvar11_var;
return this;
}

public boolean getBreakoutGame_SC_received_controller_position_bisxvar11y_var() {
return BreakoutGame_SC_received_controller_position_bisxvar11y_var;
}

public void setBreakoutGame_SC_received_controller_position_bisxvar11y_var(boolean BreakoutGame_SC_received_controller_position_bisxvar11y_var) {
this.BreakoutGame_SC_received_controller_position_bisxvar11y_var = BreakoutGame_SC_received_controller_position_bisxvar11y_var;
}

public BreakoutGameJava initBreakoutGame_SC_received_controller_position_bisxvar11y_var(boolean BreakoutGame_SC_received_controller_position_bisxvar11y_var) {
this.BreakoutGame_SC_received_controller_position_bisxvar11y_var = BreakoutGame_SC_received_controller_position_bisxvar11y_var;
return this;
}

public int getBreakoutGame_BOTTOM_var() {
return BreakoutGame_BOTTOM_var;
}

public BreakoutGameJava initBreakoutGame_BOTTOM_var(int BreakoutGame_BOTTOM_var) {
this.BreakoutGame_BOTTOM_var = BreakoutGame_BOTTOM_var;
return this;
}

public int getBreakoutGame_dy_var() {
return BreakoutGame_dy_var;
}

public void setBreakoutGame_dy_var(int BreakoutGame_dy_var) {
this.BreakoutGame_dy_var = BreakoutGame_dy_var;
}

public BreakoutGameJava initBreakoutGame_dy_var(int BreakoutGame_dy_var) {
this.BreakoutGame_dy_var = BreakoutGame_dy_var;
return this;
}

public int getBreakoutGame_level_var() {
return BreakoutGame_level_var;
}

public void setBreakoutGame_level_var(int BreakoutGame_level_var) {
this.BreakoutGame_level_var = BreakoutGame_level_var;
}

public BreakoutGameJava initBreakoutGame_level_var(int BreakoutGame_level_var) {
this.BreakoutGame_level_var = BreakoutGame_level_var;
return this;
}

public long getBreakoutGame_bytesSentCounter_var() {
return BreakoutGame_bytesSentCounter_var;
}

public void setBreakoutGame_bytesSentCounter_var(long BreakoutGame_bytesSentCounter_var) {
this.BreakoutGame_bytesSentCounter_var = BreakoutGame_bytesSentCounter_var;
}

public BreakoutGameJava initBreakoutGame_bytesSentCounter_var(long BreakoutGame_bytesSentCounter_var) {
this.BreakoutGame_bytesSentCounter_var = BreakoutGame_bytesSentCounter_var;
return this;
}

public long getBreakoutGame_stopTime_var() {
return BreakoutGame_stopTime_var;
}

public void setBreakoutGame_stopTime_var(long BreakoutGame_stopTime_var) {
this.BreakoutGame_stopTime_var = BreakoutGame_stopTime_var;
}

public BreakoutGameJava initBreakoutGame_stopTime_var(long BreakoutGame_stopTime_var) {
this.BreakoutGame_stopTime_var = BreakoutGame_stopTime_var;
return this;
}

public boolean getBreakoutGame_SC_received_controller_positiony_var() {
return BreakoutGame_SC_received_controller_positiony_var;
}

public void setBreakoutGame_SC_received_controller_positiony_var(boolean BreakoutGame_SC_received_controller_positiony_var) {
this.BreakoutGame_SC_received_controller_positiony_var = BreakoutGame_SC_received_controller_positiony_var;
}

public BreakoutGameJava initBreakoutGame_SC_received_controller_positiony_var(boolean BreakoutGame_SC_received_controller_positiony_var) {
this.BreakoutGame_SC_received_controller_positiony_var = BreakoutGame_SC_received_controller_positiony_var;
return this;
}

public int getBreakoutGame_counter_var() {
return BreakoutGame_counter_var;
}

public void setBreakoutGame_counter_var(int BreakoutGame_counter_var) {
this.BreakoutGame_counter_var = BreakoutGame_counter_var;
}

public BreakoutGameJava initBreakoutGame_counter_var(int BreakoutGame_counter_var) {
this.BreakoutGame_counter_var = BreakoutGame_counter_var;
return this;
}

public byte getBreakoutGame_SC_INIT_display_displayReady_bis_var8_var() {
return BreakoutGame_SC_INIT_display_displayReady_bis_var8_var;
}

public void setBreakoutGame_SC_INIT_display_displayReady_bis_var8_var(byte BreakoutGame_SC_INIT_display_displayReady_bis_var8_var) {
this.BreakoutGame_SC_INIT_display_displayReady_bis_var8_var = BreakoutGame_SC_INIT_display_displayReady_bis_var8_var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_display_displayReady_bis_var8_var(byte BreakoutGame_SC_INIT_display_displayReady_bis_var8_var) {
this.BreakoutGame_SC_INIT_display_displayReady_bis_var8_var = BreakoutGame_SC_INIT_display_displayReady_bis_var8_var;
return this;
}

public int getBreakoutGame_LEFT_var() {
return BreakoutGame_LEFT_var;
}

public BreakoutGameJava initBreakoutGame_LEFT_var(int BreakoutGame_LEFT_var) {
this.BreakoutGame_LEFT_var = BreakoutGame_LEFT_var;
return this;
}

public int getBreakoutGame_YMAX_var() {
return BreakoutGame_YMAX_var;
}

public BreakoutGameJava initBreakoutGame_YMAX_var(int BreakoutGame_YMAX_var) {
this.BreakoutGame_YMAX_var = BreakoutGame_YMAX_var;
return this;
}

public int[] getBreakoutGame_fgcolor_var() {
return BreakoutGame_fgcolor_var;
}

public void setBreakoutGame_fgcolor_var(int[] BreakoutGame_fgcolor_var) {
this.BreakoutGame_fgcolor_var = BreakoutGame_fgcolor_var;
}

public BreakoutGameJava initBreakoutGame_fgcolor_var(int[] BreakoutGame_fgcolor_var) {
this.BreakoutGame_fgcolor_var = BreakoutGame_fgcolor_var;
return this;
}

public int[] getBreakoutGame_bricks_var() {
return BreakoutGame_bricks_var;
}

public void setBreakoutGame_bricks_var(int[] BreakoutGame_bricks_var) {
this.BreakoutGame_bricks_var = BreakoutGame_bricks_var;
}

public BreakoutGameJava initBreakoutGame_bricks_var(int[] BreakoutGame_bricks_var) {
this.BreakoutGame_bricks_var = BreakoutGame_bricks_var;
return this;
}

public int getBreakoutGame_dx_var() {
return BreakoutGame_dx_var;
}

public void setBreakoutGame_dx_var(int BreakoutGame_dx_var) {
this.BreakoutGame_dx_var = BreakoutGame_dx_var;
}

public BreakoutGameJava initBreakoutGame_dx_var(int BreakoutGame_dx_var) {
this.BreakoutGame_dx_var = BreakoutGame_dx_var;
return this;
}

//Getters for Ports
public Port getClock_port() {
return clock_port;
}
public Port getDisplay_port() {
return display_port;
}
public Port getController_port() {
return controller_port;
}
public Port getIa_port() {
return ia_port;
}
public Port getGame_port() {
return game_port;
}
private CompositeState buildBreakoutGame_SC(){
final AtomicState state_BreakoutGame_SC_INIT = new AtomicState("INIT");
state_BreakoutGame_SC_INIT.onEntry(()->{
BreakoutGame_startTime_var = (long) (timestamp());
if(rnd() < 133) {
if(rnd() < 61) {
sendCreateysizevar9_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendCreatexsize_via_display((byte) (rnd()), (int) (getBreakoutGame_XDISPSIZE_var()));

} else {
sendCreatexsize_via_display((byte) (rnd()), (int) (getBreakoutGame_XDISPSIZE_var()));
sendCreateysizevar9_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));

}

} else {
if(rnd() < 74) {
sendCreate_bisysize_via_display((byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendCreate_bisvar9xsize_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_XDISPSIZE_var()));

} else {
sendCreate_bisvar9xsize_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_XDISPSIZE_var()));
sendCreate_bisysize_via_display((byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));

}

}
});
final AtomicState state_BreakoutGame_SC_LAUNCH = new AtomicState("LAUNCH");
state_BreakoutGame_SC_LAUNCH.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
BreakoutGame_SC_LAUNCH_countdown_var = (int) (3);
drawScore();
drawLives();
if(rnd() < 28) {
if(rnd() < 33) {
sendUpdate__via_display((byte) (rnd()));
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate__via_display((byte) (rnd()));

}

} else {
if(rnd() < 45) {
sendUpdate_bis__via_display((byte) (rnd()));
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate_bis__via_display((byte) (rnd()));

}

}
});
final AtomicState state_BreakoutGame_SC_PLAY = new AtomicState("PLAY");
state_BreakoutGame_SC_PLAY.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
});
final AtomicState state_BreakoutGame_SC_LOSTBALL = new AtomicState("LOSTBALL");
state_BreakoutGame_SC_LOSTBALL.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
BreakoutGame_lives_var = (int) (getBreakoutGame_lives_var() - 1);
eraseBall();
erasePad();
drawLives();
if(rnd() < 167) {
if(rnd() < 185) {
sendUpdate__via_display((byte) (rnd()));
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate__via_display((byte) (rnd()));

}

} else {
if(rnd() < 151) {
sendUpdate_bis__via_display((byte) (rnd()));
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate_bis__via_display((byte) (rnd()));

}

}
log((boolean) (true));
});
final AtomicState state_BreakoutGame_SC_NEXTLEVEL = new AtomicState("NEXTLEVEL");
state_BreakoutGame_SC_NEXTLEVEL.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
BreakoutGame_level_var = (int) (getBreakoutGame_level_var() + 1);
drawLevel();
eraseBall();
erasePad();
if((getBreakoutGame_level_var() % 2) == 0 && getBreakoutGame_padlen_var() > 5 * getBreakoutGame_SCALE_var()) {
BreakoutGame_padlen_var = (int) (getBreakoutGame_padlen_var() - (4 * getBreakoutGame_SCALE_var()));

}
if((getBreakoutGame_level_var() % 2) == 1) {
BreakoutGame_dy_var = (int) ((getBreakoutGame_dy_var() * 3) / 2);

}
drawLives();
createBricks();
if(rnd() < 150) {
if(rnd() < 164) {
sendUpdate__via_display((byte) (rnd()));
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate__via_display((byte) (rnd()));

}

} else {
if(rnd() < 164) {
sendUpdate_bis__via_display((byte) (rnd()));
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate_bis__via_display((byte) (rnd()));

}

}
});
final FinalState state_BreakoutGame_SC_GAMEOVER = new FinalState("GAMEOVER");
state_BreakoutGame_SC_GAMEOVER.onEntry(()->{
eraseBall();
erasePad();
if(rnd() < 251) {
if(rnd() < 2) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (255), (int) (255));
sendSetColorg_via_display((byte) (rnd()), (int) (255));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (255));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (255), (int) (255));

}

} else {
if(rnd() < 28) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (255));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (255), (byte) (rnd()), (int) (255));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (255), (byte) (rnd()), (int) (255));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (255));

}

}
if(rnd() < 246) {
if(rnd() < 139) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (30));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (8), (int) (142), (int) (76));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (8), (int) (142), (int) (76));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (30));

}

} else {
if(rnd() < 198) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (30), (int) (8));
sendFillRect_biswidthheight_via_display((int) (142), (byte) (rnd()), (int) (76));

} else {
sendFillRect_biswidthheight_via_display((int) (142), (byte) (rnd()), (int) (76));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (30), (int) (8));

}

}
if(rnd() < 52) {
if(rnd() < 213) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 78) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 67) {
if(rnd() < 190) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (31));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (9), (int) (140), (int) (50));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (9), (int) (140), (int) (50));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (31));

}

} else {
if(rnd() < 225) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (31), (int) (9));
sendFillRect_biswidthheight_via_display((int) (140), (byte) (rnd()), (int) (50));

} else {
sendFillRect_biswidthheight_via_display((int) (140), (byte) (rnd()), (int) (50));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (31), (int) (9));

}

}
if(rnd() < 95) {
if(rnd() < 94) {
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()));
sendSetBGColorrb_via_display((int) (BreakoutGame_fgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetBGColorrb_via_display((int) (BreakoutGame_fgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()));

}

} else {
if(rnd() < 161) {
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

} else {
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));

}

}
if(rnd() < 92) {
if(rnd() < 142) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (158), (int) (130));
sendSetColorg_via_display((byte) (rnd()), (int) (209));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (209));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (158), (int) (130));

}

} else {
if(rnd() < 237) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (158));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (209), (byte) (rnd()), (int) (130));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (209), (byte) (rnd()), (int) (130));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (158));

}

}
if(rnd() < 118) {
if(rnd() < 224) {
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (23), (int) (40));
sendDrawIntegerdigitsscalev_via_display((int) (6), (int) (5), (byte) (rnd()), (int) (getBreakoutGame_score_var()));

} else {
sendDrawIntegerdigitsscalev_via_display((int) (6), (int) (5), (byte) (rnd()), (int) (getBreakoutGame_score_var()));
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (23), (int) (40));

}

} else {
if(rnd() < 50) {
sendDrawInteger_bisvar0xydigits_via_display((int) (5), (byte) (rnd()), (int) (40), (byte) (rnd()), (int) (23));
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (6), (int) (getBreakoutGame_score_var()));

} else {
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (6), (int) (getBreakoutGame_score_var()));
sendDrawInteger_bisvar0xydigits_via_display((int) (5), (byte) (rnd()), (int) (40), (byte) (rnd()), (int) (23));

}

}
if(rnd() < 224) {
if(rnd() < 65) {
sendDrawThingMLvar10x_via_display((byte) (rnd()), (byte) (rnd()), (int) (26));
sendDrawThingMLy_via_display((byte) (rnd()), (int) (87));

} else {
sendDrawThingMLy_via_display((byte) (rnd()), (int) (87));
sendDrawThingMLvar10x_via_display((byte) (rnd()), (byte) (rnd()), (int) (26));

}

} else {
if(rnd() < 193) {
sendDrawThingML_bisvar10x_via_display((int) (26), (byte) (rnd()), (byte) (rnd()));
sendDrawThingML_bisy_via_display((byte) (rnd()), (int) (87));

} else {
sendDrawThingML_bisy_via_display((byte) (rnd()), (int) (87));
sendDrawThingML_bisvar10x_via_display((int) (26), (byte) (rnd()), (byte) (rnd()));

}

}
if(rnd() < 85) {
if(rnd() < 61) {
sendUpdate__via_display((byte) (rnd()));
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate__via_display((byte) (rnd()));

}

} else {
if(rnd() < 40) {
sendUpdate_bis__via_display((byte) (rnd()));
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate_bis__via_display((byte) (rnd()));

}

}
log((boolean) (true));
BreakoutGame_stopTime_var = (long) (timestamp());
quit();
stop();
delete();
});
Handler h810593327 = new Handler();
h810593327.from(state_BreakoutGame_SC_INIT);
h810593327.event(displayReady_Type);
h810593327.guard((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
return  !(getBreakoutGame_SC_INIT_received_display_displayReadyvar8_var());
});

h810593327.port(display_port);
h810593327.action((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
BreakoutGame_SC_INIT_received_display_displayReady__var = (boolean) (true);
});

Handler h117911771 = new Handler();
h117911771.from(state_BreakoutGame_SC_INIT);
h117911771.event(displayReadyvar8Type);
h117911771.guard((Event e)->{
final DisplayReadyvar8MessageType.DisplayReadyvar8Message displayReadyvar8 = (DisplayReadyvar8MessageType.DisplayReadyvar8Message) e;
return  !(getBreakoutGame_SC_INIT_received_display_displayReady__var());
});

h117911771.port(display_port);
h117911771.action((Event e)->{
final DisplayReadyvar8MessageType.DisplayReadyvar8Message displayReadyvar8 = (DisplayReadyvar8MessageType.DisplayReadyvar8Message) e;
BreakoutGame_SC_INIT_received_display_displayReadyvar8_var = (boolean) (true);
});

Handler h1979825302 = new Handler();
h1979825302.from(state_BreakoutGame_SC_INIT);
h1979825302.event(displayReady_bis_Type);
h1979825302.guard((Event e)->{
final DisplayReady_bis_MessageType.DisplayReady_bis_Message displayReady_bis_ = (DisplayReady_bis_MessageType.DisplayReady_bis_Message) e;
return  !(getBreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var());
});

h1979825302.port(display_port);
h1979825302.action((Event e)->{
final DisplayReady_bis_MessageType.DisplayReady_bis_Message displayReady_bis_ = (DisplayReady_bis_MessageType.DisplayReady_bis_Message) e;
BreakoutGame_SC_INIT_received_display_displayReady_bis__var = (boolean) (true);
});

Handler h2050360660 = new Handler();
h2050360660.from(state_BreakoutGame_SC_INIT);
h2050360660.event(displayReady_bisvar8Type);
h2050360660.guard((Event e)->{
final DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message displayReady_bisvar8 = (DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message) e;
return  !(getBreakoutGame_SC_INIT_received_display_displayReady_bis__var());
});

h2050360660.port(display_port);
h2050360660.action((Event e)->{
final DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message displayReady_bisvar8 = (DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message) e;
BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var = (boolean) (true);
});

Transition h1293465402 = new Transition();
h1293465402.from(state_BreakoutGame_SC_INIT).to(state_BreakoutGame_SC_LAUNCH);
h1293465402.event(displayReady_Type);
h1293465402.guard((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
return getBreakoutGame_SC_INIT_received_display_displayReadyvar8_var();
});

h1293465402.port(display_port);
h1293465402.action((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
if(rnd() < 227) {
if(rnd() < 76) {
sendClear__via_display((byte) (rnd()));
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear__via_display((byte) (rnd()));

}

} else {
if(rnd() < 230) {
sendClear_bis__via_display((byte) (rnd()));
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear_bis__via_display((byte) (rnd()));

}

}
initColors();
if(rnd() < 99) {
if(rnd() < 21) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 15) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 9) {
if(rnd() < 142) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 195) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
if(rnd() < 69) {
if(rnd() < 66) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 109) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 151) {
if(rnd() < 152) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 255) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
drawWalls();
createBricks();
drawLevel();
BreakoutGame_SC_INIT_received_display_displayReady__var = (boolean) (false);
BreakoutGame_SC_INIT_received_display_displayReadyvar8_var = (boolean) (false);
});

Transition h445509811 = new Transition();
h445509811.from(state_BreakoutGame_SC_INIT).to(state_BreakoutGame_SC_LAUNCH);
h445509811.event(displayReadyvar8Type);
h445509811.guard((Event e)->{
final DisplayReadyvar8MessageType.DisplayReadyvar8Message displayReadyvar8 = (DisplayReadyvar8MessageType.DisplayReadyvar8Message) e;
return getBreakoutGame_SC_INIT_received_display_displayReady__var();
});

h445509811.port(display_port);
h445509811.action((Event e)->{
final DisplayReadyvar8MessageType.DisplayReadyvar8Message displayReadyvar8 = (DisplayReadyvar8MessageType.DisplayReadyvar8Message) e;
if(rnd() < 227) {
if(rnd() < 247) {
sendClear__via_display((byte) (rnd()));
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear__via_display((byte) (rnd()));

}

} else {
if(rnd() < 15) {
sendClear_bis__via_display((byte) (rnd()));
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear_bis__via_display((byte) (rnd()));

}

}
initColors();
if(rnd() < 99) {
if(rnd() < 161) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 150) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 9) {
if(rnd() < 141) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 145) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
if(rnd() < 69) {
if(rnd() < 139) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 169) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 151) {
if(rnd() < 51) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 232) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
drawWalls();
createBricks();
drawLevel();
BreakoutGame_SC_INIT_received_display_displayReadyvar8_var = (boolean) (false);
BreakoutGame_SC_INIT_received_display_displayReady__var = (boolean) (false);
});

Transition h1459040434 = new Transition();
h1459040434.from(state_BreakoutGame_SC_INIT).to(state_BreakoutGame_SC_LAUNCH);
h1459040434.event(displayReady_bis_Type);
h1459040434.guard((Event e)->{
final DisplayReady_bis_MessageType.DisplayReady_bis_Message displayReady_bis_ = (DisplayReady_bis_MessageType.DisplayReady_bis_Message) e;
return getBreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var();
});

h1459040434.port(display_port);
h1459040434.action((Event e)->{
final DisplayReady_bis_MessageType.DisplayReady_bis_Message displayReady_bis_ = (DisplayReady_bis_MessageType.DisplayReady_bis_Message) e;
if(rnd() < 227) {
if(rnd() < 255) {
sendClear__via_display((byte) (rnd()));
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear__via_display((byte) (rnd()));

}

} else {
if(rnd() < 63) {
sendClear_bis__via_display((byte) (rnd()));
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear_bis__via_display((byte) (rnd()));

}

}
initColors();
if(rnd() < 99) {
if(rnd() < 181) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 63) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 9) {
if(rnd() < 224) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 180) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
if(rnd() < 69) {
if(rnd() < 218) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 86) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 151) {
if(rnd() < 199) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 155) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
drawWalls();
createBricks();
drawLevel();
BreakoutGame_SC_INIT_received_display_displayReady_bis__var = (boolean) (false);
BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var = (boolean) (false);
});

Transition h224878495 = new Transition();
h224878495.from(state_BreakoutGame_SC_INIT).to(state_BreakoutGame_SC_LAUNCH);
h224878495.event(displayReady_bisvar8Type);
h224878495.guard((Event e)->{
final DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message displayReady_bisvar8 = (DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message) e;
return getBreakoutGame_SC_INIT_received_display_displayReady_bis__var();
});

h224878495.port(display_port);
h224878495.action((Event e)->{
final DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message displayReady_bisvar8 = (DisplayReady_bisvar8MessageType.DisplayReady_bisvar8Message) e;
if(rnd() < 227) {
if(rnd() < 55) {
sendClear__via_display((byte) (rnd()));
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClearvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear__via_display((byte) (rnd()));

}

} else {
if(rnd() < 80) {
sendClear_bis__via_display((byte) (rnd()));
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendClear_bisvar1_via_display((byte) (rnd()), (byte) (rnd()));
sendClear_bis__via_display((byte) (rnd()));

}

}
initColors();
if(rnd() < 99) {
if(rnd() < 224) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 6) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 9) {
if(rnd() < 213) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 115) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (getBreakoutGame_YDISPSIZE_var()));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
if(rnd() < 69) {
if(rnd() < 67) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 94) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 151) {
if(rnd() < 147) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (0), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (14));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (0));

}

} else {
if(rnd() < 118) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));

} else {
sendFillRect_biswidthheight_via_display((int) (getBreakoutGame_XDISPSIZE_var()), (byte) (rnd()), (int) (14));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (0), (int) (0));

}

}
drawWalls();
createBricks();
drawLevel();
BreakoutGame_SC_INIT_received_display_displayReady_bisvar8_var = (boolean) (false);
BreakoutGame_SC_INIT_received_display_displayReady_bis__var = (boolean) (false);
});

Handler h1369854401 = new Handler();
h1369854401.from(state_BreakoutGame_SC_LAUNCH);
h1369854401.event(timer_timeoutType);
h1369854401.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_SC_LAUNCH_countdown_var() > 0;
});

h1369854401.port(clock_port);
h1369854401.action((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
drawPad();
if((getBreakoutGame_SC_LAUNCH_countdown_var() % 30) == 0) {
drawCountDown((int) (getBreakoutGame_SC_LAUNCH_countdown_var() / 30));

}
BreakoutGame_SC_LAUNCH_countdown_var = (int) (getBreakoutGame_SC_LAUNCH_countdown_var() - 1);
if(rnd() < 167) {
if(rnd() < 10) {
sendUpdate__via_display((byte) (rnd()));
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate__via_display((byte) (rnd()));

}

} else {
if(rnd() < 173) {
sendUpdate_bis__via_display((byte) (rnd()));
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate_bis__via_display((byte) (rnd()));

}

}
});

Transition h1406324738 = new Transition();
h1406324738.from(state_BreakoutGame_SC_LAUNCH).to(state_BreakoutGame_SC_PLAY);
h1406324738.event(timer_timeoutType);
h1406324738.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_SC_LAUNCH_countdown_var() == 0;
});

h1406324738.port(clock_port);
h1406324738.action((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
drawCountDown((int) (0));
resetBall();
if(rnd() < 58) {
if(rnd() < 211) {
sendUpdate__via_display((byte) (rnd()));
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate__via_display((byte) (rnd()));

}

} else {
if(rnd() < 183) {
sendUpdate_bis__via_display((byte) (rnd()));
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate_bis__via_display((byte) (rnd()));

}

}
});

Handler h266376067 = new Handler();
h266376067.from(state_BreakoutGame_SC_PLAY);
h266376067.event(timer_timeoutType);
h266376067.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0;
});

h266376067.port(clock_port);
h266376067.action((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
BreakoutGame_bx_var = (int) (getBreakoutGame_bx_var() + getBreakoutGame_dx_var());
BreakoutGame_by_var = (int) (getBreakoutGame_by_var() + getBreakoutGame_dy_var());
int wl_var = (int) (getBreakoutGame_LEFT_var() + getBreakoutGame_br_var());

int wr_var = (int) (getBreakoutGame_RIGHT_var() - getBreakoutGame_br_var());

int wt_var = (int) (getBreakoutGame_TOP_var() + getBreakoutGame_br_var());

int wb_var = (int) (getBreakoutGame_BOTTOM_var() - getBreakoutGame_br_var());

if(getBreakoutGame_bx_var() < wl_var) {
BreakoutGame_dx_var = (int) ( -getBreakoutGame_dx_var());
BreakoutGame_bx_var = (int) (2 * wl_var - getBreakoutGame_bx_var());
incrementScore((int) ( -1));

} else {
if(getBreakoutGame_bx_var() > wr_var) {
BreakoutGame_dx_var = (int) ( -getBreakoutGame_dx_var());
BreakoutGame_bx_var = (int) (2 * wr_var - getBreakoutGame_bx_var());
incrementScore((int) ( -1));

}

}
if(getBreakoutGame_by_var() < wt_var) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());
BreakoutGame_by_var = (int) (2 * wt_var - getBreakoutGame_by_var());
incrementScore((int) ( -1));

} else {
if(getBreakoutGame_by_var() > wb_var) {
sendLostBall_via_game();

}

}
if(getBreakoutGame_dy_var() > 0) {
if(getBreakoutGame_by_var() > getBreakoutGame_pady_var() - getBreakoutGame_br_var() && getBreakoutGame_by_var() < getBreakoutGame_pady_var() + getBreakoutGame_br_var()) {
if(getBreakoutGame_bx_var() > getBreakoutGame_padx_var() - getBreakoutGame_padlen_var() / 2 && getBreakoutGame_bx_var() < getBreakoutGame_padx_var() + getBreakoutGame_padlen_var() / 2) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());
BreakoutGame_by_var = (int) (2 * (getBreakoutGame_pady_var() - getBreakoutGame_br_var()) - getBreakoutGame_by_var());
BreakoutGame_dx_var = (int) (getBreakoutGame_dx_var() / 4 + (getBreakoutGame_bx_var() - getBreakoutGame_padx_var()) / 4);

}

}

}
boolean collision_var = (boolean) (collideBrick((int) (getBreakoutGame_bx_var() - getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() - getBreakoutGame_br_var())) || collideBrick((int) (getBreakoutGame_bx_var() + getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() - getBreakoutGame_br_var())) || collideBrick((int) (getBreakoutGame_bx_var() + getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() + getBreakoutGame_br_var())) || collideBrick((int) (getBreakoutGame_bx_var() - getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() + getBreakoutGame_br_var())));

if(collision_var) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());
incrementScore((int) (10));
if(bricksLeft() == 0) {
sendNextLevel_via_game();

}

}
drawBall();
drawPad();
if(rnd() < 30) {
if(rnd() < 147) {
sendUpdateIA__via_ia((byte) (rnd()));
sendUpdateIAvar13padyballxballypadx_via_ia((byte) (rnd()), (int) (getBreakoutGame_pady_var()), (byte) (rnd()), (int) (getBreakoutGame_padx_var()), (int) (getBreakoutGame_bx_var()), (int) (getBreakoutGame_by_var()));

} else {
sendUpdateIAvar13padyballxballypadx_via_ia((byte) (rnd()), (int) (getBreakoutGame_pady_var()), (byte) (rnd()), (int) (getBreakoutGame_padx_var()), (int) (getBreakoutGame_bx_var()), (int) (getBreakoutGame_by_var()));
sendUpdateIA__via_ia((byte) (rnd()));

}

} else {
if(rnd() < 190) {
sendUpdateIA_bis__via_ia((byte) (rnd()));
sendUpdateIA_bisvar13padyballxballypadx_via_ia((byte) (rnd()), (int) (getBreakoutGame_by_var()), (int) (getBreakoutGame_bx_var()), (byte) (rnd()), (int) (getBreakoutGame_padx_var()), (int) (getBreakoutGame_pady_var()));

} else {
sendUpdateIA_bisvar13padyballxballypadx_via_ia((byte) (rnd()), (int) (getBreakoutGame_by_var()), (int) (getBreakoutGame_bx_var()), (byte) (rnd()), (int) (getBreakoutGame_padx_var()), (int) (getBreakoutGame_pady_var()));
sendUpdateIA_bis__via_ia((byte) (rnd()));

}

}
if(rnd() < 253) {
if(rnd() < 234) {
sendUpdate__via_display((byte) (rnd()));
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdatevar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate__via_display((byte) (rnd()));

}

} else {
if(rnd() < 237) {
sendUpdate_bis__via_display((byte) (rnd()));
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));

} else {
sendUpdate_bisvar4_via_display((byte) (rnd()), (byte) (rnd()));
sendUpdate_bis__via_display((byte) (rnd()));

}

}
log((boolean) (false));
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
});

Transition h1338074614 = new Transition();
h1338074614.from(state_BreakoutGame_SC_PLAY).to(state_BreakoutGame_SC_LOSTBALL);
h1338074614.event(lostBallType);
h1338074614.port(game_port);
h1338074614.action((Event e)->{
sendTimer_cancel_via_clock((int) (0));
});

Transition h745835029 = new Transition();
h745835029.from(state_BreakoutGame_SC_PLAY).to(state_BreakoutGame_SC_NEXTLEVEL);
h745835029.event(nextLevelType);
h745835029.port(game_port);
h745835029.action((Event e)->{
sendTimer_cancel_via_clock((int) (0));
});

Transition h1958242673 = new Transition();
h1958242673.from(state_BreakoutGame_SC_LOSTBALL).to(state_BreakoutGame_SC_LAUNCH);
h1958242673.event(timer_timeoutType);
h1958242673.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_lives_var() > 0;
});

h1958242673.port(clock_port);
Transition h190605872 = new Transition();
h190605872.from(state_BreakoutGame_SC_LOSTBALL).to(state_BreakoutGame_SC_GAMEOVER);
h190605872.event(timer_timeoutType);
h190605872.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_lives_var() == 0;
});

h190605872.port(clock_port);
Transition h987263357 = new Transition();
h987263357.from(state_BreakoutGame_SC_NEXTLEVEL).to(state_BreakoutGame_SC_LAUNCH);
h987263357.event(timer_timeoutType);
h987263357.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0;
});

h987263357.port(clock_port);
final CompositeState state_BreakoutGame_SC = new CompositeState("SC");
state_BreakoutGame_SC.onEntry(()->{
//reset properties
this.setBreakoutGame_SC_controller_position_x_var((int)0);
this.setBreakoutGame_SC_controller_position_var11_var((byte)0);
this.setBreakoutGame_SC_controller_position_y_var((int)0);
this.setBreakoutGame_SC_received_controller_positionxvar11_var((boolean)false);
this.setBreakoutGame_SC_received_controller_positiony_var((boolean)false);
this.setBreakoutGame_SC_controller_position_bis_x_var((int)0);
this.setBreakoutGame_SC_controller_position_bis_var11_var((byte)0);
this.setBreakoutGame_SC_controller_position_bis_y_var((int)0);
this.setBreakoutGame_SC_received_controller_position_bis__var((boolean)false);
this.setBreakoutGame_SC_received_controller_position_bisxvar11y_var((boolean)false);
});
Handler h548093498 = new Handler();
h548093498.from(state_BreakoutGame_SC);
h548093498.event(positionxvar11Type);
h548093498.port(controller_port);
h548093498.action((Event e)->{
final Positionxvar11MessageType.Positionxvar11Message positionxvar11 = (Positionxvar11MessageType.Positionxvar11Message) e;
BreakoutGame_SC_received_controller_positionxvar11_var = (boolean) (true);
BreakoutGame_SC_controller_position_x_var = (int) (positionxvar11.x);
BreakoutGame_SC_controller_position_var11_var = (byte) (positionxvar11.var11);
if(getBreakoutGame_SC_received_controller_positiony_var()) {
long center_var = (long) ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var() - getBreakoutGame_padlen_var()));

center_var = (long) (getBreakoutGame_SC_controller_position_x_var() * center_var);
center_var = (long) (center_var / 200);
BreakoutGame_padx_var = (int) ((getBreakoutGame_LEFT_var() + center_var + (getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 2));
BreakoutGame_SC_received_controller_positionxvar11_var = (boolean) (false);
BreakoutGame_SC_received_controller_positiony_var = (boolean) (false);

}
});

Handler h13063602 = new Handler();
h13063602.from(state_BreakoutGame_SC);
h13063602.event(positionyType);
h13063602.port(controller_port);
h13063602.action((Event e)->{
final PositionyMessageType.PositionyMessage positiony = (PositionyMessageType.PositionyMessage) e;
BreakoutGame_SC_received_controller_positiony_var = (boolean) (true);
BreakoutGame_SC_controller_position_y_var = (int) (positiony.y);
if(getBreakoutGame_SC_received_controller_positionxvar11_var()) {
long center_var = (long) ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var() - getBreakoutGame_padlen_var()));

center_var = (long) (getBreakoutGame_SC_controller_position_x_var() * center_var);
center_var = (long) (center_var / 200);
BreakoutGame_padx_var = (int) ((getBreakoutGame_LEFT_var() + center_var + (getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 2));
BreakoutGame_SC_received_controller_positiony_var = (boolean) (false);
BreakoutGame_SC_received_controller_positionxvar11_var = (boolean) (false);

}
});

Handler h1010584177 = new Handler();
h1010584177.from(state_BreakoutGame_SC);
h1010584177.event(position_bis_Type);
h1010584177.port(controller_port);
h1010584177.action((Event e)->{
final Position_bis_MessageType.Position_bis_Message position_bis_ = (Position_bis_MessageType.Position_bis_Message) e;
BreakoutGame_SC_received_controller_position_bis__var = (boolean) (true);
if(getBreakoutGame_SC_received_controller_position_bisxvar11y_var()) {
long center_var = (long) ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var() - getBreakoutGame_padlen_var()));

center_var = (long) (getBreakoutGame_SC_controller_position_bis_x_var() * center_var);
center_var = (long) (center_var / 200);
BreakoutGame_padx_var = (int) ((getBreakoutGame_LEFT_var() + center_var + (getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 2));
BreakoutGame_SC_received_controller_position_bis__var = (boolean) (false);
BreakoutGame_SC_received_controller_position_bisxvar11y_var = (boolean) (false);

}
});

Handler h999427036 = new Handler();
h999427036.from(state_BreakoutGame_SC);
h999427036.event(position_bisxvar11yType);
h999427036.port(controller_port);
h999427036.action((Event e)->{
final Position_bisxvar11yMessageType.Position_bisxvar11yMessage position_bisxvar11y = (Position_bisxvar11yMessageType.Position_bisxvar11yMessage) e;
BreakoutGame_SC_received_controller_position_bisxvar11y_var = (boolean) (true);
BreakoutGame_SC_controller_position_bis_x_var = (int) (position_bisxvar11y.x);
BreakoutGame_SC_controller_position_bis_var11_var = (byte) (position_bisxvar11y.var11);
BreakoutGame_SC_controller_position_bis_y_var = (int) (position_bisxvar11y.y);
if(getBreakoutGame_SC_received_controller_position_bis__var()) {
long center_var = (long) ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var() - getBreakoutGame_padlen_var()));

center_var = (long) (getBreakoutGame_SC_controller_position_bis_x_var() * center_var);
center_var = (long) (center_var / 200);
BreakoutGame_padx_var = (int) ((getBreakoutGame_LEFT_var() + center_var + (getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 2));
BreakoutGame_SC_received_controller_position_bisxvar11y_var = (boolean) (false);
BreakoutGame_SC_received_controller_position_bis__var = (boolean) (false);

}
});

state_BreakoutGame_SC.add(state_BreakoutGame_SC_INIT);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_LAUNCH);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_PLAY);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_LOSTBALL);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_NEXTLEVEL);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_GAMEOVER);
state_BreakoutGame_SC.initial(state_BreakoutGame_SC_INIT);
return state_BreakoutGame_SC;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
clock_port = new Port("clock", this);
display_port = new Port("display", this);
controller_port = new Port("controller", this);
ia_port = new Port("ia", this);
game_port = new Port("game", this);
} else {
clock_port = ((BreakoutGameJava)root).clock_port;
display_port = ((BreakoutGameJava)root).display_port;
controller_port = ((BreakoutGameJava)root).controller_port;
ia_port = ((BreakoutGameJava)root).ia_port;
game_port = ((BreakoutGameJava)root).game_port;
}
if (session == null){
//Init state machine
behavior = buildBreakoutGame_SC();
}
return this;
}

 void log(final boolean BreakoutGame_log_logMem_var) {
if(getBreakoutGame_counter_var() == 0 || BreakoutGame_log_logMem_var) {
long ts_var = 0;
if(getBreakoutGame_lastTimestamp_var() == 0) {
ts_var = (long) (0);
BreakoutGame_lastTimestamp_var = (long) (timestamp());

} else {
long t_var = (long) (timestamp());

ts_var = (long) (t_var - getBreakoutGame_lastTimestamp_var());
BreakoutGame_lastTimestamp_var = (long) (t_var);

}
System.out.println(""+("ts:")+(ts_var)+(",lives:")+(getBreakoutGame_lives_var())+(",score:")+(getBreakoutGame_score_var())+(",level:")+(getBreakoutGame_level_var())+(",bx:")+(getBreakoutGame_bx_var())+(",by:")+(getBreakoutGame_by_var())+(",padx:")+(getBreakoutGame_padx_var()));
if(getBreakoutGame_trackMemory_var()) {
System.out.println(""+("#usedMem:")+(usedMemory()));

}

}
setBreakoutGame_counter_var((int)(getBreakoutGame_counter_var() + 1));
if(getBreakoutGame_counter_var() == 33) {
BreakoutGame_counter_var = (int) (0);

}
}
 void initColors() {
BreakoutGame_bgcolor_var[0] = (int) (53);
BreakoutGame_bgcolor_var[1] = (int) (40);
BreakoutGame_bgcolor_var[2] = (int) (120);
BreakoutGame_fgcolor_var[0] = (int) (107);
BreakoutGame_fgcolor_var[1] = (int) (94);
BreakoutGame_fgcolor_var[2] = (int) (174);
if(rnd() < 218) {
if(rnd() < 28) {
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()));
sendSetBGColorrb_via_display((int) (BreakoutGame_bgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetBGColorrb_via_display((int) (BreakoutGame_bgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()));

}

} else {
if(rnd() < 150) {
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

} else {
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));

}

}
if(rnd() < 133) {
if(rnd() < 132) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 202) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
}
 void resetBall() {
BreakoutGame_bx_var = (int) (getBreakoutGame_padx_var() - getBreakoutGame_br_var() / getBreakoutGame_SCALE_var());
BreakoutGame_by_var = (int) (getBreakoutGame_pady_var() - getBreakoutGame_br_var() / getBreakoutGame_SCALE_var());
BreakoutGame_dx_var = (int) ((getBreakoutGame_padx_var() + getBreakoutGame_prevBX_var() + getBreakoutGame_prevBY_var()) % 300 - 150);
if(getBreakoutGame_dy_var() > 0) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());

}
BreakoutGame_prevBX_var = (int) ( -1);
BreakoutGame_prevBY_var = (int) ( -1);
}
 void eraseBall() {
int bs_var = (int) ((getBreakoutGame_br_var() * 2) / getBreakoutGame_SCALE_var());

if(getBreakoutGame_prevBX_var() > 0) {
if(rnd() < 5) {
if(rnd() < 134) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 178) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 190) {
if(rnd() < 92) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevBX_var()), (int) (bs_var), (int) (bs_var));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevBX_var()), (int) (bs_var), (int) (bs_var));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()));

}

} else {
if(rnd() < 52) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()), (int) (getBreakoutGame_prevBX_var()));
sendFillRect_biswidthheight_via_display((int) (bs_var), (byte) (rnd()), (int) (bs_var));

} else {
sendFillRect_biswidthheight_via_display((int) (bs_var), (byte) (rnd()), (int) (bs_var));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()), (int) (getBreakoutGame_prevBX_var()));

}

}

}
BreakoutGame_prevBX_var = (int) ( -1);
BreakoutGame_prevBY_var = (int) ( -1);
}
 void drawBall() {
int bs_var = (int) ((getBreakoutGame_br_var() * 2) / getBreakoutGame_SCALE_var());

eraseBall();
BreakoutGame_prevBX_var = (int) ((getBreakoutGame_bx_var() - getBreakoutGame_br_var()) / getBreakoutGame_SCALE_var());
BreakoutGame_prevBY_var = (int) ((getBreakoutGame_by_var() - getBreakoutGame_br_var()) / getBreakoutGame_SCALE_var());
if(rnd() < 180) {
if(rnd() < 113) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (183), (int) (111));
sendSetColorg_via_display((byte) (rnd()), (int) (199));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (199));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (183), (int) (111));

}

} else {
if(rnd() < 65) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (183));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (199), (byte) (rnd()), (int) (111));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (199), (byte) (rnd()), (int) (111));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (183));

}

}
if(rnd() < 36) {
if(rnd() < 179) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevBX_var()), (int) (bs_var), (int) (bs_var));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevBX_var()), (int) (bs_var), (int) (bs_var));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()));

}

} else {
if(rnd() < 199) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()), (int) (getBreakoutGame_prevBX_var()));
sendFillRect_biswidthheight_via_display((int) (bs_var), (byte) (rnd()), (int) (bs_var));

} else {
sendFillRect_biswidthheight_via_display((int) (bs_var), (byte) (rnd()), (int) (bs_var));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevBY_var()), (int) (getBreakoutGame_prevBX_var()));

}

}
}
 void erasePad() {
int ps_var = (int) (getBreakoutGame_padlen_var() / getBreakoutGame_SCALE_var());

if(getBreakoutGame_prevPX_var() > 0) {
if(rnd() < 70) {
if(rnd() < 44) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 57) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 123) {
if(rnd() < 179) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevPX_var()), (int) (ps_var), (int) (4));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevPX_var()), (int) (ps_var), (int) (4));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()));

}

} else {
if(rnd() < 251) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()), (int) (getBreakoutGame_prevPX_var()));
sendFillRect_biswidthheight_via_display((int) (ps_var), (byte) (rnd()), (int) (4));

} else {
sendFillRect_biswidthheight_via_display((int) (ps_var), (byte) (rnd()), (int) (4));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()), (int) (getBreakoutGame_prevPX_var()));

}

}

}
}
 void drawPad() {
int ps_var = (int) (getBreakoutGame_padlen_var() / getBreakoutGame_SCALE_var());

erasePad();
BreakoutGame_prevPX_var = (int) ((getBreakoutGame_padx_var() - (getBreakoutGame_padlen_var() / 2)) / getBreakoutGame_SCALE_var());
BreakoutGame_prevPY_var = (int) (getBreakoutGame_pady_var() / getBreakoutGame_SCALE_var());
if(rnd() < 19) {
if(rnd() < 237) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 205) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 139) {
if(rnd() < 189) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevPX_var()), (int) (ps_var), (int) (4));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (getBreakoutGame_prevPX_var()), (int) (ps_var), (int) (4));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()));

}

} else {
if(rnd() < 214) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()), (int) (getBreakoutGame_prevPX_var()));
sendFillRect_biswidthheight_via_display((int) (ps_var), (byte) (rnd()), (int) (4));

} else {
sendFillRect_biswidthheight_via_display((int) (ps_var), (byte) (rnd()), (int) (4));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (getBreakoutGame_prevPY_var()), (int) (getBreakoutGame_prevPX_var()));

}

}
}
 void drawCountDown(final int BreakoutGame_drawCountDown_c_var) {
if(rnd() < 156) {
if(rnd() < 23) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 41) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(BreakoutGame_drawCountDown_c_var > 0) {
if(rnd() < 147) {
if(rnd() < 111) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 163) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 244) {
if(rnd() < 82) {
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()));
sendSetBGColorrb_via_display((int) (BreakoutGame_bgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetBGColorrb_via_display((int) (BreakoutGame_bgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()));

}

} else {
if(rnd() < 2) {
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

} else {
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));

}

}
if(rnd() < 52) {
if(rnd() < 167) {
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (80 - 6), (int) (90));
sendDrawIntegerdigitsscalev_via_display((int) (4), (int) (1), (byte) (rnd()), (int) (BreakoutGame_drawCountDown_c_var));

} else {
sendDrawIntegerdigitsscalev_via_display((int) (4), (int) (1), (byte) (rnd()), (int) (BreakoutGame_drawCountDown_c_var));
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (80 - 6), (int) (90));

}

} else {
if(rnd() < 161) {
sendDrawInteger_bisvar0xydigits_via_display((int) (1), (byte) (rnd()), (int) (90), (byte) (rnd()), (int) (80 - 6));
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (4), (int) (BreakoutGame_drawCountDown_c_var));

} else {
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (4), (int) (BreakoutGame_drawCountDown_c_var));
sendDrawInteger_bisvar0xydigits_via_display((int) (1), (byte) (rnd()), (int) (90), (byte) (rnd()), (int) (80 - 6));

}

}

} else {
if(rnd() < 70) {
if(rnd() < 95) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 53) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 159) {
if(rnd() < 233) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (90));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (80 - 6), (int) (12), (int) (20));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (80 - 6), (int) (12), (int) (20));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (90));

}

} else {
if(rnd() < 225) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (90), (int) (80 - 6));
sendFillRect_biswidthheight_via_display((int) (12), (byte) (rnd()), (int) (20));

} else {
sendFillRect_biswidthheight_via_display((int) (12), (byte) (rnd()), (int) (20));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (90), (int) (80 - 6));

}

}

}
}
 void drawWalls() {
if(rnd() < 48) {
if(rnd() < 77) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 181) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
final int left_var = (int) ((getBreakoutGame_LEFT_var() / getBreakoutGame_SCALE_var()));

final int right_var = (int) ((getBreakoutGame_RIGHT_var() / getBreakoutGame_SCALE_var()));

final int top_var = (int) ((getBreakoutGame_TOP_var() / getBreakoutGame_SCALE_var()));

final int bottom_var = (int) ((getBreakoutGame_BOTTOM_var() / getBreakoutGame_SCALE_var()));

final int xcenter_var = (int) (((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / getBreakoutGame_SCALE_var()));

final int ycenter_var = (int) (((getBreakoutGame_BOTTOM_var() - getBreakoutGame_TOP_var()) / getBreakoutGame_SCALE_var()));

if(rnd() < 47) {
if(rnd() < 206) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var - 1));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (left_var - 1), (int) (xcenter_var + 1), (int) (1));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (left_var - 1), (int) (xcenter_var + 1), (int) (1));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var - 1));

}

} else {
if(rnd() < 185) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var - 1), (int) (left_var - 1));
sendFillRect_biswidthheight_via_display((int) (xcenter_var + 1), (byte) (rnd()), (int) (1));

} else {
sendFillRect_biswidthheight_via_display((int) (xcenter_var + 1), (byte) (rnd()), (int) (1));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var - 1), (int) (left_var - 1));

}

}
if(rnd() < 0) {
if(rnd() < 109) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (bottom_var));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (left_var - 1), (int) (xcenter_var + 1), (int) (1));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (left_var - 1), (int) (xcenter_var + 1), (int) (1));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (bottom_var));

}

} else {
if(rnd() < 130) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (bottom_var), (int) (left_var - 1));
sendFillRect_biswidthheight_via_display((int) (xcenter_var + 1), (byte) (rnd()), (int) (1));

} else {
sendFillRect_biswidthheight_via_display((int) (xcenter_var + 1), (byte) (rnd()), (int) (1));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (bottom_var), (int) (left_var - 1));

}

}
if(rnd() < 2) {
if(rnd() < 14) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (left_var - 1), (int) (1), (int) (ycenter_var));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (left_var - 1), (int) (1), (int) (ycenter_var));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var));

}

} else {
if(rnd() < 252) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var), (int) (left_var - 1));
sendFillRect_biswidthheight_via_display((int) (1), (byte) (rnd()), (int) (ycenter_var));

} else {
sendFillRect_biswidthheight_via_display((int) (1), (byte) (rnd()), (int) (ycenter_var));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var), (int) (left_var - 1));

}

}
if(rnd() < 174) {
if(rnd() < 35) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (right_var), (int) (1), (int) (ycenter_var));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (right_var), (int) (1), (int) (ycenter_var));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var));

}

} else {
if(rnd() < 39) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var), (int) (right_var));
sendFillRect_biswidthheight_via_display((int) (1), (byte) (rnd()), (int) (ycenter_var));

} else {
sendFillRect_biswidthheight_via_display((int) (1), (byte) (rnd()), (int) (ycenter_var));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (top_var), (int) (right_var));

}

}
}
 boolean bitIsSet(final int BreakoutGame_bitIsSet_variable_var, final int BreakoutGame_bitIsSet_bit_var) {
return (boolean) ((((1 << BreakoutGame_bitIsSet_bit_var) & BreakoutGame_bitIsSet_variable_var) != 0));
}
 void createBricks() {
int y_var = (int) (0);

while(y_var < getBreakoutGame_BRICK_ROWS_var()) {
BreakoutGame_bricks_var[y_var] = (int) (0xFF);
int x_var = (int) (0);

while(x_var < 8) {
if(bitIsSet((int) (BreakoutGame_bricks_var[y_var]
), (int) (x_var))) {
drawBrick((int) (x_var), (int) (y_var));

}
x_var = (int) (x_var + 1);

}
y_var = (int) (y_var + 1);

}
}
 int bricksLeft() {
int result_var = (int) (0);

int y_var = (int) (0);

while(y_var < getBreakoutGame_BRICK_ROWS_var()) {
int x_var = (int) (0);

while(x_var < 8) {
if(bitIsSet((int) (BreakoutGame_bricks_var[y_var]
), (int) (x_var))) {
result_var = (int) (result_var + 1);

}
x_var = (int) (x_var + 1);

}
y_var = (int) (y_var + 1);

}
return (int) (result_var);
}
 void drawBrick(final int BreakoutGame_drawBrick_x_var, final int BreakoutGame_drawBrick_y_var) {
final int bx_var = (int) (((getBreakoutGame_LEFT_var() + ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) * BreakoutGame_drawBrick_x_var) / getBreakoutGame_SCALE_var() + 1));

final int by_var = (int) (((getBreakoutGame_TOP_var() + 20 * getBreakoutGame_SCALE_var() + getBreakoutGame_BRICK_HEIGHT_var() * BreakoutGame_drawBrick_y_var * getBreakoutGame_SCALE_var()) / getBreakoutGame_SCALE_var() + 1));

final int w_var = (int) ((((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) / getBreakoutGame_SCALE_var() - 2));

final int h_var = (int) ((getBreakoutGame_BRICK_HEIGHT_var() - 2));

if(rnd() < 41) {
if(rnd() < 152) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (155), (int) (89));
sendSetColorg_via_display((byte) (rnd()), (int) (103));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (103));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (155), (int) (89));

}

} else {
if(rnd() < 181) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (155));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (103), (byte) (rnd()), (int) (89));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (103), (byte) (rnd()), (int) (89));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (155));

}

}
if(rnd() < 124) {
if(rnd() < 242) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (bx_var), (int) (w_var), (int) (h_var));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (bx_var), (int) (w_var), (int) (h_var));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var));

}

} else {
if(rnd() < 210) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var), (int) (bx_var));
sendFillRect_biswidthheight_via_display((int) (w_var), (byte) (rnd()), (int) (h_var));

} else {
sendFillRect_biswidthheight_via_display((int) (w_var), (byte) (rnd()), (int) (h_var));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var), (int) (bx_var));

}

}
if(rnd() < 45) {
if(rnd() < 130) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (100), (int) (43));
sendSetColorg_via_display((byte) (rnd()), (int) (56));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (56));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (100), (int) (43));

}

} else {
if(rnd() < 31) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (100));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (56), (byte) (rnd()), (int) (43));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (56), (byte) (rnd()), (int) (43));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (100));

}

}
if(rnd() < 124) {
if(rnd() < 167) {
sendDrawRectwidthx_via_display((byte) (rnd()), (int) (bx_var), (int) (w_var));
sendDrawRectvar3yheight_via_display((byte) (rnd()), (int) (by_var), (int) (h_var), (byte) (rnd()));

} else {
sendDrawRectvar3yheight_via_display((byte) (rnd()), (int) (by_var), (int) (h_var), (byte) (rnd()));
sendDrawRectwidthx_via_display((byte) (rnd()), (int) (bx_var), (int) (w_var));

}

} else {
if(rnd() < 157) {
sendDrawRect_biswidthxvar3_via_display((byte) (rnd()), (byte) (rnd()), (int) (bx_var), (int) (w_var));
sendDrawRect_bisyheight_via_display((byte) (rnd()), (int) (by_var), (int) (h_var));

} else {
sendDrawRect_bisyheight_via_display((byte) (rnd()), (int) (by_var), (int) (h_var));
sendDrawRect_biswidthxvar3_via_display((byte) (rnd()), (byte) (rnd()), (int) (bx_var), (int) (w_var));

}

}
}
 void removeBrick(final int BreakoutGame_removeBrick_x_var, final int BreakoutGame_removeBrick_y_var) {
final int bx_var = (int) (((getBreakoutGame_LEFT_var() + ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) * BreakoutGame_removeBrick_x_var) / getBreakoutGame_SCALE_var() + 1));

final int by_var = (int) (((getBreakoutGame_TOP_var() + 20 * getBreakoutGame_SCALE_var() + getBreakoutGame_BRICK_HEIGHT_var() * BreakoutGame_removeBrick_y_var * getBreakoutGame_SCALE_var()) / getBreakoutGame_SCALE_var() + 1));

if(rnd() < 138) {
if(rnd() < 181) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 123) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 32) {
if(rnd() < 68) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (bx_var), (int) ((((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) / getBreakoutGame_SCALE_var() - 2)), (int) (getBreakoutGame_BRICK_HEIGHT_var() - 2));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (bx_var), (int) ((((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) / getBreakoutGame_SCALE_var() - 2)), (int) (getBreakoutGame_BRICK_HEIGHT_var() - 2));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var));

}

} else {
if(rnd() < 25) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var), (int) (bx_var));
sendFillRect_biswidthheight_via_display((int) ((((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) / getBreakoutGame_SCALE_var() - 2)), (byte) (rnd()), (int) (getBreakoutGame_BRICK_HEIGHT_var() - 2));

} else {
sendFillRect_biswidthheight_via_display((int) ((((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) / getBreakoutGame_SCALE_var() - 2)), (byte) (rnd()), (int) (getBreakoutGame_BRICK_HEIGHT_var() - 2));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (by_var), (int) (bx_var));

}

}
BreakoutGame_bricks_var[BreakoutGame_removeBrick_y_var] = (int) (unsetBit((int) (BreakoutGame_bricks_var[BreakoutGame_removeBrick_y_var]
), (int) (BreakoutGame_removeBrick_x_var)));
}
 boolean collideBrick(final int BreakoutGame_collideBrick_xpos_var, final int BreakoutGame_collideBrick_ypos_var) {
int bry_var = (int) ((BreakoutGame_collideBrick_ypos_var - getBreakoutGame_TOP_var() - 20 * getBreakoutGame_SCALE_var()) / (getBreakoutGame_BRICK_HEIGHT_var() * getBreakoutGame_SCALE_var()));

boolean result_var = (boolean) (false);

if(bry_var >= 0 && bry_var < getBreakoutGame_BRICK_ROWS_var()) {
int brx_var = (int) ((BreakoutGame_collideBrick_xpos_var - getBreakoutGame_LEFT_var()) / ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8));

if(bitIsSet((int) (BreakoutGame_bricks_var[bry_var]
), (int) (brx_var))) {
removeBrick((int) (brx_var), (int) (bry_var));
result_var = (boolean) (true);

}

}
return (boolean) (result_var);
}
 void drawLevel() {
if(rnd() < 249) {
if(rnd() < 16) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (158), (int) (130));
sendSetColorg_via_display((byte) (rnd()), (int) (209));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (209));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (158), (int) (130));

}

} else {
if(rnd() < 157) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (158));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (209), (byte) (rnd()), (int) (130));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (209), (byte) (rnd()), (int) (130));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (158));

}

}
if(rnd() < 33) {
if(rnd() < 151) {
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()));
sendSetBGColorrb_via_display((int) (BreakoutGame_fgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetBGColorrb_via_display((int) (BreakoutGame_fgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()));

}

} else {
if(rnd() < 7) {
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

} else {
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));

}

}
if(rnd() < 62) {
if(rnd() < 72) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));

}

} else {
if(rnd() < 151) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_bgcolor_var[0]
));

}

}
if(rnd() < 52) {
if(rnd() < 134) {
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (6), (int) (2));
sendDrawIntegerdigitsscalev_via_display((int) (2), (int) (2), (byte) (rnd()), (int) (getBreakoutGame_level_var()));

} else {
sendDrawIntegerdigitsscalev_via_display((int) (2), (int) (2), (byte) (rnd()), (int) (getBreakoutGame_level_var()));
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (6), (int) (2));

}

} else {
if(rnd() < 18) {
sendDrawInteger_bisvar0xydigits_via_display((int) (2), (byte) (rnd()), (int) (2), (byte) (rnd()), (int) (6));
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (2), (int) (getBreakoutGame_level_var()));

} else {
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (2), (int) (getBreakoutGame_level_var()));
sendDrawInteger_bisvar0xydigits_via_display((int) (2), (byte) (rnd()), (int) (2), (byte) (rnd()), (int) (6));

}

}
}
 void incrementScore(final int BreakoutGame_incrementScore_diff_var) {
BreakoutGame_score_var = (int) (getBreakoutGame_score_var() + BreakoutGame_incrementScore_diff_var);
if(getBreakoutGame_score_var() < 0) {
BreakoutGame_score_var = (int) (0);

}
drawScore();
}
 void drawScore() {
if(rnd() < 100) {
if(rnd() < 66) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (158), (int) (130));
sendSetColorg_via_display((byte) (rnd()), (int) (209));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (209));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (158), (int) (130));

}

} else {
if(rnd() < 18) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (158));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (209), (byte) (rnd()), (int) (130));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (209), (byte) (rnd()), (int) (130));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (158));

}

}
if(rnd() < 216) {
if(rnd() < 71) {
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()));
sendSetBGColorrb_via_display((int) (BreakoutGame_fgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetBGColorrb_via_display((int) (BreakoutGame_fgcolor_var[0]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetBGColorvar5g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()));

}

} else {
if(rnd() < 174) {
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

} else {
sendSetBGColor_bisrb_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetBGColor_bisvar5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (byte) (rnd()));

}

}
if(rnd() < 55) {
if(rnd() < 164) {
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (58), (int) (2));
sendDrawIntegerdigitsscalev_via_display((int) (2), (int) (5), (byte) (rnd()), (int) (getBreakoutGame_score_var()));

} else {
sendDrawIntegerdigitsscalev_via_display((int) (2), (int) (5), (byte) (rnd()), (int) (getBreakoutGame_score_var()));
sendDrawIntegervar0xy_via_display((byte) (rnd()), (byte) (rnd()), (int) (58), (int) (2));

}

} else {
if(rnd() < 71) {
sendDrawInteger_bisvar0xydigits_via_display((int) (5), (byte) (rnd()), (int) (2), (byte) (rnd()), (int) (58));
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (2), (int) (getBreakoutGame_score_var()));

} else {
sendDrawInteger_bisscalev_via_display((byte) (rnd()), (int) (2), (int) (getBreakoutGame_score_var()));
sendDrawInteger_bisvar0xydigits_via_display((int) (5), (byte) (rnd()), (int) (2), (byte) (rnd()), (int) (58));

}

}
}
 void drawLives() {
if(rnd() < 104) {
if(rnd() < 90) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));

}

} else {
if(rnd() < 154) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[1]
), (byte) (rnd()), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (BreakoutGame_fgcolor_var[0]
));

}

}
if(rnd() < 110) {
if(rnd() < 39) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (4));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (124), (int) (24 + 6), (int) (6));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (124), (int) (24 + 6), (int) (6));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (4));

}

} else {
if(rnd() < 217) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (4), (int) (124));
sendFillRect_biswidthheight_via_display((int) (24 + 6), (byte) (rnd()), (int) (6));

} else {
sendFillRect_biswidthheight_via_display((int) (24 + 6), (byte) (rnd()), (int) (6));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (4), (int) (124));

}

}
if(rnd() < 243) {
if(rnd() < 93) {
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (183), (int) (111));
sendSetColorg_via_display((byte) (rnd()), (int) (199));

} else {
sendSetColorg_via_display((byte) (rnd()), (int) (199));
sendSetColorrbvar7_via_display((byte) (rnd()), (byte) (rnd()), (int) (183), (int) (111));

}

} else {
if(rnd() < 90) {
sendSetColor_bisr_via_display((byte) (rnd()), (int) (183));
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (199), (byte) (rnd()), (int) (111));

} else {
sendSetColor_bisbvar7g_via_display((byte) (rnd()), (int) (199), (byte) (rnd()), (int) (111));
sendSetColor_bisr_via_display((byte) (rnd()), (int) (183));

}

}
int i_var = (int) (0);

while(i_var < getBreakoutGame_lives_var()) {
if(rnd() < 59) {
if(rnd() < 144) {
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (4));
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (124 + (2 - i_var) * 12), (int) (6), (int) (6));

} else {
sendFillRectxwidthheight_via_display((byte) (rnd()), (int) (124 + (2 - i_var) * 12), (int) (6), (int) (6));
sendFillRectyvar2_via_display((byte) (rnd()), (byte) (rnd()), (int) (4));

}

} else {
if(rnd() < 153) {
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (4), (int) (124 + (2 - i_var) * 12));
sendFillRect_biswidthheight_via_display((int) (6), (byte) (rnd()), (int) (6));

} else {
sendFillRect_biswidthheight_via_display((int) (6), (byte) (rnd()), (int) (6));
sendFillRect_bisyvar2x_via_display((byte) (rnd()), (byte) (rnd()), (int) (4), (int) (124 + (2 - i_var) * 12));

}

}
i_var = (int) (i_var + 1);

}
}
 byte rnd() {
return (byte) (Math.floor(Math.random() * Math.floor(246)) + 5);
}
 void quit() {
System.gc();
synchronized(System.out) {
System.out.println(""+(">sent ")+(getBreakoutGame_bytesSentCounter_var())+(" bytes."));
}
synchronized(System.out) {
System.out.println(""+(">done in ")+(getBreakoutGame_stopTime_var() - getBreakoutGame_startTime_var())+("ms!"));
}
log((boolean) (true));
System.exit(0);
}
 long timestamp() {
return (long) (System.currentTimeMillis());
}
 long usedMemory() {
System.gc();
return (long) (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory());
}
 int unsetBit(final int BreakoutGameJava_unsetBit_variable_var, final int BreakoutGameJava_unsetBit_bit_var) {
return (int) ((BreakoutGameJava_unsetBit_variable_var & ~(1 << BreakoutGameJava_unsetBit_bit_var)));
}
}
