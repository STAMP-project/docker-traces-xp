/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

/**
 * Definition for type : BreakoutGameJava
 **/
public class BreakoutGameJava extends Component implements IBreakoutGameJava_display, IBreakoutGameJava_game, IBreakoutGameJava_controller, IBreakoutGameJava_clock {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tbytesSentCounter = " + BreakoutGame_bytesSentCounter_var;
result += "\tstartTime = " + BreakoutGame_startTime_var;
result += "\tstopTime = " + BreakoutGame_stopTime_var;
result += "\tlastTimestamp = " + BreakoutGame_lastTimestamp_var;
result += "\tcounter = " + BreakoutGame_counter_var;
result += "\ttrackMemory = " + BreakoutGame_trackMemory_var;
result += "\tXDISPSIZE = " + BreakoutGame_XDISPSIZE_var;
result += "\tYDISPSIZE = " + BreakoutGame_YDISPSIZE_var;
result += "\tSCALE = " + BreakoutGame_SCALE_var;
result += "\tXMAX = " + BreakoutGame_XMAX_var;
result += "\tYMAX = " + BreakoutGame_YMAX_var;
result += "\tTOP = " + BreakoutGame_TOP_var;
result += "\tBOTTOM = " + BreakoutGame_BOTTOM_var;
result += "\tLEFT = " + BreakoutGame_LEFT_var;
result += "\tRIGHT = " + BreakoutGame_RIGHT_var;
result += "\tbr = " + BreakoutGame_br_var;
result += "\tbx = " + BreakoutGame_bx_var;
result += "\tby = " + BreakoutGame_by_var;
result += "\tdx = " + BreakoutGame_dx_var;
result += "\tdy = " + BreakoutGame_dy_var;
result += "\tpadx = " + BreakoutGame_padx_var;
result += "\tpady = " + BreakoutGame_pady_var;
result += "\tpadlen = " + BreakoutGame_padlen_var;
result += "\tprevBX = " + BreakoutGame_prevBX_var;
result += "\tprevBY = " + BreakoutGame_prevBY_var;
result += "\tbgcolor = " + BreakoutGame_bgcolor_var;
result += "\tfgcolor = " + BreakoutGame_fgcolor_var;
result += "\tperiod = " + BreakoutGame_period_var;
result += "\tprevPX = " + BreakoutGame_prevPX_var;
result += "\tprevPY = " + BreakoutGame_prevPY_var;
result += "\tBRICK_ROWS = " + BreakoutGame_BRICK_ROWS_var;
result += "\tBRICK_HEIGHT = " + BreakoutGame_BRICK_HEIGHT_var;
result += "\tbricks = " + BreakoutGame_bricks_var;
result += "\tscore = " + BreakoutGame_score_var;
result += "\tlives = " + BreakoutGame_lives_var;
result += "\tlevel = " + BreakoutGame_level_var;
result += "";
return result;
}

public synchronized void timer_timeout_via_clock(int TimerMsgs_timer_timeout_id_var){
final Event _msg = timer_timeoutType.instantiate(TimerMsgs_timer_timeout_id_var);
_msg.setPort(clock_port);
receive(_msg);
}

public synchronized void displayReady__via_display(byte DisplayMsgs_displayReady__val15_var){
final Event _msg = displayReady_Type.instantiate(DisplayMsgs_displayReady__val15_var);
_msg.setPort(display_port);
receive(_msg);
}

public synchronized void displayReadyval8_via_display(byte DisplayMsgs_displayReadyval8_val23_var, byte DisplayMsgs_displayReadyval8_val8_var){
final Event _msg = displayReadyval8Type.instantiate(DisplayMsgs_displayReadyval8_val23_var, DisplayMsgs_displayReadyval8_val8_var);
_msg.setPort(display_port);
receive(_msg);
}

public synchronized void positionx_via_controller(byte ControllerMsgs_positionx_val36_var, int ControllerMsgs_positionx_x_var){
final Event _msg = positionxType.instantiate(ControllerMsgs_positionx_val36_var, ControllerMsgs_positionx_x_var);
_msg.setPort(controller_port);
receive(_msg);
}

public synchronized void positionval11y_via_controller(byte ControllerMsgs_positionval11y_val11_var, byte ControllerMsgs_positionval11y_val37_var, int ControllerMsgs_positionval11y_y_var){
final Event _msg = positionval11yType.instantiate(ControllerMsgs_positionval11y_val11_var, ControllerMsgs_positionval11y_val37_var, ControllerMsgs_positionval11y_y_var);
_msg.setPort(controller_port);
receive(_msg);
}

public synchronized void lostBall_via_game(){
final Event _msg = lostBallType.instantiate();
_msg.setPort(game_port);
receive(_msg);
}

public synchronized void nextLevel_via_game(){
final Event _msg = nextLevelType.instantiate();
_msg.setPort(game_port);
receive(_msg);
}

private void sendTimer_start_via_clock(int TimerMsgs_timer_start_id_var, int TimerMsgs_timer_start_time_var){
clock_port.send(timer_startType.instantiate(TimerMsgs_timer_start_id_var, TimerMsgs_timer_start_time_var));
}

private void sendTimer_cancel_via_clock(int TimerMsgs_timer_cancel_id_var){
clock_port.send(timer_cancelType.instantiate(TimerMsgs_timer_cancel_id_var));
}

private void sendCreateysizeval9_via_display(byte DisplayMsgs_createysizeval9_val9_var, byte DisplayMsgs_createysizeval9_val25_var, int DisplayMsgs_createysizeval9_ysize_var){
display_port.send(createysizeval9Type.instantiate(DisplayMsgs_createysizeval9_val9_var, DisplayMsgs_createysizeval9_val25_var, DisplayMsgs_createysizeval9_ysize_var));
}

private void sendCreatexsize_via_display(byte DisplayMsgs_createxsize_val18_var, int DisplayMsgs_createxsize_xsize_var){
display_port.send(createxsizeType.instantiate(DisplayMsgs_createxsize_val18_var, DisplayMsgs_createxsize_xsize_var));
}

private void sendFillRectyval2_via_display(int DisplayMsgs_fillRectyval2_y_var, byte DisplayMsgs_fillRectyval2_val19_var, byte DisplayMsgs_fillRectyval2_val2_var){
display_port.send(fillRectyval2Type.instantiate(DisplayMsgs_fillRectyval2_y_var, DisplayMsgs_fillRectyval2_val19_var, DisplayMsgs_fillRectyval2_val2_var));
}

private void sendFillRectxwidthheight_via_display(int DisplayMsgs_fillRectxwidthheight_height_var, byte DisplayMsgs_fillRectxwidthheight_val17_var, int DisplayMsgs_fillRectxwidthheight_width_var, int DisplayMsgs_fillRectxwidthheight_x_var){
display_port.send(fillRectxwidthheightType.instantiate(DisplayMsgs_fillRectxwidthheight_height_var, DisplayMsgs_fillRectxwidthheight_val17_var, DisplayMsgs_fillRectxwidthheight_width_var, DisplayMsgs_fillRectxwidthheight_x_var));
}

private void sendDrawRectwidthx_via_display(int DisplayMsgs_drawRectwidthx_x_var, byte DisplayMsgs_drawRectwidthx_val20_var, int DisplayMsgs_drawRectwidthx_width_var){
display_port.send(drawRectwidthxType.instantiate(DisplayMsgs_drawRectwidthx_x_var, DisplayMsgs_drawRectwidthx_val20_var, DisplayMsgs_drawRectwidthx_width_var));
}

private void sendDrawRectval3yheight_via_display(byte DisplayMsgs_drawRectval3yheight_val3_var, int DisplayMsgs_drawRectval3yheight_y_var, byte DisplayMsgs_drawRectval3yheight_val28_var, int DisplayMsgs_drawRectval3yheight_height_var){
display_port.send(drawRectval3yheightType.instantiate(DisplayMsgs_drawRectval3yheight_val3_var, DisplayMsgs_drawRectval3yheight_y_var, DisplayMsgs_drawRectval3yheight_val28_var, DisplayMsgs_drawRectval3yheight_height_var));
}

private void sendClear__via_display(byte DisplayMsgs_clear__val26_var){
display_port.send(clear_Type.instantiate(DisplayMsgs_clear__val26_var));
}

private void sendClearval1_via_display(byte DisplayMsgs_clearval1_val27_var, byte DisplayMsgs_clearval1_val1_var){
display_port.send(clearval1Type.instantiate(DisplayMsgs_clearval1_val27_var, DisplayMsgs_clearval1_val1_var));
}

private void sendSetColorrbval7_via_display(int DisplayMsgs_setColorrbval7_b_var, byte DisplayMsgs_setColorrbval7_val14_var, byte DisplayMsgs_setColorrbval7_val7_var, int DisplayMsgs_setColorrbval7_r_var){
display_port.send(setColorrbval7Type.instantiate(DisplayMsgs_setColorrbval7_b_var, DisplayMsgs_setColorrbval7_val14_var, DisplayMsgs_setColorrbval7_val7_var, DisplayMsgs_setColorrbval7_r_var));
}

private void sendSetColorg_via_display(byte DisplayMsgs_setColorg_val32_var, int DisplayMsgs_setColorg_g_var){
display_port.send(setColorgType.instantiate(DisplayMsgs_setColorg_val32_var, DisplayMsgs_setColorg_g_var));
}

private void sendSetBGColorval5g_via_display(int DisplayMsgs_setBGColorval5g_g_var, byte DisplayMsgs_setBGColorval5g_val29_var, byte DisplayMsgs_setBGColorval5g_val5_var){
display_port.send(setBGColorval5gType.instantiate(DisplayMsgs_setBGColorval5g_g_var, DisplayMsgs_setBGColorval5g_val29_var, DisplayMsgs_setBGColorval5g_val5_var));
}

private void sendSetBGColorrb_via_display(byte DisplayMsgs_setBGColorrb_val31_var, int DisplayMsgs_setBGColorrb_r_var, int DisplayMsgs_setBGColorrb_b_var){
display_port.send(setBGColorrbType.instantiate(DisplayMsgs_setBGColorrb_val31_var, DisplayMsgs_setBGColorrb_r_var, DisplayMsgs_setBGColorrb_b_var));
}

private void sendDrawIntegerval0xy_via_display(byte DisplayMsgs_drawIntegerval0xy_val16_var, byte DisplayMsgs_drawIntegerval0xy_val0_var, int DisplayMsgs_drawIntegerval0xy_x_var, int DisplayMsgs_drawIntegerval0xy_y_var){
display_port.send(drawIntegerval0xyType.instantiate(DisplayMsgs_drawIntegerval0xy_val16_var, DisplayMsgs_drawIntegerval0xy_val0_var, DisplayMsgs_drawIntegerval0xy_x_var, DisplayMsgs_drawIntegerval0xy_y_var));
}

private void sendDrawIntegerdigitsscalev_via_display(int DisplayMsgs_drawIntegerdigitsscalev_v_var, int DisplayMsgs_drawIntegerdigitsscalev_digits_var, byte DisplayMsgs_drawIntegerdigitsscalev_val35_var, int DisplayMsgs_drawIntegerdigitsscalev_scale_var){
display_port.send(drawIntegerdigitsscalevType.instantiate(DisplayMsgs_drawIntegerdigitsscalev_v_var, DisplayMsgs_drawIntegerdigitsscalev_digits_var, DisplayMsgs_drawIntegerdigitsscalev_val35_var, DisplayMsgs_drawIntegerdigitsscalev_scale_var));
}

private void sendUpdate__via_display(byte DisplayMsgs_update__val30_var){
display_port.send(update_Type.instantiate(DisplayMsgs_update__val30_var));
}

private void sendUpdateval4_via_display(byte DisplayMsgs_updateval4_val21_var, byte DisplayMsgs_updateval4_val4_var){
display_port.send(updateval4Type.instantiate(DisplayMsgs_updateval4_val21_var, DisplayMsgs_updateval4_val4_var));
}

private void sendDrawThingMLval10x_via_display(byte DisplayMsgs_drawThingMLval10x_val24_var, int DisplayMsgs_drawThingMLval10x_x_var, byte DisplayMsgs_drawThingMLval10x_val10_var){
display_port.send(drawThingMLval10xType.instantiate(DisplayMsgs_drawThingMLval10x_val24_var, DisplayMsgs_drawThingMLval10x_x_var, DisplayMsgs_drawThingMLval10x_val10_var));
}

private void sendDrawThingMLy_via_display(byte DisplayMsgs_drawThingMLy_val33_var, int DisplayMsgs_drawThingMLy_y_var){
display_port.send(drawThingMLyType.instantiate(DisplayMsgs_drawThingMLy_val33_var, DisplayMsgs_drawThingMLy_y_var));
}

private void sendUpdateIAval13padyballx_via_ia(int IAControllerMsg_updateIAval13padyballx_ballx_var, byte IAControllerMsg_updateIAval13padyballx_val41_var, int IAControllerMsg_updateIAval13padyballx_pady_var, byte IAControllerMsg_updateIAval13padyballx_val13_var){
ia_port.send(updateIAval13padyballxType.instantiate(IAControllerMsg_updateIAval13padyballx_ballx_var, IAControllerMsg_updateIAval13padyballx_val41_var, IAControllerMsg_updateIAval13padyballx_pady_var, IAControllerMsg_updateIAval13padyballx_val13_var));
}

private void sendUpdateIAballypadx_via_ia(byte IAControllerMsg_updateIAballypadx_val40_var, int IAControllerMsg_updateIAballypadx_padx_var, int IAControllerMsg_updateIAballypadx_bally_var){
ia_port.send(updateIAballypadxType.instantiate(IAControllerMsg_updateIAballypadx_val40_var, IAControllerMsg_updateIAballypadx_padx_var, IAControllerMsg_updateIAballypadx_bally_var));
}

private void sendLostBall_via_game(){
game_port.send(lostBallType.instantiate());
}

private void sendNextLevel_via_game(){
game_port.send(nextLevelType.instantiate());
}

//Attributes
private int BreakoutGame_RIGHT_var;
private int BreakoutGame_YMAX_var;
private byte BreakoutGame_SC_controller_position_val11_var;
private int BreakoutGame_XMAX_var;
private int BreakoutGame_bx_var;
private int BreakoutGame_SC_controller_position_x_var;
private boolean BreakoutGame_SC_INIT_received_display_displayReadyval8_var;
private int BreakoutGame_padx_var;
private boolean BreakoutGame_SC_received_controller_positionval11y_var;
private long BreakoutGame_startTime_var;
private int BreakoutGame_dy_var;
private int BreakoutGame_pady_var;
private int BreakoutGame_prevPX_var;
private int BreakoutGame_prevBX_var;
private boolean BreakoutGame_trackMemory_var;
private int[] BreakoutGame_bgcolor_var;
private int BreakoutGame_by_var;
private int BreakoutGame_XDISPSIZE_var;
private int BreakoutGame_prevBY_var;
private int BreakoutGame_BOTTOM_var;
private long BreakoutGame_lastTimestamp_var;
private int BreakoutGame_BRICK_ROWS_var;
private int BreakoutGame_prevPY_var;
private int BreakoutGame_SCALE_var;
private int[] BreakoutGame_fgcolor_var;
private int BreakoutGame_period_var;
private boolean BreakoutGame_SC_received_controller_positionx_var;
private byte BreakoutGame_SC_INIT_display_displayReady_val8_var;
private int BreakoutGame_score_var;
private int BreakoutGame_YDISPSIZE_var;
private int BreakoutGame_TOP_var;
private long BreakoutGame_bytesSentCounter_var;
private int BreakoutGame_SC_LAUNCH_countdown_var;
private long BreakoutGame_stopTime_var;
private int BreakoutGame_BRICK_HEIGHT_var;
private int[] BreakoutGame_bricks_var;
private int BreakoutGame_counter_var;
private int BreakoutGame_dx_var;
private int BreakoutGame_lives_var;
private int BreakoutGame_padlen_var;
private int BreakoutGame_level_var;
private int BreakoutGame_LEFT_var;
private int BreakoutGame_br_var;
private boolean BreakoutGame_SC_INIT_received_display_displayReady__var;
private int BreakoutGame_SC_controller_position_y_var;
//Ports
private Port clock_port;
private Port display_port;
private Port controller_port;
private Port ia_port;
private Port game_port;
//Message types
protected final Timer_startMessageType timer_startType = new Timer_startMessageType();
protected final Timer_cancelMessageType timer_cancelType = new Timer_cancelMessageType();
protected final Timer_timeoutMessageType timer_timeoutType = new Timer_timeoutMessageType();
protected final SetColorrbval7MessageType setColorrbval7Type = new SetColorrbval7MessageType();
protected final DisplayReady_MessageType displayReady_Type = new DisplayReady_MessageType();
protected final DrawIntegerval0xyMessageType drawIntegerval0xyType = new DrawIntegerval0xyMessageType();
protected final FillRectxwidthheightMessageType fillRectxwidthheightType = new FillRectxwidthheightMessageType();
protected final CreatexsizeMessageType createxsizeType = new CreatexsizeMessageType();
protected final FillRectyval2MessageType fillRectyval2Type = new FillRectyval2MessageType();
protected final DrawRectwidthxMessageType drawRectwidthxType = new DrawRectwidthxMessageType();
protected final Updateval4MessageType updateval4Type = new Updateval4MessageType();
protected final Destroyval6MessageType destroyval6Type = new Destroyval6MessageType();
protected final DisplayReadyval8MessageType displayReadyval8Type = new DisplayReadyval8MessageType();
protected final DrawThingMLval10xMessageType drawThingMLval10xType = new DrawThingMLval10xMessageType();
protected final Createysizeval9MessageType createysizeval9Type = new Createysizeval9MessageType();
protected final Clear_MessageType clear_Type = new Clear_MessageType();
protected final Clearval1MessageType clearval1Type = new Clearval1MessageType();
protected final DrawRectval3yheightMessageType drawRectval3yheightType = new DrawRectval3yheightMessageType();
protected final SetBGColorval5gMessageType setBGColorval5gType = new SetBGColorval5gMessageType();
protected final Update_MessageType update_Type = new Update_MessageType();
protected final SetBGColorrbMessageType setBGColorrbType = new SetBGColorrbMessageType();
protected final SetColorgMessageType setColorgType = new SetColorgMessageType();
protected final DrawThingMLyMessageType drawThingMLyType = new DrawThingMLyMessageType();
protected final Destroy_MessageType destroy_Type = new Destroy_MessageType();
protected final DrawIntegerdigitsscalevMessageType drawIntegerdigitsscalevType = new DrawIntegerdigitsscalevMessageType();
protected final PositionxMessageType positionxType = new PositionxMessageType();
protected final Positionval11yMessageType positionval11yType = new Positionval11yMessageType();
protected final Velocityval12MessageType velocityval12Type = new Velocityval12MessageType();
protected final VelocitydxdyMessageType velocitydxdyType = new VelocitydxdyMessageType();
protected final UpdateIAballypadxMessageType updateIAballypadxType = new UpdateIAballypadxMessageType();
protected final UpdateIAval13padyballxMessageType updateIAval13padyballxType = new UpdateIAval13padyballxMessageType();
protected final NextLevelMessageType nextLevelType = new NextLevelMessageType();
protected final LostBallMessageType lostBallType = new LostBallMessageType();
//Empty Constructor
public BreakoutGameJava() {
super();
}

//Getters and Setters for non readonly/final attributes
public int getBreakoutGame_RIGHT_var() {
return BreakoutGame_RIGHT_var;
}

public BreakoutGameJava initBreakoutGame_RIGHT_var(int BreakoutGame_RIGHT_var) {
this.BreakoutGame_RIGHT_var = BreakoutGame_RIGHT_var;
return this;
}

public int getBreakoutGame_YMAX_var() {
return BreakoutGame_YMAX_var;
}

public BreakoutGameJava initBreakoutGame_YMAX_var(int BreakoutGame_YMAX_var) {
this.BreakoutGame_YMAX_var = BreakoutGame_YMAX_var;
return this;
}

public byte getBreakoutGame_SC_controller_position_val11_var() {
return BreakoutGame_SC_controller_position_val11_var;
}

public void setBreakoutGame_SC_controller_position_val11_var(byte BreakoutGame_SC_controller_position_val11_var) {
this.BreakoutGame_SC_controller_position_val11_var = BreakoutGame_SC_controller_position_val11_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_val11_var(byte BreakoutGame_SC_controller_position_val11_var) {
this.BreakoutGame_SC_controller_position_val11_var = BreakoutGame_SC_controller_position_val11_var;
return this;
}

public int getBreakoutGame_XMAX_var() {
return BreakoutGame_XMAX_var;
}

public BreakoutGameJava initBreakoutGame_XMAX_var(int BreakoutGame_XMAX_var) {
this.BreakoutGame_XMAX_var = BreakoutGame_XMAX_var;
return this;
}

public int getBreakoutGame_bx_var() {
return BreakoutGame_bx_var;
}

public void setBreakoutGame_bx_var(int BreakoutGame_bx_var) {
this.BreakoutGame_bx_var = BreakoutGame_bx_var;
}

public BreakoutGameJava initBreakoutGame_bx_var(int BreakoutGame_bx_var) {
this.BreakoutGame_bx_var = BreakoutGame_bx_var;
return this;
}

public int getBreakoutGame_SC_controller_position_x_var() {
return BreakoutGame_SC_controller_position_x_var;
}

public void setBreakoutGame_SC_controller_position_x_var(int BreakoutGame_SC_controller_position_x_var) {
this.BreakoutGame_SC_controller_position_x_var = BreakoutGame_SC_controller_position_x_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_x_var(int BreakoutGame_SC_controller_position_x_var) {
this.BreakoutGame_SC_controller_position_x_var = BreakoutGame_SC_controller_position_x_var;
return this;
}

public boolean getBreakoutGame_SC_INIT_received_display_displayReadyval8_var() {
return BreakoutGame_SC_INIT_received_display_displayReadyval8_var;
}

public void setBreakoutGame_SC_INIT_received_display_displayReadyval8_var(boolean BreakoutGame_SC_INIT_received_display_displayReadyval8_var) {
this.BreakoutGame_SC_INIT_received_display_displayReadyval8_var = BreakoutGame_SC_INIT_received_display_displayReadyval8_var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_received_display_displayReadyval8_var(boolean BreakoutGame_SC_INIT_received_display_displayReadyval8_var) {
this.BreakoutGame_SC_INIT_received_display_displayReadyval8_var = BreakoutGame_SC_INIT_received_display_displayReadyval8_var;
return this;
}

public int getBreakoutGame_padx_var() {
return BreakoutGame_padx_var;
}

public void setBreakoutGame_padx_var(int BreakoutGame_padx_var) {
this.BreakoutGame_padx_var = BreakoutGame_padx_var;
}

public BreakoutGameJava initBreakoutGame_padx_var(int BreakoutGame_padx_var) {
this.BreakoutGame_padx_var = BreakoutGame_padx_var;
return this;
}

public boolean getBreakoutGame_SC_received_controller_positionval11y_var() {
return BreakoutGame_SC_received_controller_positionval11y_var;
}

public void setBreakoutGame_SC_received_controller_positionval11y_var(boolean BreakoutGame_SC_received_controller_positionval11y_var) {
this.BreakoutGame_SC_received_controller_positionval11y_var = BreakoutGame_SC_received_controller_positionval11y_var;
}

public BreakoutGameJava initBreakoutGame_SC_received_controller_positionval11y_var(boolean BreakoutGame_SC_received_controller_positionval11y_var) {
this.BreakoutGame_SC_received_controller_positionval11y_var = BreakoutGame_SC_received_controller_positionval11y_var;
return this;
}

public long getBreakoutGame_startTime_var() {
return BreakoutGame_startTime_var;
}

public void setBreakoutGame_startTime_var(long BreakoutGame_startTime_var) {
this.BreakoutGame_startTime_var = BreakoutGame_startTime_var;
}

public BreakoutGameJava initBreakoutGame_startTime_var(long BreakoutGame_startTime_var) {
this.BreakoutGame_startTime_var = BreakoutGame_startTime_var;
return this;
}

public int getBreakoutGame_dy_var() {
return BreakoutGame_dy_var;
}

public void setBreakoutGame_dy_var(int BreakoutGame_dy_var) {
this.BreakoutGame_dy_var = BreakoutGame_dy_var;
}

public BreakoutGameJava initBreakoutGame_dy_var(int BreakoutGame_dy_var) {
this.BreakoutGame_dy_var = BreakoutGame_dy_var;
return this;
}

public int getBreakoutGame_pady_var() {
return BreakoutGame_pady_var;
}

public void setBreakoutGame_pady_var(int BreakoutGame_pady_var) {
this.BreakoutGame_pady_var = BreakoutGame_pady_var;
}

public BreakoutGameJava initBreakoutGame_pady_var(int BreakoutGame_pady_var) {
this.BreakoutGame_pady_var = BreakoutGame_pady_var;
return this;
}

public int getBreakoutGame_prevPX_var() {
return BreakoutGame_prevPX_var;
}

public void setBreakoutGame_prevPX_var(int BreakoutGame_prevPX_var) {
this.BreakoutGame_prevPX_var = BreakoutGame_prevPX_var;
}

public BreakoutGameJava initBreakoutGame_prevPX_var(int BreakoutGame_prevPX_var) {
this.BreakoutGame_prevPX_var = BreakoutGame_prevPX_var;
return this;
}

public int getBreakoutGame_prevBX_var() {
return BreakoutGame_prevBX_var;
}

public void setBreakoutGame_prevBX_var(int BreakoutGame_prevBX_var) {
this.BreakoutGame_prevBX_var = BreakoutGame_prevBX_var;
}

public BreakoutGameJava initBreakoutGame_prevBX_var(int BreakoutGame_prevBX_var) {
this.BreakoutGame_prevBX_var = BreakoutGame_prevBX_var;
return this;
}

public boolean getBreakoutGame_trackMemory_var() {
return BreakoutGame_trackMemory_var;
}

public BreakoutGameJava initBreakoutGame_trackMemory_var(boolean BreakoutGame_trackMemory_var) {
this.BreakoutGame_trackMemory_var = BreakoutGame_trackMemory_var;
return this;
}

public int[] getBreakoutGame_bgcolor_var() {
return BreakoutGame_bgcolor_var;
}

public void setBreakoutGame_bgcolor_var(int[] BreakoutGame_bgcolor_var) {
this.BreakoutGame_bgcolor_var = BreakoutGame_bgcolor_var;
}

public BreakoutGameJava initBreakoutGame_bgcolor_var(int[] BreakoutGame_bgcolor_var) {
this.BreakoutGame_bgcolor_var = BreakoutGame_bgcolor_var;
return this;
}

public int getBreakoutGame_by_var() {
return BreakoutGame_by_var;
}

public void setBreakoutGame_by_var(int BreakoutGame_by_var) {
this.BreakoutGame_by_var = BreakoutGame_by_var;
}

public BreakoutGameJava initBreakoutGame_by_var(int BreakoutGame_by_var) {
this.BreakoutGame_by_var = BreakoutGame_by_var;
return this;
}

public int getBreakoutGame_XDISPSIZE_var() {
return BreakoutGame_XDISPSIZE_var;
}

public BreakoutGameJava initBreakoutGame_XDISPSIZE_var(int BreakoutGame_XDISPSIZE_var) {
this.BreakoutGame_XDISPSIZE_var = BreakoutGame_XDISPSIZE_var;
return this;
}

public int getBreakoutGame_prevBY_var() {
return BreakoutGame_prevBY_var;
}

public void setBreakoutGame_prevBY_var(int BreakoutGame_prevBY_var) {
this.BreakoutGame_prevBY_var = BreakoutGame_prevBY_var;
}

public BreakoutGameJava initBreakoutGame_prevBY_var(int BreakoutGame_prevBY_var) {
this.BreakoutGame_prevBY_var = BreakoutGame_prevBY_var;
return this;
}

public int getBreakoutGame_BOTTOM_var() {
return BreakoutGame_BOTTOM_var;
}

public BreakoutGameJava initBreakoutGame_BOTTOM_var(int BreakoutGame_BOTTOM_var) {
this.BreakoutGame_BOTTOM_var = BreakoutGame_BOTTOM_var;
return this;
}

public long getBreakoutGame_lastTimestamp_var() {
return BreakoutGame_lastTimestamp_var;
}

public void setBreakoutGame_lastTimestamp_var(long BreakoutGame_lastTimestamp_var) {
this.BreakoutGame_lastTimestamp_var = BreakoutGame_lastTimestamp_var;
}

public BreakoutGameJava initBreakoutGame_lastTimestamp_var(long BreakoutGame_lastTimestamp_var) {
this.BreakoutGame_lastTimestamp_var = BreakoutGame_lastTimestamp_var;
return this;
}

public int getBreakoutGame_BRICK_ROWS_var() {
return BreakoutGame_BRICK_ROWS_var;
}

public BreakoutGameJava initBreakoutGame_BRICK_ROWS_var(int BreakoutGame_BRICK_ROWS_var) {
this.BreakoutGame_BRICK_ROWS_var = BreakoutGame_BRICK_ROWS_var;
return this;
}

public int getBreakoutGame_prevPY_var() {
return BreakoutGame_prevPY_var;
}

public void setBreakoutGame_prevPY_var(int BreakoutGame_prevPY_var) {
this.BreakoutGame_prevPY_var = BreakoutGame_prevPY_var;
}

public BreakoutGameJava initBreakoutGame_prevPY_var(int BreakoutGame_prevPY_var) {
this.BreakoutGame_prevPY_var = BreakoutGame_prevPY_var;
return this;
}

public int getBreakoutGame_SCALE_var() {
return BreakoutGame_SCALE_var;
}

public BreakoutGameJava initBreakoutGame_SCALE_var(int BreakoutGame_SCALE_var) {
this.BreakoutGame_SCALE_var = BreakoutGame_SCALE_var;
return this;
}

public int[] getBreakoutGame_fgcolor_var() {
return BreakoutGame_fgcolor_var;
}

public void setBreakoutGame_fgcolor_var(int[] BreakoutGame_fgcolor_var) {
this.BreakoutGame_fgcolor_var = BreakoutGame_fgcolor_var;
}

public BreakoutGameJava initBreakoutGame_fgcolor_var(int[] BreakoutGame_fgcolor_var) {
this.BreakoutGame_fgcolor_var = BreakoutGame_fgcolor_var;
return this;
}

public int getBreakoutGame_period_var() {
return BreakoutGame_period_var;
}

public BreakoutGameJava initBreakoutGame_period_var(int BreakoutGame_period_var) {
this.BreakoutGame_period_var = BreakoutGame_period_var;
return this;
}

public boolean getBreakoutGame_SC_received_controller_positionx_var() {
return BreakoutGame_SC_received_controller_positionx_var;
}

public void setBreakoutGame_SC_received_controller_positionx_var(boolean BreakoutGame_SC_received_controller_positionx_var) {
this.BreakoutGame_SC_received_controller_positionx_var = BreakoutGame_SC_received_controller_positionx_var;
}

public BreakoutGameJava initBreakoutGame_SC_received_controller_positionx_var(boolean BreakoutGame_SC_received_controller_positionx_var) {
this.BreakoutGame_SC_received_controller_positionx_var = BreakoutGame_SC_received_controller_positionx_var;
return this;
}

public byte getBreakoutGame_SC_INIT_display_displayReady_val8_var() {
return BreakoutGame_SC_INIT_display_displayReady_val8_var;
}

public void setBreakoutGame_SC_INIT_display_displayReady_val8_var(byte BreakoutGame_SC_INIT_display_displayReady_val8_var) {
this.BreakoutGame_SC_INIT_display_displayReady_val8_var = BreakoutGame_SC_INIT_display_displayReady_val8_var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_display_displayReady_val8_var(byte BreakoutGame_SC_INIT_display_displayReady_val8_var) {
this.BreakoutGame_SC_INIT_display_displayReady_val8_var = BreakoutGame_SC_INIT_display_displayReady_val8_var;
return this;
}

public int getBreakoutGame_score_var() {
return BreakoutGame_score_var;
}

public void setBreakoutGame_score_var(int BreakoutGame_score_var) {
this.BreakoutGame_score_var = BreakoutGame_score_var;
}

public BreakoutGameJava initBreakoutGame_score_var(int BreakoutGame_score_var) {
this.BreakoutGame_score_var = BreakoutGame_score_var;
return this;
}

public int getBreakoutGame_YDISPSIZE_var() {
return BreakoutGame_YDISPSIZE_var;
}

public BreakoutGameJava initBreakoutGame_YDISPSIZE_var(int BreakoutGame_YDISPSIZE_var) {
this.BreakoutGame_YDISPSIZE_var = BreakoutGame_YDISPSIZE_var;
return this;
}

public int getBreakoutGame_TOP_var() {
return BreakoutGame_TOP_var;
}

public BreakoutGameJava initBreakoutGame_TOP_var(int BreakoutGame_TOP_var) {
this.BreakoutGame_TOP_var = BreakoutGame_TOP_var;
return this;
}

public long getBreakoutGame_bytesSentCounter_var() {
return BreakoutGame_bytesSentCounter_var;
}

public void setBreakoutGame_bytesSentCounter_var(long BreakoutGame_bytesSentCounter_var) {
this.BreakoutGame_bytesSentCounter_var = BreakoutGame_bytesSentCounter_var;
}

public BreakoutGameJava initBreakoutGame_bytesSentCounter_var(long BreakoutGame_bytesSentCounter_var) {
this.BreakoutGame_bytesSentCounter_var = BreakoutGame_bytesSentCounter_var;
return this;
}

public int getBreakoutGame_SC_LAUNCH_countdown_var() {
return BreakoutGame_SC_LAUNCH_countdown_var;
}

public void setBreakoutGame_SC_LAUNCH_countdown_var(int BreakoutGame_SC_LAUNCH_countdown_var) {
this.BreakoutGame_SC_LAUNCH_countdown_var = BreakoutGame_SC_LAUNCH_countdown_var;
}

public BreakoutGameJava initBreakoutGame_SC_LAUNCH_countdown_var(int BreakoutGame_SC_LAUNCH_countdown_var) {
this.BreakoutGame_SC_LAUNCH_countdown_var = BreakoutGame_SC_LAUNCH_countdown_var;
return this;
}

public long getBreakoutGame_stopTime_var() {
return BreakoutGame_stopTime_var;
}

public void setBreakoutGame_stopTime_var(long BreakoutGame_stopTime_var) {
this.BreakoutGame_stopTime_var = BreakoutGame_stopTime_var;
}

public BreakoutGameJava initBreakoutGame_stopTime_var(long BreakoutGame_stopTime_var) {
this.BreakoutGame_stopTime_var = BreakoutGame_stopTime_var;
return this;
}

public int getBreakoutGame_BRICK_HEIGHT_var() {
return BreakoutGame_BRICK_HEIGHT_var;
}

public BreakoutGameJava initBreakoutGame_BRICK_HEIGHT_var(int BreakoutGame_BRICK_HEIGHT_var) {
this.BreakoutGame_BRICK_HEIGHT_var = BreakoutGame_BRICK_HEIGHT_var;
return this;
}

public int[] getBreakoutGame_bricks_var() {
return BreakoutGame_bricks_var;
}

public void setBreakoutGame_bricks_var(int[] BreakoutGame_bricks_var) {
this.BreakoutGame_bricks_var = BreakoutGame_bricks_var;
}

public BreakoutGameJava initBreakoutGame_bricks_var(int[] BreakoutGame_bricks_var) {
this.BreakoutGame_bricks_var = BreakoutGame_bricks_var;
return this;
}

public int getBreakoutGame_counter_var() {
return BreakoutGame_counter_var;
}

public void setBreakoutGame_counter_var(int BreakoutGame_counter_var) {
this.BreakoutGame_counter_var = BreakoutGame_counter_var;
}

public BreakoutGameJava initBreakoutGame_counter_var(int BreakoutGame_counter_var) {
this.BreakoutGame_counter_var = BreakoutGame_counter_var;
return this;
}

public int getBreakoutGame_dx_var() {
return BreakoutGame_dx_var;
}

public void setBreakoutGame_dx_var(int BreakoutGame_dx_var) {
this.BreakoutGame_dx_var = BreakoutGame_dx_var;
}

public BreakoutGameJava initBreakoutGame_dx_var(int BreakoutGame_dx_var) {
this.BreakoutGame_dx_var = BreakoutGame_dx_var;
return this;
}

public int getBreakoutGame_lives_var() {
return BreakoutGame_lives_var;
}

public void setBreakoutGame_lives_var(int BreakoutGame_lives_var) {
this.BreakoutGame_lives_var = BreakoutGame_lives_var;
}

public BreakoutGameJava initBreakoutGame_lives_var(int BreakoutGame_lives_var) {
this.BreakoutGame_lives_var = BreakoutGame_lives_var;
return this;
}

public int getBreakoutGame_padlen_var() {
return BreakoutGame_padlen_var;
}

public void setBreakoutGame_padlen_var(int BreakoutGame_padlen_var) {
this.BreakoutGame_padlen_var = BreakoutGame_padlen_var;
}

public BreakoutGameJava initBreakoutGame_padlen_var(int BreakoutGame_padlen_var) {
this.BreakoutGame_padlen_var = BreakoutGame_padlen_var;
return this;
}

public int getBreakoutGame_level_var() {
return BreakoutGame_level_var;
}

public void setBreakoutGame_level_var(int BreakoutGame_level_var) {
this.BreakoutGame_level_var = BreakoutGame_level_var;
}

public BreakoutGameJava initBreakoutGame_level_var(int BreakoutGame_level_var) {
this.BreakoutGame_level_var = BreakoutGame_level_var;
return this;
}

public int getBreakoutGame_LEFT_var() {
return BreakoutGame_LEFT_var;
}

public BreakoutGameJava initBreakoutGame_LEFT_var(int BreakoutGame_LEFT_var) {
this.BreakoutGame_LEFT_var = BreakoutGame_LEFT_var;
return this;
}

public int getBreakoutGame_br_var() {
return BreakoutGame_br_var;
}

public BreakoutGameJava initBreakoutGame_br_var(int BreakoutGame_br_var) {
this.BreakoutGame_br_var = BreakoutGame_br_var;
return this;
}

public boolean getBreakoutGame_SC_INIT_received_display_displayReady__var() {
return BreakoutGame_SC_INIT_received_display_displayReady__var;
}

public void setBreakoutGame_SC_INIT_received_display_displayReady__var(boolean BreakoutGame_SC_INIT_received_display_displayReady__var) {
this.BreakoutGame_SC_INIT_received_display_displayReady__var = BreakoutGame_SC_INIT_received_display_displayReady__var;
}

public BreakoutGameJava initBreakoutGame_SC_INIT_received_display_displayReady__var(boolean BreakoutGame_SC_INIT_received_display_displayReady__var) {
this.BreakoutGame_SC_INIT_received_display_displayReady__var = BreakoutGame_SC_INIT_received_display_displayReady__var;
return this;
}

public int getBreakoutGame_SC_controller_position_y_var() {
return BreakoutGame_SC_controller_position_y_var;
}

public void setBreakoutGame_SC_controller_position_y_var(int BreakoutGame_SC_controller_position_y_var) {
this.BreakoutGame_SC_controller_position_y_var = BreakoutGame_SC_controller_position_y_var;
}

public BreakoutGameJava initBreakoutGame_SC_controller_position_y_var(int BreakoutGame_SC_controller_position_y_var) {
this.BreakoutGame_SC_controller_position_y_var = BreakoutGame_SC_controller_position_y_var;
return this;
}

//Getters for Ports
public Port getClock_port() {
return clock_port;
}
public Port getDisplay_port() {
return display_port;
}
public Port getController_port() {
return controller_port;
}
public Port getIa_port() {
return ia_port;
}
public Port getGame_port() {
return game_port;
}
private CompositeState buildBreakoutGame_SC(){
final AtomicState state_BreakoutGame_SC_INIT = new AtomicState("INIT");
state_BreakoutGame_SC_INIT.onEntry(()->{
BreakoutGame_startTime_var = (long) (timestamp());
sendCreatexsize_via_display((byte) (0x08), (int) (getBreakoutGame_XDISPSIZE_var()));
sendCreateysizeval9_via_display((byte) (0x85), (byte) (0x73), (int) (getBreakoutGame_YDISPSIZE_var()));
});
final AtomicState state_BreakoutGame_SC_LAUNCH = new AtomicState("LAUNCH");
state_BreakoutGame_SC_LAUNCH.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
BreakoutGame_SC_LAUNCH_countdown_var = (int) (3);
drawScore();
drawLives();
sendUpdateval4_via_display((byte) (0x21), (byte) (0x1C));
sendUpdate__via_display((byte) (0xA8));
});
final AtomicState state_BreakoutGame_SC_PLAY = new AtomicState("PLAY");
state_BreakoutGame_SC_PLAY.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
});
final AtomicState state_BreakoutGame_SC_LOSTBALL = new AtomicState("LOSTBALL");
state_BreakoutGame_SC_LOSTBALL.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
BreakoutGame_lives_var = (int) (getBreakoutGame_lives_var() - 1);
eraseBall();
erasePad();
drawLives();
sendUpdate__via_display((byte) (0x40));
sendUpdateval4_via_display((byte) (0x60), (byte) (0xA7));
log((boolean) (true));
});
final AtomicState state_BreakoutGame_SC_NEXTLEVEL = new AtomicState("NEXTLEVEL");
state_BreakoutGame_SC_NEXTLEVEL.onEntry(()->{
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
BreakoutGame_level_var = (int) (getBreakoutGame_level_var() + 1);
drawLevel();
eraseBall();
erasePad();
if((getBreakoutGame_level_var() % 2) == 0 && getBreakoutGame_padlen_var() > 5 * getBreakoutGame_SCALE_var()) {
BreakoutGame_padlen_var = (int) (getBreakoutGame_padlen_var() - (4 * getBreakoutGame_SCALE_var()));

}
if((getBreakoutGame_level_var() % 2) == 1) {
BreakoutGame_dy_var = (int) ((getBreakoutGame_dy_var() * 3) / 2);

}
drawLives();
createBricks();
sendUpdate__via_display((byte) (0xEB));
sendUpdateval4_via_display((byte) (0x64), (byte) (0x96));
});
final FinalState state_BreakoutGame_SC_GAMEOVER = new FinalState("GAMEOVER");
state_BreakoutGame_SC_GAMEOVER.onEntry(()->{
eraseBall();
erasePad();
sendSetColorg_via_display((byte) (0xB9), (int) (255));
sendSetColorrbval7_via_display((int) (255), (byte) (0x6A), (byte) (0xFB), (int) (255));
sendFillRectyval2_via_display((int) (30), (byte) (0xC6), (byte) (0xF6));
sendFillRectxwidthheight_via_display((int) (76), (byte) (0x0B), (int) (142), (int) (8));
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0x3E), (byte) (0x34), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColorg_via_display((byte) (0xB6), (int) (BreakoutGame_fgcolor_var[1]
));
sendFillRectyval2_via_display((int) (31), (byte) (0x2C), (byte) (0x43));
sendFillRectxwidthheight_via_display((int) (50), (byte) (0x91), (int) (140), (int) (9));
sendSetBGColorrb_via_display((byte) (0x71), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetBGColorval5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (0x74), (byte) (0x5F));
sendSetColorg_via_display((byte) (0xD4), (int) (209));
sendSetColorrbval7_via_display((int) (130), (byte) (0x78), (byte) (0x5C), (int) (158));
sendDrawIntegerdigitsscalev_via_display((int) (getBreakoutGame_score_var()), (int) (5), (byte) (0x9A), (int) (6));
sendDrawIntegerval0xy_via_display((byte) (0x73), (byte) (0x76), (int) (23), (int) (40));
sendDrawThingMLy_via_display((byte) (0xA3), (int) (87));
sendDrawThingMLval10x_via_display((byte) (0x7C), (int) (26), (byte) (0xE0));
sendUpdate__via_display((byte) (0x4D));
sendUpdateval4_via_display((byte) (0x75), (byte) (0x55));
log((boolean) (true));
BreakoutGame_stopTime_var = (long) (timestamp());
quit();
stop();
delete();
});
Handler h1723848804 = new Handler();
h1723848804.from(state_BreakoutGame_SC_INIT);
h1723848804.event(displayReady_Type);
h1723848804.guard((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
return  !(getBreakoutGame_SC_INIT_received_display_displayReadyval8_var());
});

h1723848804.port(display_port);
h1723848804.action((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
BreakoutGame_SC_INIT_received_display_displayReady__var = (boolean) (true);
});

Handler h1378280450 = new Handler();
h1378280450.from(state_BreakoutGame_SC_INIT);
h1378280450.event(displayReadyval8Type);
h1378280450.guard((Event e)->{
final DisplayReadyval8MessageType.DisplayReadyval8Message displayReadyval8 = (DisplayReadyval8MessageType.DisplayReadyval8Message) e;
return  !(getBreakoutGame_SC_INIT_received_display_displayReady__var());
});

h1378280450.port(display_port);
h1378280450.action((Event e)->{
final DisplayReadyval8MessageType.DisplayReadyval8Message displayReadyval8 = (DisplayReadyval8MessageType.DisplayReadyval8Message) e;
BreakoutGame_SC_INIT_received_display_displayReadyval8_var = (boolean) (true);
});

Transition h1350720002 = new Transition();
h1350720002.from(state_BreakoutGame_SC_INIT).to(state_BreakoutGame_SC_LAUNCH);
h1350720002.event(displayReady_Type);
h1350720002.guard((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
return getBreakoutGame_SC_INIT_received_display_displayReadyval8_var();
});

h1350720002.port(display_port);
h1350720002.action((Event e)->{
final DisplayReady_MessageType.DisplayReady_Message displayReady_ = (DisplayReady_MessageType.DisplayReady_Message) e;
sendClear__via_display((byte) (0x71));
sendClearval1_via_display((byte) (0x44), (byte) (0xE3));
initColors();
sendSetColorrbval7_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (0xB1), (byte) (0x63), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColorg_via_display((byte) (0xF2), (int) (BreakoutGame_bgcolor_var[1]
));
sendFillRectxwidthheight_via_display((int) (getBreakoutGame_YDISPSIZE_var()), (byte) (0xB8), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (0));
sendFillRectyval2_via_display((int) (0), (byte) (0x5F), (byte) (0x09));
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0xC7), (byte) (0x45), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColorg_via_display((byte) (0x07), (int) (BreakoutGame_fgcolor_var[1]
));
sendFillRectyval2_via_display((int) (0), (byte) (0x49), (byte) (0x97));
sendFillRectxwidthheight_via_display((int) (14), (byte) (0xC5), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (0));
drawWalls();
createBricks();
drawLevel();
BreakoutGame_SC_INIT_received_display_displayReady__var = (boolean) (false);
BreakoutGame_SC_INIT_received_display_displayReadyval8_var = (boolean) (false);
});

Transition h65551384 = new Transition();
h65551384.from(state_BreakoutGame_SC_INIT).to(state_BreakoutGame_SC_LAUNCH);
h65551384.event(displayReadyval8Type);
h65551384.guard((Event e)->{
final DisplayReadyval8MessageType.DisplayReadyval8Message displayReadyval8 = (DisplayReadyval8MessageType.DisplayReadyval8Message) e;
return getBreakoutGame_SC_INIT_received_display_displayReady__var();
});

h65551384.port(display_port);
h65551384.action((Event e)->{
final DisplayReadyval8MessageType.DisplayReadyval8Message displayReadyval8 = (DisplayReadyval8MessageType.DisplayReadyval8Message) e;
sendClear__via_display((byte) (0xC8));
sendClearval1_via_display((byte) (0x8E), (byte) (0xE3));
initColors();
sendSetColorg_via_display((byte) (0xF7), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (0xF7), (byte) (0x63), (int) (BreakoutGame_bgcolor_var[0]
));
sendFillRectyval2_via_display((int) (0), (byte) (0xFF), (byte) (0x09));
sendFillRectxwidthheight_via_display((int) (getBreakoutGame_YDISPSIZE_var()), (byte) (0xC7), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (0));
sendSetColorg_via_display((byte) (0x3D), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0x51), (byte) (0x45), (int) (BreakoutGame_fgcolor_var[0]
));
sendFillRectyval2_via_display((int) (0), (byte) (0x71), (byte) (0x97));
sendFillRectxwidthheight_via_display((int) (14), (byte) (0xBF), (int) (getBreakoutGame_XDISPSIZE_var()), (int) (0));
drawWalls();
createBricks();
drawLevel();
BreakoutGame_SC_INIT_received_display_displayReadyval8_var = (boolean) (false);
BreakoutGame_SC_INIT_received_display_displayReady__var = (boolean) (false);
});

Handler h943659381 = new Handler();
h943659381.from(state_BreakoutGame_SC_LAUNCH);
h943659381.event(timer_timeoutType);
h943659381.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_SC_LAUNCH_countdown_var() > 0;
});

h943659381.port(clock_port);
h943659381.action((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
drawPad();
if((getBreakoutGame_SC_LAUNCH_countdown_var() % 30) == 0) {
drawCountDown((int) (getBreakoutGame_SC_LAUNCH_countdown_var() / 30));

}
BreakoutGame_SC_LAUNCH_countdown_var = (int) (getBreakoutGame_SC_LAUNCH_countdown_var() - 1);
sendUpdateval4_via_display((byte) (0x3C), (byte) (0xA7));
sendUpdate__via_display((byte) (0xA6));
});

Transition h2007138812 = new Transition();
h2007138812.from(state_BreakoutGame_SC_LAUNCH).to(state_BreakoutGame_SC_PLAY);
h2007138812.event(timer_timeoutType);
h2007138812.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_SC_LAUNCH_countdown_var() == 0;
});

h2007138812.port(clock_port);
h2007138812.action((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
drawCountDown((int) (0));
resetBall();
sendUpdate__via_display((byte) (0xA7));
sendUpdateval4_via_display((byte) (0x2B), (byte) (0x3A));
});

Handler h1315081042 = new Handler();
h1315081042.from(state_BreakoutGame_SC_PLAY);
h1315081042.event(timer_timeoutType);
h1315081042.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0;
});

h1315081042.port(clock_port);
h1315081042.action((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
BreakoutGame_bx_var = (int) (getBreakoutGame_bx_var() + getBreakoutGame_dx_var());
BreakoutGame_by_var = (int) (getBreakoutGame_by_var() + getBreakoutGame_dy_var());
int wl_var = (int) (getBreakoutGame_LEFT_var() + getBreakoutGame_br_var());

int wr_var = (int) (getBreakoutGame_RIGHT_var() - getBreakoutGame_br_var());

int wt_var = (int) (getBreakoutGame_TOP_var() + getBreakoutGame_br_var());

int wb_var = (int) (getBreakoutGame_BOTTOM_var() - getBreakoutGame_br_var());

if(getBreakoutGame_bx_var() < wl_var) {
BreakoutGame_dx_var = (int) ( -getBreakoutGame_dx_var());
BreakoutGame_bx_var = (int) (2 * wl_var - getBreakoutGame_bx_var());
incrementScore((int) ( -1));

} else {
if(getBreakoutGame_bx_var() > wr_var) {
BreakoutGame_dx_var = (int) ( -getBreakoutGame_dx_var());
BreakoutGame_bx_var = (int) (2 * wr_var - getBreakoutGame_bx_var());
incrementScore((int) ( -1));

}

}
if(getBreakoutGame_by_var() < wt_var) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());
BreakoutGame_by_var = (int) (2 * wt_var - getBreakoutGame_by_var());
incrementScore((int) ( -1));

} else {
if(getBreakoutGame_by_var() > wb_var) {
sendLostBall_via_game();

}

}
if(getBreakoutGame_dy_var() > 0) {
if(getBreakoutGame_by_var() > getBreakoutGame_pady_var() - getBreakoutGame_br_var() && getBreakoutGame_by_var() < getBreakoutGame_pady_var() + getBreakoutGame_br_var()) {
if(getBreakoutGame_bx_var() > getBreakoutGame_padx_var() - getBreakoutGame_padlen_var() / 2 && getBreakoutGame_bx_var() < getBreakoutGame_padx_var() + getBreakoutGame_padlen_var() / 2) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());
BreakoutGame_by_var = (int) (2 * (getBreakoutGame_pady_var() - getBreakoutGame_br_var()) - getBreakoutGame_by_var());
BreakoutGame_dx_var = (int) (getBreakoutGame_dx_var() / 4 + (getBreakoutGame_bx_var() - getBreakoutGame_padx_var()) / 4);

}

}

}
boolean collision_var = (boolean) (collideBrick((int) (getBreakoutGame_bx_var() - getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() - getBreakoutGame_br_var())) || collideBrick((int) (getBreakoutGame_bx_var() + getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() - getBreakoutGame_br_var())) || collideBrick((int) (getBreakoutGame_bx_var() + getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() + getBreakoutGame_br_var())) || collideBrick((int) (getBreakoutGame_bx_var() - getBreakoutGame_br_var()), (int) (getBreakoutGame_by_var() + getBreakoutGame_br_var())));

if(collision_var) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());
incrementScore((int) (10));
if(bricksLeft() == 0) {
sendNextLevel_via_game();

}

}
drawBall();
drawPad();
sendUpdateIAval13padyballx_via_ia((int) (getBreakoutGame_bx_var()), (byte) (0x92), (int) (getBreakoutGame_pady_var()), (byte) (0x1E));
sendUpdateIAballypadx_via_ia((byte) (0xE6), (int) (getBreakoutGame_padx_var()), (int) (getBreakoutGame_by_var()));
sendUpdate__via_display((byte) (0x8E));
sendUpdateval4_via_display((byte) (0x09), (byte) (0xFD));
log((boolean) (false));
sendTimer_start_via_clock((int) (0), (int) (getBreakoutGame_period_var()));
});

Transition h193625667 = new Transition();
h193625667.from(state_BreakoutGame_SC_PLAY).to(state_BreakoutGame_SC_LOSTBALL);
h193625667.event(lostBallType);
h193625667.port(game_port);
h193625667.action((Event e)->{
sendTimer_cancel_via_clock((int) (0));
});

Transition h1754451055 = new Transition();
h1754451055.from(state_BreakoutGame_SC_PLAY).to(state_BreakoutGame_SC_NEXTLEVEL);
h1754451055.event(nextLevelType);
h1754451055.port(game_port);
h1754451055.action((Event e)->{
sendTimer_cancel_via_clock((int) (0));
});

Transition h945747249 = new Transition();
h945747249.from(state_BreakoutGame_SC_LOSTBALL).to(state_BreakoutGame_SC_LAUNCH);
h945747249.event(timer_timeoutType);
h945747249.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_lives_var() > 0;
});

h945747249.port(clock_port);
Transition h36707189 = new Transition();
h36707189.from(state_BreakoutGame_SC_LOSTBALL).to(state_BreakoutGame_SC_GAMEOVER);
h36707189.event(timer_timeoutType);
h36707189.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0 && getBreakoutGame_lives_var() == 0;
});

h36707189.port(clock_port);
Transition h481402298 = new Transition();
h481402298.from(state_BreakoutGame_SC_NEXTLEVEL).to(state_BreakoutGame_SC_LAUNCH);
h481402298.event(timer_timeoutType);
h481402298.guard((Event e)->{
final Timer_timeoutMessageType.Timer_timeoutMessage timer_timeout = (Timer_timeoutMessageType.Timer_timeoutMessage) e;
return timer_timeout.id == 0;
});

h481402298.port(clock_port);
final CompositeState state_BreakoutGame_SC = new CompositeState("SC");
state_BreakoutGame_SC.onEntry(()->{
//reset properties
this.setBreakoutGame_SC_controller_position_x_var((int)0);
this.setBreakoutGame_SC_controller_position_val11_var((byte)0);
this.setBreakoutGame_SC_controller_position_y_var((int)0);
this.setBreakoutGame_SC_received_controller_positionx_var((boolean)false);
this.setBreakoutGame_SC_received_controller_positionval11y_var((boolean)false);
});
Handler h882706486 = new Handler();
h882706486.from(state_BreakoutGame_SC);
h882706486.event(positionxType);
h882706486.port(controller_port);
h882706486.action((Event e)->{
final PositionxMessageType.PositionxMessage positionx = (PositionxMessageType.PositionxMessage) e;
BreakoutGame_SC_received_controller_positionx_var = (boolean) (true);
BreakoutGame_SC_controller_position_x_var = (int) (positionx.x);
if(getBreakoutGame_SC_received_controller_positionval11y_var()) {
long center_var = (long) ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var() - getBreakoutGame_padlen_var()));

center_var = (long) (getBreakoutGame_SC_controller_position_x_var() * center_var);
center_var = (long) (center_var / 200);
BreakoutGame_padx_var = (int) ((getBreakoutGame_LEFT_var() + center_var + (getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 2));
BreakoutGame_SC_received_controller_positionx_var = (boolean) (false);
BreakoutGame_SC_received_controller_positionval11y_var = (boolean) (false);

}
});

Handler h1871678080 = new Handler();
h1871678080.from(state_BreakoutGame_SC);
h1871678080.event(positionval11yType);
h1871678080.port(controller_port);
h1871678080.action((Event e)->{
final Positionval11yMessageType.Positionval11yMessage positionval11y = (Positionval11yMessageType.Positionval11yMessage) e;
BreakoutGame_SC_received_controller_positionval11y_var = (boolean) (true);
BreakoutGame_SC_controller_position_val11_var = (byte) (positionval11y.val11);
BreakoutGame_SC_controller_position_y_var = (int) (positionval11y.y);
if(getBreakoutGame_SC_received_controller_positionx_var()) {
long center_var = (long) ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var() - getBreakoutGame_padlen_var()));

center_var = (long) (getBreakoutGame_SC_controller_position_x_var() * center_var);
center_var = (long) (center_var / 200);
BreakoutGame_padx_var = (int) ((getBreakoutGame_LEFT_var() + center_var + (getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 2));
BreakoutGame_SC_received_controller_positionval11y_var = (boolean) (false);
BreakoutGame_SC_received_controller_positionx_var = (boolean) (false);

}
});

state_BreakoutGame_SC.add(state_BreakoutGame_SC_INIT);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_LAUNCH);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_PLAY);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_LOSTBALL);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_NEXTLEVEL);
state_BreakoutGame_SC.add(state_BreakoutGame_SC_GAMEOVER);
state_BreakoutGame_SC.initial(state_BreakoutGame_SC_INIT);
return state_BreakoutGame_SC;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
clock_port = new Port("clock", this);
display_port = new Port("display", this);
controller_port = new Port("controller", this);
ia_port = new Port("ia", this);
game_port = new Port("game", this);
} else {
clock_port = ((BreakoutGameJava)root).clock_port;
display_port = ((BreakoutGameJava)root).display_port;
controller_port = ((BreakoutGameJava)root).controller_port;
ia_port = ((BreakoutGameJava)root).ia_port;
game_port = ((BreakoutGameJava)root).game_port;
}
if (session == null){
//Init state machine
behavior = buildBreakoutGame_SC();
}
return this;
}

 void log(final boolean BreakoutGame_log_logMem_var) {
if(getBreakoutGame_counter_var() == 0 || BreakoutGame_log_logMem_var) {
long ts_var = 0;
if(getBreakoutGame_lastTimestamp_var() == 0) {
ts_var = (long) (0);
BreakoutGame_lastTimestamp_var = (long) (timestamp());

} else {
long t_var = (long) (timestamp());

ts_var = (long) (t_var - getBreakoutGame_lastTimestamp_var());
BreakoutGame_lastTimestamp_var = (long) (t_var);

}
System.out.println(""+("ts:")+(ts_var)+(",lives:")+(getBreakoutGame_lives_var())+(",score:")+(getBreakoutGame_score_var())+(",level:")+(getBreakoutGame_level_var())+(",bx:")+(getBreakoutGame_bx_var())+(",by:")+(getBreakoutGame_by_var())+(",padx:")+(getBreakoutGame_padx_var()));
if(getBreakoutGame_trackMemory_var()) {
System.out.println(""+("#usedMem:")+(usedMemory()));

}

}
setBreakoutGame_counter_var((int)(getBreakoutGame_counter_var() + 1));
if(getBreakoutGame_counter_var() == 33) {
BreakoutGame_counter_var = (int) (0);

}
}
 void initColors() {
BreakoutGame_bgcolor_var[0] = (int) (53);
BreakoutGame_bgcolor_var[1] = (int) (40);
BreakoutGame_bgcolor_var[2] = (int) (120);
BreakoutGame_fgcolor_var[0] = (int) (107);
BreakoutGame_fgcolor_var[1] = (int) (94);
BreakoutGame_fgcolor_var[2] = (int) (174);
sendSetBGColorrb_via_display((byte) (0x06), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendSetBGColorval5g_via_display((int) (BreakoutGame_bgcolor_var[1]
), (byte) (0xD5), (byte) (0xDA));
sendSetColorg_via_display((byte) (0x73), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0x43), (byte) (0x85), (int) (BreakoutGame_fgcolor_var[0]
));
}
 void resetBall() {
BreakoutGame_bx_var = (int) (getBreakoutGame_padx_var() - getBreakoutGame_br_var() / getBreakoutGame_SCALE_var());
BreakoutGame_by_var = (int) (getBreakoutGame_pady_var() - getBreakoutGame_br_var() / getBreakoutGame_SCALE_var());
BreakoutGame_dx_var = (int) ((getBreakoutGame_padx_var() + getBreakoutGame_prevBX_var() + getBreakoutGame_prevBY_var()) % 300 - 150);
if(getBreakoutGame_dy_var() > 0) {
BreakoutGame_dy_var = (int) ( -getBreakoutGame_dy_var());

}
BreakoutGame_prevBX_var = (int) ( -1);
BreakoutGame_prevBY_var = (int) ( -1);
}
 void eraseBall() {
int bs_var = (int) ((getBreakoutGame_br_var() * 2) / getBreakoutGame_SCALE_var());

if(getBreakoutGame_prevBX_var() > 0) {
sendSetColorrbval7_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (0x5E), (byte) (0x05), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColorg_via_display((byte) (0x93), (int) (BreakoutGame_bgcolor_var[1]
));
sendFillRectyval2_via_display((int) (getBreakoutGame_prevBY_var()), (byte) (0x76), (byte) (0xBE));
sendFillRectxwidthheight_via_display((int) (bs_var), (byte) (0x21), (int) (bs_var), (int) (getBreakoutGame_prevBX_var()));

}
BreakoutGame_prevBX_var = (int) ( -1);
BreakoutGame_prevBY_var = (int) ( -1);
}
 void drawBall() {
int bs_var = (int) ((getBreakoutGame_br_var() * 2) / getBreakoutGame_SCALE_var());

eraseBall();
BreakoutGame_prevBX_var = (int) ((getBreakoutGame_bx_var() - getBreakoutGame_br_var()) / getBreakoutGame_SCALE_var());
BreakoutGame_prevBY_var = (int) ((getBreakoutGame_by_var() - getBreakoutGame_br_var()) / getBreakoutGame_SCALE_var());
sendSetColorg_via_display((byte) (0x2D), (int) (199));
sendSetColorrbval7_via_display((int) (111), (byte) (0x0A), (byte) (0xB4), (int) (183));
sendFillRectyval2_via_display((int) (getBreakoutGame_prevBY_var()), (byte) (0xAD), (byte) (0x24));
sendFillRectxwidthheight_via_display((int) (bs_var), (byte) (0xD3), (int) (bs_var), (int) (getBreakoutGame_prevBX_var()));
}
 void erasePad() {
int ps_var = (int) (getBreakoutGame_padlen_var() / getBreakoutGame_SCALE_var());

if(getBreakoutGame_prevPX_var() > 0) {
sendSetColorg_via_display((byte) (0xB7), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (0x93), (byte) (0x46), (int) (BreakoutGame_bgcolor_var[0]
));
sendFillRectxwidthheight_via_display((int) (4), (byte) (0xBE), (int) (ps_var), (int) (getBreakoutGame_prevPX_var()));
sendFillRectyval2_via_display((int) (getBreakoutGame_prevPY_var()), (byte) (0xEA), (byte) (0x7B));

}
}
 void drawPad() {
int ps_var = (int) (getBreakoutGame_padlen_var() / getBreakoutGame_SCALE_var());

erasePad();
BreakoutGame_prevPX_var = (int) ((getBreakoutGame_padx_var() - (getBreakoutGame_padlen_var() / 2)) / getBreakoutGame_SCALE_var());
BreakoutGame_prevPY_var = (int) (getBreakoutGame_pady_var() / getBreakoutGame_SCALE_var());
sendSetColorg_via_display((byte) (0xED), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0xB9), (byte) (0x13), (int) (BreakoutGame_fgcolor_var[0]
));
sendFillRectxwidthheight_via_display((int) (4), (byte) (0x97), (int) (ps_var), (int) (getBreakoutGame_prevPX_var()));
sendFillRectyval2_via_display((int) (getBreakoutGame_prevPY_var()), (byte) (0xA4), (byte) (0x8B));
}
 void drawCountDown(final int BreakoutGame_drawCountDown_c_var) {
sendSetColorg_via_display((byte) (0xA4), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0x02), (byte) (0x9C), (int) (BreakoutGame_fgcolor_var[0]
));
if(BreakoutGame_drawCountDown_c_var > 0) {
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0x1C), (byte) (0x93), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColorg_via_display((byte) (0x8B), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetBGColorval5g_via_display((int) (BreakoutGame_bgcolor_var[1]
), (byte) (0xC6), (byte) (0xF4));
sendSetBGColorrb_via_display((byte) (0xD5), (int) (BreakoutGame_bgcolor_var[0]
), (int) (BreakoutGame_bgcolor_var[2]
));
sendDrawIntegerval0xy_via_display((byte) (0x4E), (byte) (0x34), (int) (80 - 6), (int) (90));
sendDrawIntegerdigitsscalev_via_display((int) (BreakoutGame_drawCountDown_c_var), (int) (1), (byte) (0xBE), (int) (4));

} else {
sendSetColorg_via_display((byte) (0xE1), (int) (BreakoutGame_bgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (0x5E), (byte) (0x46), (int) (BreakoutGame_bgcolor_var[0]
));
sendFillRectyval2_via_display((int) (90), (byte) (0xA1), (byte) (0x9F));
sendFillRectxwidthheight_via_display((int) (20), (byte) (0x8E), (int) (12), (int) (80 - 6));

}
}
 void drawWalls() {
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0xED), (byte) (0x30), (int) (BreakoutGame_fgcolor_var[0]
));
sendSetColorg_via_display((byte) (0xE0), (int) (BreakoutGame_fgcolor_var[1]
));
final int left_var = (int) ((getBreakoutGame_LEFT_var() / getBreakoutGame_SCALE_var()));

final int right_var = (int) ((getBreakoutGame_RIGHT_var() / getBreakoutGame_SCALE_var()));

final int top_var = (int) ((getBreakoutGame_TOP_var() / getBreakoutGame_SCALE_var()));

final int bottom_var = (int) ((getBreakoutGame_BOTTOM_var() / getBreakoutGame_SCALE_var()));

final int xcenter_var = (int) (((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / getBreakoutGame_SCALE_var()));

final int ycenter_var = (int) (((getBreakoutGame_BOTTOM_var() - getBreakoutGame_TOP_var()) / getBreakoutGame_SCALE_var()));

sendFillRectyval2_via_display((int) (top_var - 1), (byte) (0x32), (byte) (0x2F));
sendFillRectxwidthheight_via_display((int) (1), (byte) (0x41), (int) (xcenter_var + 1), (int) (left_var - 1));
sendFillRectyval2_via_display((int) (bottom_var), (byte) (0xC1), (byte) (0x00));
sendFillRectxwidthheight_via_display((int) (1), (byte) (0x3D), (int) (xcenter_var + 1), (int) (left_var - 1));
sendFillRectyval2_via_display((int) (top_var), (byte) (0x28), (byte) (0x02));
sendFillRectxwidthheight_via_display((int) (ycenter_var), (byte) (0x6C), (int) (1), (int) (left_var - 1));
sendFillRectxwidthheight_via_display((int) (ycenter_var), (byte) (0x0A), (int) (1), (int) (right_var));
sendFillRectyval2_via_display((int) (top_var), (byte) (0x90), (byte) (0xAE));
}
 boolean bitIsSet(final int BreakoutGame_bitIsSet_variable_var, final int BreakoutGame_bitIsSet_bit_var) {
return (boolean) ((((1 << BreakoutGame_bitIsSet_bit_var) & BreakoutGame_bitIsSet_variable_var) != 0));
}
 void createBricks() {
int y_var = (int) (0);

while(y_var < getBreakoutGame_BRICK_ROWS_var()) {
BreakoutGame_bricks_var[y_var] = (int) (0xFF);
int x_var = (int) (0);

while(x_var < 8) {
if(bitIsSet((int) (BreakoutGame_bricks_var[y_var]
), (int) (x_var))) {
drawBrick((int) (x_var), (int) (y_var));

}
x_var = (int) (x_var + 1);

}
y_var = (int) (y_var + 1);

}
}
 int bricksLeft() {
int result_var = (int) (0);

int y_var = (int) (0);

while(y_var < getBreakoutGame_BRICK_ROWS_var()) {
int x_var = (int) (0);

while(x_var < 8) {
if(bitIsSet((int) (BreakoutGame_bricks_var[y_var]
), (int) (x_var))) {
result_var = (int) (result_var + 1);

}
x_var = (int) (x_var + 1);

}
y_var = (int) (y_var + 1);

}
return (int) (result_var);
}
 void drawBrick(final int BreakoutGame_drawBrick_x_var, final int BreakoutGame_drawBrick_y_var) {
final int bx_var = (int) (((getBreakoutGame_LEFT_var() + ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) * BreakoutGame_drawBrick_x_var) / getBreakoutGame_SCALE_var() + 1));

final int by_var = (int) (((getBreakoutGame_TOP_var() + 20 * getBreakoutGame_SCALE_var() + getBreakoutGame_BRICK_HEIGHT_var() * BreakoutGame_drawBrick_y_var * getBreakoutGame_SCALE_var()) / getBreakoutGame_SCALE_var() + 1));

final int w_var = (int) ((((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) / getBreakoutGame_SCALE_var() - 2));

final int h_var = (int) ((getBreakoutGame_BRICK_HEIGHT_var() - 2));

sendSetColorg_via_display((byte) (0x60), (int) (103));
sendSetColorrbval7_via_display((int) (89), (byte) (0x0C), (byte) (0x29), (int) (155));
sendFillRectxwidthheight_via_display((int) (h_var), (byte) (0xC9), (int) (w_var), (int) (bx_var));
sendFillRectyval2_via_display((int) (by_var), (byte) (0xE5), (byte) (0x7C));
sendSetColorg_via_display((byte) (0xB6), (int) (56));
sendSetColorrbval7_via_display((int) (43), (byte) (0x4A), (byte) (0x2D), (int) (100));
sendDrawRectwidthx_via_display((int) (bx_var), (byte) (0x1C), (int) (w_var));
sendDrawRectval3yheight_via_display((byte) (0x7C), (int) (by_var), (byte) (0xCC), (int) (h_var));
}
 void removeBrick(final int BreakoutGame_removeBrick_x_var, final int BreakoutGame_removeBrick_y_var) {
final int bx_var = (int) (((getBreakoutGame_LEFT_var() + ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) * BreakoutGame_removeBrick_x_var) / getBreakoutGame_SCALE_var() + 1));

final int by_var = (int) (((getBreakoutGame_TOP_var() + 20 * getBreakoutGame_SCALE_var() + getBreakoutGame_BRICK_HEIGHT_var() * BreakoutGame_removeBrick_y_var * getBreakoutGame_SCALE_var()) / getBreakoutGame_SCALE_var() + 1));

sendSetColorrbval7_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (0xC3), (byte) (0x8A), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColorg_via_display((byte) (0x86), (int) (BreakoutGame_bgcolor_var[1]
));
sendFillRectxwidthheight_via_display((int) (getBreakoutGame_BRICK_HEIGHT_var() - 2), (byte) (0x07), (int) ((((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8) / getBreakoutGame_SCALE_var() - 2)), (int) (bx_var));
sendFillRectyval2_via_display((int) (by_var), (byte) (0x6A), (byte) (0x20));
BreakoutGame_bricks_var[BreakoutGame_removeBrick_y_var] = (int) (unsetBit((int) (BreakoutGame_bricks_var[BreakoutGame_removeBrick_y_var]
), (int) (BreakoutGame_removeBrick_x_var)));
}
 boolean collideBrick(final int BreakoutGame_collideBrick_xpos_var, final int BreakoutGame_collideBrick_ypos_var) {
int bry_var = (int) ((BreakoutGame_collideBrick_ypos_var - getBreakoutGame_TOP_var() - 20 * getBreakoutGame_SCALE_var()) / (getBreakoutGame_BRICK_HEIGHT_var() * getBreakoutGame_SCALE_var()));

boolean result_var = (boolean) (false);

if(bry_var >= 0 && bry_var < getBreakoutGame_BRICK_ROWS_var()) {
int brx_var = (int) ((BreakoutGame_collideBrick_xpos_var - getBreakoutGame_LEFT_var()) / ((getBreakoutGame_RIGHT_var() - getBreakoutGame_LEFT_var()) / 8));

if(bitIsSet((int) (BreakoutGame_bricks_var[bry_var]
), (int) (brx_var))) {
removeBrick((int) (brx_var), (int) (bry_var));
result_var = (boolean) (true);

}

}
return (boolean) (result_var);
}
 void drawLevel() {
sendSetColorg_via_display((byte) (0x51), (int) (209));
sendSetColorrbval7_via_display((int) (130), (byte) (0xDC), (byte) (0xF9), (int) (158));
sendSetBGColorval5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (0xAA), (byte) (0x21));
sendSetBGColorrb_via_display((byte) (0xF0), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_bgcolor_var[2]
), (byte) (0x6D), (byte) (0x3E), (int) (BreakoutGame_bgcolor_var[0]
));
sendSetColorg_via_display((byte) (0x78), (int) (BreakoutGame_bgcolor_var[1]
));
sendDrawIntegerval0xy_via_display((byte) (0x66), (byte) (0x34), (int) (6), (int) (2));
sendDrawIntegerdigitsscalev_via_display((int) (getBreakoutGame_level_var()), (int) (2), (byte) (0x10), (int) (2));
}
 void incrementScore(final int BreakoutGame_incrementScore_diff_var) {
BreakoutGame_score_var = (int) (getBreakoutGame_score_var() + BreakoutGame_incrementScore_diff_var);
if(getBreakoutGame_score_var() < 0) {
BreakoutGame_score_var = (int) (0);

}
drawScore();
}
 void drawScore() {
sendSetColorrbval7_via_display((int) (130), (byte) (0xBE), (byte) (0x64), (int) (158));
sendSetColorg_via_display((byte) (0x8C), (int) (209));
sendSetBGColorval5g_via_display((int) (BreakoutGame_fgcolor_var[1]
), (byte) (0x5D), (byte) (0xD8));
sendSetBGColorrb_via_display((byte) (0x13), (int) (BreakoutGame_fgcolor_var[0]
), (int) (BreakoutGame_fgcolor_var[2]
));
sendDrawIntegerval0xy_via_display((byte) (0xC3), (byte) (0x37), (int) (58), (int) (2));
sendDrawIntegerdigitsscalev_via_display((int) (getBreakoutGame_score_var()), (int) (5), (byte) (0xA6), (int) (2));
}
 void drawLives() {
sendSetColorg_via_display((byte) (0x52), (int) (BreakoutGame_fgcolor_var[1]
));
sendSetColorrbval7_via_display((int) (BreakoutGame_fgcolor_var[2]
), (byte) (0xDB), (byte) (0x68), (int) (BreakoutGame_fgcolor_var[0]
));
sendFillRectxwidthheight_via_display((int) (6), (byte) (0x83), (int) (24 + 6), (int) (124));
sendFillRectyval2_via_display((int) (4), (byte) (0xC9), (byte) (0x6E));
sendSetColorg_via_display((byte) (0x7A), (int) (199));
sendSetColorrbval7_via_display((int) (111), (byte) (0x02), (byte) (0xF3), (int) (183));
int i_var = (int) (0);

while(i_var < getBreakoutGame_lives_var()) {
sendFillRectyval2_via_display((int) (4), (byte) (0x21), (byte) (0x3B));
sendFillRectxwidthheight_via_display((int) (6), (byte) (0x0A), (int) (6), (int) (124 + (2 - i_var) * 12));
i_var = (int) (i_var + 1);

}
}
 byte rnd() {
return (byte) (Math.floor(Math.random() * Math.floor(246)) + 5);
}
 void quit() {
System.gc();
synchronized(System.out) {
System.out.println(""+(">sent ")+(getBreakoutGame_bytesSentCounter_var())+(" bytes."));
}
synchronized(System.out) {
System.out.println(""+(">done in ")+(getBreakoutGame_stopTime_var() - getBreakoutGame_startTime_var())+("ms!"));
}
log((boolean) (true));
System.exit(0);
}
 long timestamp() {
return (long) (System.currentTimeMillis());
}
 long usedMemory() {
System.gc();
return (long) (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory());
}
 int unsetBit(final int BreakoutGameJava_unsetBit_variable_var, final int BreakoutGameJava_unsetBit_bit_var) {
return (int) ((BreakoutGameJava_unsetBit_variable_var & ~(1 << BreakoutGameJava_unsetBit_bit_var)));
}
}
