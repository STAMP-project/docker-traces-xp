<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>no.sintef.jasm.Port.send (6 samples, 3.33%; +0.56%)</title><rect x="678.7" y="453" width="39.3" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="681.67" y="463.5" >no...</text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="580.3" y="309" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="583.33" y="319.5" ></text>
</g>
<g >
<title>java.util.TaskQueue.add (1 samples, 0.56%; +0.56%)</title><rect x="796.7" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="799.67" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate (1 samples, 0.56%; 0.00%)</title><rect x="836.0" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.VarHandles.makeFieldHandle (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="293" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="383.5" ></text>
</g>
<g >
<title>java.lang.StringLatin.replace (1 samples, 0.56%; +0.56%)</title><rect x="108.3" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="111.33" y="383.5" ></text>
</g>
<g >
<title>java.io.PrintStream.write (1 samples, 0.56%; 0.00%)</title><rect x="659.0" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.00" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="415.5" ></text>
</g>
<g >
<title>java.io.BufferedOutputStream.flush (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="351.5" ></text>
</g>
<g >
<title>jdk.internal.loader.Resource.getBytes (1 samples, 0.56%; 0.00%)</title><rect x="121.4" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.44" y="463.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (2 samples, 1.11%; 0.00%)</title><rect x="560.7" y="405" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorg_via_display (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="200.1" y="549" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="203.11" y="559.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorrbval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="399.5" ></text>
</g>
<g >
<title>java.lang.Thread.interrupted (1 samples, 0.56%; +0.56%)</title><rect x="252.6" y="501" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="255.56" y="511.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; +0.56%)</title><rect x="685.2" y="341" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="688.22" y="351.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava.access$ (3 samples, 1.67%; 0.00%)</title><rect x="1039.2" y="533" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.22" y="543.5" ></text>
</g>
<g >
<title>java.security.AccessController.doPrivileged (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="245" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="255.5" ></text>
</g>
<g >
<title>java.lang.invoke.VarHandleInts$FieldInstanceReadOnly.&lt;clinit&gt; (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="277" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="287.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.checkCerts (1 samples, 0.56%; +0.56%)</title><rect x="101.8" y="405" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="104.78" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolve (1 samples, 0.56%; 0.00%)</title><rect x="1032.7" y="469" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.67" y="479.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="1163.8" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1166.78" y="479.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.56%; 0.00%)</title><rect x="691.8" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.78" y="367.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.make (2 samples, 1.11%; 0.00%)</title><rect x="967.1" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.11" y="447.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Region.handle (77 samples, 42.78%; 0.00%)</title><rect x="324.7" y="533" width="504.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.67" y="543.5" >no.sintef.jasm.Region.handle</text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.writeBytes (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="351.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixPath.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1085.1" y="261" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1088.11" y="271.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque.iterator (1 samples, 0.56%; 0.00%)</title><rect x="396.8" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.78" y="383.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="763.9" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="766.89" y="383.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 1.11%; +0.56%)</title><rect x="718.0" y="373" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="721.00" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendFillRectxwidthheight_via_display (1 samples, 0.56%; +0.56%)</title><rect x="521.3" y="437" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="524.33" y="447.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.postDefineClass (1 samples, 0.56%; 0.00%)</title><rect x="265.7" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.67" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaMetafactory.metafactory (2 samples, 1.11%; 0.00%)</title><rect x="1019.6" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.56" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="731.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="734.11" y="399.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixNativeDispatcher.&lt;clinit&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="261" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="271.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.writeBytes (1 samples, 0.56%; 0.00%)</title><rect x="659.0" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.00" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; +0.56%)</title><rect x="246.0" y="533" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="249.00" y="543.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.log (10 samples, 5.56%; 0.00%)</title><rect x="606.6" y="469" width="65.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="479.5" >org.thi..</text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="149" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="159.5" ></text>
</g>
<g >
<title>java.lang.Class.privateGetDeclaredMethods (1 samples, 0.56%; 0.00%)</title><rect x="49.3" y="501" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.33" y="511.5" ></text>
</g>
<g >
<title>java.io.FileOutputStream.writeBytes (1 samples, 0.56%; +0.56%)</title><rect x="626.2" y="293" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="629.22" y="303.5" ></text>
</g>
<g >
<title>java.io.PrintStream.write (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="335.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="431.5" ></text>
</g>
<g >
<title>java.io.RandomAccessFile.read (1 samples, 0.56%; 0.00%)</title><rect x="285.3" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="288.33" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="293" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="303.5" ></text>
</g>
<g >
<title>sun.nio.cs.StandardCharsets.canonicalize (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="335.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.defineOrCheckPackage (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.&lt;clinit&gt; (1 samples, 0.56%; +0.56%)</title><rect x="914.7" y="405" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="917.67" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.FillRectxwidthheightMessageType.instantiate (1 samples, 0.56%; 0.00%)</title><rect x="462.3" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="465.33" y="431.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem (1 samples, 0.56%; 0.00%)</title><rect x="901.6" y="293" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.ensureClassInitialized (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="293" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="303.5" >j..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; +0.56%)</title><rect x="763.9" y="357" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="766.89" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType$ConcurrentWeakInternSet.get (1 samples, 0.56%; 0.00%)</title><rect x="986.8" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="989.78" y="367.5" ></text>
</g>
<g >
<title>java.lang.System.loadLibrary (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="197" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="207.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSiteImpl (8 samples, 4.44%; 0.00%)</title><rect x="914.7" y="501" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="511.5" >java...</text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava.sendPositionvaly_via_controls (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="431.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (2 samples, 1.11%; 0.00%)</title><rect x="128.0" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.00" y="479.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixNativeDispatcher$.run (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="213" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="223.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="447.5" ></text>
</g>
<g >
<title>java.lang.Class.getPackageName (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="53" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="63.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.Frame.type (1 samples, 0.56%; 0.00%)</title><rect x="908.1" y="261" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="911.11" y="271.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.isTypeVisible (1 samples, 0.56%; +0.56%)</title><rect x="1026.1" y="309" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1029.11" y="319.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implWrite (1 samples, 0.56%; 0.00%)</title><rect x="652.4" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.44" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.enq (1 samples, 0.56%; 0.00%)</title><rect x="691.8" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.78" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$Itr.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="534.4" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="537.44" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.findStatic (1 samples, 0.56%; 0.00%)</title><rect x="895.0" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="898.00" y="415.5" ></text>
</g>
<g >
<title>no.sintef.jasm.AtomicState.handle (1 samples, 0.56%; +0.56%)</title><rect x="147.7" y="485" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="150.67" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="560.7" y="309" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="563.67" y="319.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.lambda$buildBreakoutGame_SC$ (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="463.5" ></text>
</g>
<g >
<title>java.nio.charset.Charset.lookup (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="383.5" ></text>
</g>
<g >
<title>java.net.URL.toString (1 samples, 0.56%; 0.00%)</title><rect x="82.1" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.11" y="415.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.getManifestFromReference (5 samples, 2.78%; +0.56%)</title><rect x="1150.7" y="517" width="32.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1153.67" y="527.5" >ja..</text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="29.7" y="149" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.67" y="159.5" ></text>
</g>
<g >
<title>java.io.RandomAccessFile.&lt;init&gt; (5 samples, 2.78%; 0.00%)</title><rect x="1098.2" y="373" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.22" y="383.5" >ja..</text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic (2 samples, 1.11%; 0.00%)</title><rect x="1019.6" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.56" y="463.5" ></text>
</g>
<g >
<title>sun.nio.cs.StandardCharsets$Aliases.init (1 samples, 0.56%; +0.56%)</title><rect x="1176.9" y="261" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1179.89" y="271.5" ></text>
</g>
<g >
<title>sun.nio.cs.UTF_$Encoder.encodeLoop (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="277" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="287.5" ></text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava.buildBasicIAController_SC (3 samples, 1.67%; 0.00%)</title><rect x="836.0" y="549" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="559.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="1052.3" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.33" y="431.5" ></text>
</g>
<g >
<title>sun.nio.cs.UTF_$Encoder.encodeArrayLoop (1 samples, 0.56%; +0.56%)</title><rect x="619.7" y="309" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="622.67" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.AbstractValidatingLambdaMetafactory.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="399.5" ></text>
</g>
<g >
<title>java.lang.StringCoding.decode (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="447.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath$.run (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="357" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="367.5" ></text>
</g>
<g >
<title>java.io.RandomAccessFile.readBytes (1 samples, 0.56%; +0.56%)</title><rect x="285.3" y="341" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="288.33" y="351.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.Frame.execute (1 samples, 0.56%; 0.00%)</title><rect x="908.1" y="293" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="911.11" y="303.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes (1 samples, 0.56%; +0.56%)</title><rect x="23.1" y="101" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="26.11" y="111.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava$.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="803.2" y="453" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="806.22" y="463.5" ></text>
</g>
<g >
<title>java.util.TaskQueue.getMin (1 samples, 0.56%; +0.56%)</title><rect x="167.3" y="549" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="170.33" y="559.5" ></text>
</g>
<g >
<title>java.util.zip.Inflater.init (1 samples, 0.56%; 0.00%)</title><rect x="1170.3" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.33" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethod (1 samples, 0.56%; 0.00%)</title><rect x="895.0" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="898.00" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava$$Lambda$.execute (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="463.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.PositionxMessageType$PositionxMessage.clone (2 samples, 1.11%; +0.56%)</title><rect x="370.6" y="405" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="373.56" y="415.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.writeBytes (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="947.4" y="245" width="13.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="950.44" y="255.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="468.9" y="293" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="471.89" y="303.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolve (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="101" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="111.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm.identityForm (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="341" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="351.5" >j..</text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="501.7" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClass (6 samples, 3.33%; 0.00%)</title><rect x="10.0" y="485" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >jdk..</text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass (3 samples, 1.67%; 0.00%)</title><rect x="875.3" y="405" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.33" y="415.5" ></text>
</g>
<g >
<title>java.nio.CharBuffer.limit (1 samples, 0.56%; +0.56%)</title><rect x="645.9" y="277" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="648.89" y="287.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.56%; 0.00%)</title><rect x="757.3" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="760.33" y="367.5" ></text>
</g>
<g >
<title>java.util.Timer.schedule (3 samples, 1.67%; +0.56%)</title><rect x="783.6" y="453" width="19.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="786.56" y="463.5" ></text>
</g>
<g >
<title>java.io.OutputStreamWriter.write (3 samples, 1.67%; 0.00%)</title><rect x="606.6" y="405" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="351.5" ></text>
</g>
<g >
<title>java.lang.Class.getMethod (1 samples, 0.56%; 0.00%)</title><rect x="49.3" y="549" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.33" y="559.5" ></text>
</g>
<g >
<title>java.io.BufferedOutputStream.flushBuffer (1 samples, 0.56%; +0.56%)</title><rect x="659.0" y="309" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="662.00" y="319.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$CleanableResource.run (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="479.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="277" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="287.5" ></text>
</g>
<g >
<title>java.lang.Class.initClassName (1 samples, 0.56%; +0.56%)</title><rect x="88.7" y="373" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="91.67" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass (5 samples, 2.78%; 0.00%)</title><rect x="259.1" y="549" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="559.5" >jd..</text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClass (14 samples, 7.78%; 0.00%)</title><rect x="55.9" y="517" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.89" y="527.5" >jdk.intern..</text>
</g>
<g >
<title>java.lang.invoke.InvokerBytecodeGenerator.emitStaticInvoke (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="325" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="335.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implWrite (1 samples, 0.56%; 0.00%)</title><rect x="619.7" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.67" y="367.5" ></text>
</g>
<g >
<title>java.util.Hashtable.get (2 samples, 1.11%; 0.00%)</title><rect x="816.3" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="819.33" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolve (1 samples, 0.56%; 0.00%)</title><rect x="980.2" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.22" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaMetafactory.metafactory (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="431.5" ></text>
</g>
<g >
<title>java.lang.Class.getName (1 samples, 0.56%; 0.00%)</title><rect x="88.7" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.67" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="986.8" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="989.78" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.make (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="463.5" ></text>
</g>
<g >
<title>java.io.OutputStreamWriter.write (4 samples, 2.22%; 0.00%)</title><rect x="632.8" y="389" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="635.78" y="399.5" >j..</text>
</g>
<g >
<title>java.util.LinkedHashMap.get (1 samples, 0.56%; 0.00%)</title><rect x="114.9" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.89" y="367.5" ></text>
</g>
<g >
<title>java.io.BufferedOutputStream.flush (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="319.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="351.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorrbval_via_display (3 samples, 1.67%; 0.00%)</title><rect x="534.4" y="437" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="537.44" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType.makeImpl (1 samples, 0.56%; 0.00%)</title><rect x="940.9" y="229" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="239.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="600.0" y="293" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="603.00" y="303.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.findBootstrapClass (1 samples, 0.56%; +0.56%)</title><rect x="141.1" y="437" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="144.11" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.defineOrCheckPackage (2 samples, 1.11%; 0.00%)</title><rect x="108.3" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.33" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$AbstractItr.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="1039.2" y="437" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1042.22" y="447.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendClearval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="423.0" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="426.00" y="447.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.defineAnonymousClass (1 samples, 0.56%; +0.56%)</title><rect x="934.3" y="357" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="937.33" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.ref.CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="495.5" ></text>
</g>
<g >
<title>java.util.jar.Attributes.read (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="469" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="479.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.findEND (1 samples, 0.56%; 0.00%)</title><rect x="29.7" y="117" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.67" y="127.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.checkName (1 samples, 0.56%; 0.00%)</title><rect x="128.0" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.00" y="447.5" ></text>
</g>
<g >
<title>java.lang.StringLatin.indexOf (1 samples, 0.56%; +0.56%)</title><rect x="128.0" y="389" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="131.00" y="399.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.MethodWriter.visitVarInsn (1 samples, 0.56%; +0.56%)</title><rect x="927.8" y="357" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="930.78" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; +0.56%)</title><rect x="567.2" y="389" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="570.22" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="335.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$ZipFileInputStream.read (1 samples, 0.56%; 0.00%)</title><rect x="285.3" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="288.33" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="447.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader$NativeLibrary.load (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="117" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="127.5" ></text>
</g>
<g >
<title>java.io.BufferedWriter.flushBuffer (3 samples, 1.67%; 0.00%)</title><rect x="606.6" y="421" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="431.5" ></text>
</g>
<g >
<title>java.nio.CharBuffer.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="645.9" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.89" y="319.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath.getLoader (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="405" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (1 samples, 0.56%; 0.00%)</title><rect x="809.8" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="399.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.Item.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="1019.6" y="389" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1022.56" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.CallSite.makeSite (8 samples, 4.44%; 0.00%)</title><rect x="914.7" y="485" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="495.5" >java...</text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.close (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="447.5" ></text>
</g>
<g >
<title>org.thingml.generated.HeadlessDisplayJava$$Lambda$.get$Lambda (1 samples, 0.56%; +0.56%)</title><rect x="999.9" y="549" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1002.89" y="559.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.lambda$buildBreakoutGame_SC$ (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="447.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath$.run (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="373" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="383.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="364.0" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.56%; 0.00%)</title><rect x="1026.1" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.11" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Handler.lambda$new$ (2 samples, 1.11%; +0.56%)</title><rect x="337.8" y="485" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="340.78" y="495.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="219.8" y="485" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="222.78" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull (5 samples, 2.78%; 0.00%)</title><rect x="259.1" y="501" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="511.5" >jd..</text>
</g>
<g >
<title>java.lang.invoke.MemberName.checkForTypeAlias (1 samples, 0.56%; 0.00%)</title><rect x="1032.7" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.67" y="463.5" ></text>
</g>
<g >
<title>java.io.PrintStream.newLine (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm.createFormsFor (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="325" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="335.5" >j..</text>
</g>
<g >
<title>java.lang.String.intern (1 samples, 0.56%; +0.56%)</title><rect x="259.1" y="229" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="262.11" y="239.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.UpdateIAvalpadyballxMessageType$UpdateIAvalpadyballxMessage.clone (1 samples, 0.56%; +0.56%)</title><rect x="744.2" y="437" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="747.22" y="447.5" ></text>
</g>
<g >
<title>java.util.jar.Attributes.get (1 samples, 0.56%; 0.00%)</title><rect x="114.9" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.89" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.make (1 samples, 0.56%; 0.00%)</title><rect x="895.0" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="898.00" y="367.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles.lookup (1 samples, 0.56%; +0.56%)</title><rect x="1124.4" y="341" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1127.44" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="501.7" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="335.5" ></text>
</g>
<g >
<title>java.lang.String.concat (1 samples, 0.56%; +0.56%)</title><rect x="75.6" y="469" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="78.56" y="479.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Handler$$Lambda$.check (4 samples, 2.22%; 0.00%)</title><rect x="324.7" y="501" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.67" y="511.5" >n..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (1 samples, 0.56%; +0.56%)</title><rect x="1045.8" y="437" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1048.78" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="293" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; +0.56%)</title><rect x="770.4" y="325" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="773.44" y="335.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava.cancel (3 samples, 1.67%; 0.00%)</title><rect x="809.8" y="453" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="463.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$Itr.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="685.2" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.22" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.56%; 0.00%)</title><rect x="206.7" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="209.67" y="527.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic (5 samples, 2.78%; 0.00%)</title><rect x="868.8" y="453" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.78" y="463.5" >ja..</text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.defineClass (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="351.5" ></text>
</g>
<g >
<title>java.util.Collections$SetFromMap.iterator (1 samples, 0.56%; 0.00%)</title><rect x="154.2" y="549" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.22" y="559.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.56%; 0.00%)</title><rect x="1032.7" y="533" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.67" y="543.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="364.0" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="319.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (3 samples, 1.67%; 0.00%)</title><rect x="718.0" y="405" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.00" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="364.0" y="293" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="367.00" y="303.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implFlushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="399.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile.getInputStream (2 samples, 1.11%; 0.00%)</title><rect x="1163.8" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1166.78" y="495.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$Itr.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1039.2" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.22" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.invokeExact_MT (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="463.5" ></text>
</g>
<g >
<title>java.util.TimerThread.mainLoop (2 samples, 1.11%; 0.00%)</title><rect x="180.4" y="549" width="13.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.44" y="559.5" ></text>
</g>
<g >
<title>java.lang.Class.getMethod (1 samples, 0.56%; 0.00%)</title><rect x="49.3" y="533" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.33" y="543.5" ></text>
</g>
<g >
<title>java.io.BufferedOutputStream.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="335.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="396.8" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.78" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque.iterator (1 samples, 0.56%; +0.56%)</title><rect x="350.9" y="389" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="353.89" y="399.5" ></text>
</g>
<g >
<title>sun.nio.cs.UTF_$Encoder.encodeLoop (1 samples, 0.56%; 0.00%)</title><rect x="619.7" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.67" y="335.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava.startTimer (7 samples, 3.89%; 0.00%)</title><rect x="783.6" y="469" width="45.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="786.56" y="479.5" >org...</text>
</g>
<g >
<title>java.lang.ClassLoader.loadClass (14 samples, 7.78%; 0.00%)</title><rect x="55.9" y="549" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.89" y="559.5" >java.lang...</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.56%; +0.56%)</title><rect x="691.8" y="325" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="694.78" y="335.5" ></text>
</g>
<g >
<title>java.lang.String.checkBoundsBeginEnd (1 samples, 0.56%; +0.56%)</title><rect x="42.8" y="389" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="45.78" y="399.5" ></text>
</g>
<g >
<title>java.io.PrintStream.write (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="367.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="23.1" y="213" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="223.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$CleanableResource.&lt;init&gt; (14 samples, 7.78%; 0.00%)</title><rect x="1058.9" y="437" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="447.5" >java.util...</text>
</g>
<g >
<title>java.lang.invoke.MethodTypeForm.&lt;init&gt; (2 samples, 1.11%; +0.56%)</title><rect x="1104.8" y="197" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1107.78" y="207.5" ></text>
</g>
<g >
<title>java.lang.invoke.AbstractValidatingLambdaMetafactory.validateMetafactoryArgs (1 samples, 0.56%; +0.56%)</title><rect x="868.8" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="871.78" y="431.5" ></text>
</g>
<g >
<title>java.lang.Object.wait (1 samples, 0.56%; 0.00%)</title><rect x="193.6" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="196.56" y="527.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="517" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="527.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="895.0" y="341" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="898.00" y="351.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="501.7" y="309" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="504.67" y="319.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="501.7" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="367.5" ></text>
</g>
<g >
<title>java.lang.ApplicationShutdownHooks.runHooks (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="482.0" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="485.00" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType.methodType (1 samples, 0.56%; 0.00%)</title><rect x="940.9" y="245" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="255.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.isSealed (2 samples, 1.11%; 0.00%)</title><rect x="108.3" y="405" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.33" y="415.5" ></text>
</g>
<g >
<title>java.nio.HeapCharBuffer.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="606.6" y="341" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic (8 samples, 4.44%; 0.00%)</title><rect x="914.7" y="437" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="447.5" >java...</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorrbval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="396.8" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.78" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.invokeExact_MT (8 samples, 4.44%; 0.00%)</title><rect x="914.7" y="453" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="463.5" >java...</text>
</g>
<g >
<title>org.thingml.generated.HeadlessDisplayJava.getHeadlessDisplay_null_MOCK_received_display_drawIntegerdigitsscalev_var (1 samples, 0.56%; +0.56%)</title><rect x="777.0" y="469" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="780.00" y="479.5" ></text>
</g>
<g >
<title>java.lang.Runtime.exit (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.VarHandleGuards.guard_LII_Z (1 samples, 0.56%; +0.56%)</title><rect x="1183.4" y="389" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1186.44" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.linkToTargetMethod (1 samples, 0.56%; +0.56%)</title><rect x="862.2" y="533" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="865.22" y="543.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.Item.set (1 samples, 0.56%; +0.56%)</title><rect x="875.3" y="309" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="878.33" y="319.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath$JarLoader$.run (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="293" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="303.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (1 samples, 0.56%; 0.00%)</title><rect x="42.8" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.78" y="463.5" ></text>
</g>
<g >
<title>java.lang.String.checkBoundsBeginEnd (1 samples, 0.56%; +0.56%)</title><rect x="95.2" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="98.22" y="383.5" ></text>
</g>
<g >
<title>java.util.Timer.sched (2 samples, 1.11%; 0.00%)</title><rect x="790.1" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="793.11" y="447.5" ></text>
</g>
<g >
<title>java.util.IdentityHashMap$KeySet.iterator (1 samples, 0.56%; +0.56%)</title><rect x="154.2" y="533" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="157.22" y="543.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.lock (1 samples, 0.56%; 0.00%)</title><rect x="1045.8" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.78" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType.changeReturnType (1 samples, 0.56%; 0.00%)</title><rect x="986.8" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="989.78" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$AbstractItr.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="396.8" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.78" y="351.5" ></text>
</g>
<g >
<title>java.lang.StringLatin.newString (1 samples, 0.56%; 0.00%)</title><rect x="809.8" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSite (5 samples, 2.78%; 0.00%)</title><rect x="868.8" y="533" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.78" y="543.5" >ja..</text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager (2 samples, 1.11%; 0.00%)</title><rect x="967.1" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.11" y="479.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="1052.3" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.33" y="463.5" ></text>
</g>
<g >
<title>java.util.zip.Inflater.inflateBytesBytes (1 samples, 0.56%; +0.56%)</title><rect x="278.8" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="281.78" y="431.5" ></text>
</g>
<g >
<title>java.lang.String.intern (1 samples, 0.56%; +0.56%)</title><rect x="960.6" y="37" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="963.56" y="47.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="383.5" ></text>
</g>
<g >
<title>java.lang.Class.getPackageName (2 samples, 1.11%; 0.00%)</title><rect x="88.7" y="405" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.67" y="415.5" ></text>
</g>
<g >
<title>java.io.BufferedWriter.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="383.5" ></text>
</g>
<g >
<title>sun.nio.cs.StandardCharsets.charsetForName (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass (1 samples, 0.56%; 0.00%)</title><rect x="809.8" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="431.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.isMemberAccessible (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; +0.56%)</title><rect x="219.8" y="469" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="222.78" y="479.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newStringishItem (1 samples, 0.56%; 0.00%)</title><rect x="901.6" y="261" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="271.5" ></text>
</g>
<g >
<title>java.util.TimerThread.run (1 samples, 0.56%; 0.00%)</title><rect x="193.6" y="549" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="196.56" y="559.5" ></text>
</g>
<g >
<title>java.lang.Package.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="261" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="271.5" ></text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava.sendPositionvaly_via_controls (2 samples, 1.11%; 0.00%)</title><rect x="350.9" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="353.89" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="541.0" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="544.00" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodTypeForm.canonicalize (1 samples, 0.56%; 0.00%)</title><rect x="940.9" y="197" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="207.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="319.5" ></text>
</g>
<g >
<title>java.lang.Thread.start (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType.insertParameterTypes (1 samples, 0.56%; +0.56%)</title><rect x="849.1" y="437" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="852.11" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="335.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="364.0" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.resolve (1 samples, 0.56%; +0.56%)</title><rect x="980.2" y="437" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="983.22" y="447.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.write (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.CallSite.makeSite (5 samples, 2.78%; 0.00%)</title><rect x="868.8" y="501" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.78" y="511.5" >ja..</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendUpdateIAvalpadyballx_via_ia (5 samples, 2.78%; 0.00%)</title><rect x="718.0" y="469" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.00" y="479.5" >or..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="560.7" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="117" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="127.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendFillRectxwidthheight_via_display (1 samples, 0.56%; 0.00%)</title><rect x="462.3" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="465.33" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.56%; 0.00%)</title><rect x="252.6" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="255.56" y="527.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.preDefineClass (1 samples, 0.56%; 0.00%)</title><rect x="101.8" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.78" y="431.5" ></text>
</g>
<g >
<title>sun.nio.cs.UTF_$Encoder.encodeArrayLoop (1 samples, 0.56%; +0.56%)</title><rect x="652.4" y="293" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="655.44" y="303.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$CleanableResource.get (2 samples, 1.11%; 0.00%)</title><rect x="23.1" y="197" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="207.5" ></text>
</g>
<g >
<title>java.lang.Thread.start (1 samples, 0.56%; +0.56%)</title><rect x="173.9" y="501" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="176.89" y="511.5" ></text>
</g>
<g >
<title>java.lang.invoke.CallSite.makeSite (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="495.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.preparedLambdaForm (1 samples, 0.56%; 0.00%)</title><rect x="973.7" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="976.67" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicBoolean.compareAndSet (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (6 samples, 3.33%; 0.00%)</title><rect x="10.0" y="469" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >jdk..</text>
</g>
<g >
<title>java.nio.file.FileSystems$DefaultFileSystemHolder.defaultFileSystem (1 samples, 0.56%; 0.00%)</title><rect x="1091.7" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.67" y="367.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="291.9" y="277" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="294.89" y="287.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="541.0" y="293" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="544.00" y="303.5" ></text>
</g>
<g >
<title>java.util.jar.Attributes.getValue (1 samples, 0.56%; 0.00%)</title><rect x="114.9" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.89" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="980.2" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.22" y="479.5" ></text>
</g>
<g >
<title>java.lang.invoke.BootstrapMethodInvoker.invoke (3 samples, 1.67%; +0.56%)</title><rect x="1013.0" y="485" width="19.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1016.00" y="495.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.ensureOpen (1 samples, 0.56%; +0.56%)</title><rect x="632.8" y="357" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="635.78" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath.getResource (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="437" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="447.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.isTypeVisible (1 samples, 0.56%; 0.00%)</title><rect x="1032.7" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.67" y="447.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.loadClass (6 samples, 3.33%; 0.00%)</title><rect x="10.0" y="517" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >jav..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.56%; 0.00%)</title><rect x="724.6" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.56" y="367.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava.sendTimer_timeout_via_timer (3 samples, 1.67%; 0.00%)</title><rect x="1039.2" y="517" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.22" y="527.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="335.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.56%; 0.00%)</title><rect x="849.1" y="501" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.11" y="511.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="311.6" y="309" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="314.56" y="319.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.loadClass (1 samples, 0.56%; 0.00%)</title><rect x="809.8" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="399.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.defineOrCheckPackage (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles.makeIdentity (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="357" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="367.5" >j..</text>
</g>
<g >
<title>java.util.zip.Inflater.inflate (1 samples, 0.56%; 0.00%)</title><rect x="278.8" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="281.78" y="447.5" ></text>
</g>
<g >
<title>java.lang.NamedPackage.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="245" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="255.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (2 samples, 1.11%; 0.00%)</title><rect x="560.7" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="431.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implWrite (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="335.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.addType (1 samples, 0.56%; 0.00%)</title><rect x="908.1" y="245" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="911.11" y="255.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandle.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="967.1" y="405" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="970.11" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.getBreakoutGame_padx_var (1 samples, 0.56%; +0.56%)</title><rect x="593.4" y="469" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="596.44" y="479.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$CleanableResource.get (14 samples, 7.78%; 0.00%)</title><rect x="1058.9" y="453" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="463.5" >java.util...</text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="495.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.UpdateIAballypadxMessageType$UpdateIAballypadxMessage.clone (2 samples, 1.11%; +0.56%)</title><rect x="704.9" y="437" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="707.89" y="447.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixFileSystemProvider.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="1078.6" y="341" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="351.5" ></text>
</g>
<g >
<title>java.io.InputStream.readNBytes (1 samples, 0.56%; 0.00%)</title><rect x="1157.2" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.22" y="495.5" ></text>
</g>
<g >
<title>java.util.jar.Manifest.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="501" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="511.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.PositionvalyMessageType.instantiate (1 samples, 0.56%; 0.00%)</title><rect x="357.4" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="360.44" y="431.5" ></text>
</g>
<g >
<title>java.net.URI.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="1091.7" y="325" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1094.67" y="335.5" ></text>
</g>
<g >
<title>java.io.OutputStreamWriter.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="659.0" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.00" y="415.5" ></text>
</g>
<g >
<title>java.util.TimerThread.mainLoop (1 samples, 0.56%; 0.00%)</title><rect x="193.6" y="533" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="196.56" y="543.5" ></text>
</g>
<g >
<title>sun.nio.cs.StandardCharsets$Aliases.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="293" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="303.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendTimer_start_via_clock (1 samples, 0.56%; 0.00%)</title><rect x="672.1" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="675.11" y="479.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1019.6" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.56" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.loadSpecies (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="245" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="255.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolve (1 samples, 0.56%; 0.00%)</title><rect x="1026.1" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.11" y="367.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.quit (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="447.5" ></text>
</g>
<g >
<title>java.io.FileOutputStream.write (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="277" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="287.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Region.handle (4 samples, 2.22%; 0.00%)</title><rect x="291.9" y="517" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="527.5" >n..</text>
</g>
<g >
<title>java.lang.ClassLoader.findLoadedClass (1 samples, 0.56%; +0.56%)</title><rect x="134.6" y="437" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="137.56" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; +0.56%)</title><rect x="757.3" y="341" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="760.33" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.invokeExact_MT (5 samples, 2.78%; 0.00%)</title><rect x="868.8" y="469" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.78" y="479.5" >ja..</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava$$Lambda$.execute (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="463.5" ></text>
</g>
<g >
<title>java.net.URL.toExternalForm (1 samples, 0.56%; 0.00%)</title><rect x="82.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.11" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.fullyRelease (3 samples, 1.67%; +0.56%)</title><rect x="213.2" y="517" width="19.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="216.22" y="527.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="829.4" y="549" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="832.44" y="559.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.getPermissions (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="341" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite (4 samples, 2.22%; 0.00%)</title><rect x="875.3" y="421" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.33" y="431.5" >j..</text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSite (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="533" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="543.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClass (1 samples, 0.56%; 0.00%)</title><rect x="809.8" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="1026.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.11" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="479.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="763.9" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="766.89" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.56%; 0.00%)</title><rect x="836.0" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="133" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="143.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava$.run (3 samples, 1.67%; 0.00%)</title><rect x="1039.2" y="549" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.22" y="559.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.ensureClassInitialized (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="309" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="319.5" >j..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="351.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.56%; 0.00%)</title><rect x="724.6" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.56" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorrbval_via_display (2 samples, 1.11%; 0.00%)</title><rect x="475.4" y="437" width="13.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="478.44" y="447.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.definePackage (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="277" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="287.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.generateFactory (1 samples, 0.56%; 0.00%)</title><rect x="875.3" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.33" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="351.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.postDefineClass (2 samples, 1.11%; 0.00%)</title><rect x="88.7" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.67" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSiteImpl (5 samples, 2.78%; 0.00%)</title><rect x="868.8" y="517" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.78" y="527.5" >ja..</text>
</g>
<g >
<title>java.io.OutputStreamWriter.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="431.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.&lt;init&gt; (14 samples, 7.78%; 0.00%)</title><rect x="1058.9" y="517" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="527.5" >java.util...</text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (4 samples, 2.22%; 0.00%)</title><rect x="718.0" y="421" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.00" y="431.5" >j..</text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (4 samples, 2.22%; 0.00%)</title><rect x="718.0" y="437" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.00" y="447.5" >n..</text>
</g>
<g >
<title>java.lang.invoke.BootstrapMethodInvoker.invoke (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="495.5" ></text>
</g>
<g >
<title>java.lang.AbstractStringBuilder.append (1 samples, 0.56%; 0.00%)</title><rect x="665.6" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.56" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.revealDirect (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType$ConcurrentWeakInternSet.get (1 samples, 0.56%; 0.00%)</title><rect x="940.9" y="165" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="175.5" ></text>
</g>
<g >
<title>org.thingml.generated.HeadlessDisplayJava$$Lambda$.execute (1 samples, 0.56%; 0.00%)</title><rect x="777.0" y="501" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="780.00" y="511.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (2 samples, 1.11%; 0.00%)</title><rect x="128.0" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.00" y="495.5" ></text>
</g>
<g >
<title>java.lang.Shutdown.exit (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="399.5" ></text>
</g>
<g >
<title>java.nio.charset.Charset.lookup (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendFillRectyval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="527.9" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="530.89" y="447.5" ></text>
</g>
<g >
<title>java.security.SecureClassLoader.defineClass (2 samples, 1.11%; 0.00%)</title><rect x="259.1" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="479.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; +0.56%)</title><rect x="737.7" y="405" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="740.67" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.ref.PhantomCleanable.clean (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="501" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="511.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque.iterator (1 samples, 0.56%; 0.00%)</title><rect x="1039.2" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.22" y="479.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (1 samples, 0.56%; 0.00%)</title><rect x="42.8" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.78" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSite (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="517" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="527.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.linkSpeciesDataToCode (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="229" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="239.5" ></text>
</g>
<g >
<title>java.lang.System$.findBootstrapClassOrNull (1 samples, 0.56%; 0.00%)</title><rect x="141.1" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.11" y="479.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.createBricks (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="431.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.loadClass (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer.findSpecies (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="229" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="239.5" ></text>
</g>
<g >
<title>sun.nio.cs.UTF_$Encoder.encodeArrayLoop (1 samples, 0.56%; +0.56%)</title><rect x="416.4" y="261" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="419.44" y="271.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.FillRectyvalMessageType.instantiate (1 samples, 0.56%; +0.56%)</title><rect x="527.9" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="530.89" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSiteImpl (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="517" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="527.5" ></text>
</g>
<g >
<title>sun.invoke.util.Wrapper.&lt;clinit&gt; (1 samples, 0.56%; +0.56%)</title><rect x="1111.3" y="181" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1114.33" y="191.5" ></text>
</g>
<g >
<title>java.util.zip.Inflater.inflate (1 samples, 0.56%; +0.56%)</title><rect x="121.4" y="421" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="124.44" y="431.5" ></text>
</g>
<g >
<title>java.io.FileOutputStream.write (1 samples, 0.56%; 0.00%)</title><rect x="626.2" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.22" y="319.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath$JarLoader.ensureOpen (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="325" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="335.5" ></text>
</g>
<g >
<title>java.io.PrintStream.write (5 samples, 2.78%; 0.00%)</title><rect x="632.8" y="421" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="635.78" y="431.5" >ja..</text>
</g>
<g >
<title>java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCodeBytes (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="357" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="367.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.drawBrick (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="415.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.&lt;init&gt; (14 samples, 7.78%; 0.00%)</title><rect x="1058.9" y="533" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="543.5" >java.util...</text>
</g>
<g >
<title>java.util.jar.JarFile.checkForSpecialAttributes (1 samples, 0.56%; 0.00%)</title><rect x="36.2" y="197" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.22" y="207.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.findLoadedModule (1 samples, 0.56%; 0.00%)</title><rect x="809.8" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="383.5" ></text>
</g>
<g >
<title>java.lang.Object.wait (2 samples, 1.11%; +0.56%)</title><rect x="180.4" y="533" width="13.2" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="183.44" y="543.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.drawLives (1 samples, 0.56%; 0.00%)</title><rect x="390.2" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="393.22" y="447.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="396.8" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.78" y="415.5" ></text>
</g>
<g >
<title>java.io.PrintStream.print (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="429.6" y="293" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="432.56" y="303.5" ></text>
</g>
<g >
<title>no.sintef.jasm.CompositeState$$Lambda$.execute (1 samples, 0.56%; +0.56%)</title><rect x="318.1" y="549" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="321.11" y="559.5" ></text>
</g>
<g >
<title>java.security.SecureClassLoader.getProtectionDomain (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="405" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.56%; 0.00%)</title><rect x="849.1" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.11" y="495.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; +0.56%)</title><rect x="547.6" y="373" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="550.56" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendFillRectxwidthheight_via_display (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="463.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1019.6" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.56" y="415.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Transition.action (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="533" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="543.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="921.2" y="405" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="924.22" y="415.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixFileSystemProvider.readAttributes (1 samples, 0.56%; 0.00%)</title><rect x="23.1" y="117" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="127.5" ></text>
</g>
<g >
<title>java.lang.Class.forName (6 samples, 3.33%; 0.00%)</title><rect x="10.0" y="549" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >jav..</text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="770.4" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="773.44" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="364.0" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="367.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendDrawRectwidthx_via_display (1 samples, 0.56%; 0.00%)</title><rect x="383.7" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="386.67" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="383.5" ></text>
</g>
<g >
<title>sun.nio.cs.StandardCharsets.lookup (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="351.5" ></text>
</g>
<g >
<title>java.nio.HeapCharBuffer.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="645.9" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.89" y="335.5" ></text>
</g>
<g >
<title>java.io.OutputStreamWriter.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="399.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$CleanableResource.getInflater (2 samples, 1.11%; +0.56%)</title><rect x="1163.8" y="453" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1166.78" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaForm.compileToBytecode (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="389" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="399.5" ></text>
</g>
<g >
<title>java.io.PrintStream.println (9 samples, 5.00%; 0.00%)</title><rect x="606.6" y="453" width="59.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="463.5" >java.i..</text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="731.1" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="734.11" y="351.5" ></text>
</g>
<g >
<title>java.nio.file.FileSystems.getDefault (1 samples, 0.56%; 0.00%)</title><rect x="1091.7" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.67" y="399.5" ></text>
</g>
<g >
<title>java.lang.Object.notify (1 samples, 0.56%; +0.56%)</title><rect x="790.1" y="421" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="793.11" y="431.5" ></text>
</g>
<g >
<title>java.lang.Class.getMethodsRecursive (1 samples, 0.56%; 0.00%)</title><rect x="49.3" y="517" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.33" y="527.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.getManifest (5 samples, 2.78%; 0.00%)</title><rect x="1150.7" y="533" width="32.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.67" y="543.5" >ja..</text>
</g>
<g >
<title>java.lang.String.indexOf (1 samples, 0.56%; 0.00%)</title><rect x="128.0" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.00" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.checkSymbolicClass (1 samples, 0.56%; 0.00%)</title><rect x="1117.9" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.89" y="319.5" ></text>
</g>
<g >
<title>no.sintef.jasm.AtomicState.&lt;init&gt; (11 samples, 6.11%; 0.00%)</title><rect x="914.7" y="533" width="72.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="543.5" >no.sinte..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; 0.00%)</title><rect x="757.3" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="760.33" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="560.7" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethod (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="165" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="175.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath$JarLoader$.run (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="277" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="287.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendTimer_start_via_clock (1 samples, 0.56%; 0.00%)</title><rect x="305.0" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="308.00" y="463.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; +0.56%)</title><rect x="449.2" y="421" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="452.22" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.makePreparedLambdaForm (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="405" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="415.5" ></text>
</g>
<g >
<title>no.sintef.jasm.ext.EventType.equals (1 samples, 0.56%; +0.56%)</title><rect x="344.3" y="469" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="347.33" y="479.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.findBootstrapClassOrNull (1 samples, 0.56%; 0.00%)</title><rect x="141.1" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.11" y="463.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (14 samples, 7.78%; +0.56%)</title><rect x="55.9" y="501" width="91.8" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="58.89" y="511.5" >jdk.intern..</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.drawScore (1 samples, 0.56%; 0.00%)</title><rect x="396.8" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.78" y="447.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implFlushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="367.5" ></text>
</g>
<g >
<title>java.util.zip.Inflater.inflate (1 samples, 0.56%; +0.56%)</title><rect x="1157.2" y="453" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1160.22" y="463.5" ></text>
</g>
<g >
<title>sun.nio.fs.LinuxFileSystemProvider.newFileSystem (2 samples, 1.11%; 0.00%)</title><rect x="1078.6" y="325" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="335.5" ></text>
</g>
<g >
<title>java.security.Permissions.add (1 samples, 0.56%; +0.56%)</title><rect x="10.0" y="309" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.log (3 samples, 1.67%; +0.56%)</title><rect x="403.3" y="437" width="19.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="406.33" y="447.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.isMultiRelease (1 samples, 0.56%; 0.00%)</title><rect x="36.2" y="213" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.22" y="223.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.findEND (1 samples, 0.56%; +0.56%)</title><rect x="1137.6" y="373" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1140.56" y="383.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (3 samples, 1.67%; 0.00%)</title><rect x="1039.2" y="485" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.22" y="495.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.SetColorrbvalMessageType.instantiate (1 samples, 0.56%; +0.56%)</title><rect x="508.2" y="405" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="511.22" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.FillRectyvalMessageType.instantiate (1 samples, 0.56%; 0.00%)</title><rect x="488.6" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="491.56" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.BoundMethodHandle$Specializer.makeFactory (1 samples, 0.56%; +0.56%)</title><rect x="947.4" y="213" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="950.44" y="223.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="980.2" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.22" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newStringishItem (1 samples, 0.56%; +0.56%)</title><rect x="888.4" y="357" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="891.44" y="367.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.findFactory (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="165" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="175.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="364.0" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="335.5" ></text>
</g>
<g >
<title>java.security.SecureClassLoader$.apply (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="373" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorrbval_via_display (3 samples, 1.67%; +0.56%)</title><rect x="495.1" y="453" width="19.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="498.11" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes (1 samples, 0.56%; +0.56%)</title><rect x="836.0" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="839.00" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava$$Lambda$.execute (2 samples, 1.11%; 0.00%)</title><rect x="305.0" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="308.00" y="495.5" ></text>
</g>
<g >
<title>java.util.zip.Inflater.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1170.3" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.33" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="383.5" ></text>
</g>
<g >
<title>java.security.SecureClassLoader.defineClass (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>java.lang.String.substring (1 samples, 0.56%; 0.00%)</title><rect x="42.8" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.78" y="415.5" ></text>
</g>
<g >
<title>java.security.SecureClassLoader.defineClass (4 samples, 2.22%; 0.00%)</title><rect x="82.1" y="453" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.11" y="463.5" >j..</text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newMethodItem (1 samples, 0.56%; 0.00%)</title><rect x="875.3" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.33" y="367.5" ></text>
</g>
<g >
<title>java.lang.Class.forName (6 samples, 3.33%; 0.00%)</title><rect x="10.0" y="533" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >jav..</text>
</g>
<g >
<title>java.lang.Integer.hashCode (1 samples, 0.56%; +0.56%)</title><rect x="822.9" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="825.89" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="200.1" y="517" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="203.11" y="527.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implWrite (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="319.5" ></text>
</g>
<g >
<title>java.io.RandomAccessFile.close (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="501.7" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="399.5" ></text>
</g>
<g >
<title>jdk.internal.reflect.Reflection.getClassAccessFlags (1 samples, 0.56%; +0.56%)</title><rect x="993.3" y="293" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="996.33" y="303.5" ></text>
</g>
<g >
<title>java.lang.invoke.InvokerBytecodeGenerator.addMethod (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="341" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.56%; 0.00%)</title><rect x="895.0" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="898.00" y="383.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (2 samples, 1.11%; 0.00%)</title><rect x="691.8" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.78" y="431.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implWrite (3 samples, 1.67%; 0.00%)</title><rect x="606.6" y="373" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="383.5" ></text>
</g>
<g >
<title>sun.launcher.LauncherHelper.getMainClassFromJar (20 samples, 11.11%; 0.00%)</title><rect x="1058.9" y="549" width="131.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="559.5" >sun.launcher.Lau..</text>
</g>
<g >
<title>jdk.internal.ref.CleanerImpl.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="1144.1" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1147.11" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getFieldVarHandleCommon (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="309" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="319.5" ></text>
</g>
<g >
<title>java.io.InputStream.readNBytes (1 samples, 0.56%; +0.56%)</title><rect x="36.2" y="165" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="39.22" y="175.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClass (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="399.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.isTypeVisible (1 samples, 0.56%; 0.00%)</title><rect x="1026.1" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.11" y="335.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.write (3 samples, 1.67%; 0.00%)</title><rect x="606.6" y="389" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.HeadlessDisplayJava.buildHeadlessDisplay (5 samples, 2.78%; +0.56%)</title><rect x="1006.4" y="549" width="32.8" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1009.44" y="559.5" >or..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.enq (1 samples, 0.56%; 0.00%)</title><rect x="724.6" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="727.56" y="351.5" ></text>
</g>
<g >
<title>java.nio.charset.CharsetEncoder.encode (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="293" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="303.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="533" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="543.5" ></text>
</g>
<g >
<title>java.lang.Object.wait (1 samples, 0.56%; +0.56%)</title><rect x="187.0" y="517" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="190.00" y="527.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="541.0" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="544.00" y="335.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorg_via_display (2 samples, 1.11%; +0.56%)</title><rect x="573.8" y="453" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="576.78" y="463.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorg_via_display (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="447.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Handler.lambda$guard$ (2 samples, 1.11%; 0.00%)</title><rect x="324.7" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.67" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.getPermissions (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="325" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.&lt;init&gt; (7 samples, 3.89%; 0.00%)</title><rect x="1098.2" y="405" width="45.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.22" y="415.5" >java..</text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.write (4 samples, 2.22%; 0.00%)</title><rect x="632.8" y="373" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="635.78" y="383.5" >s..</text>
</g>
<g >
<title>java.util.jar.Manifest.read (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="485" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="495.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader$NativeLibrary.load (1 samples, 0.56%; +0.56%)</title><rect x="1078.6" y="101" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1081.56" y="111.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader$NativeLibrary.loadLibrary (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="133" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="143.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newClass (1 samples, 0.56%; 0.00%)</title><rect x="901.6" y="277" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="287.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 3.33%; 0.00%)</title><rect x="206.7" y="533" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="209.67" y="543.5" >jav..</text>
</g>
<g >
<title>java.util.zip.ZipFile$CleanableResource.clean (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="517" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="527.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendFillRectyval_via_display (2 samples, 1.11%; 0.00%)</title><rect x="560.7" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.findFactories (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="181" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="191.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="501.7" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.56%; 0.00%)</title><rect x="849.1" y="533" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.11" y="543.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.shouldBeInitialized (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="85" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="95.5" ></text>
</g>
<g >
<title>java.lang.Thread.start (1 samples, 0.56%; +0.56%)</title><rect x="436.1" y="309" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="439.11" y="319.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.bitIsSet (1 samples, 0.56%; +0.56%)</title><rect x="442.7" y="453" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="445.67" y="463.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="482.0" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="485.00" y="415.5" ></text>
</g>
<g >
<title>java.nio.CharBuffer.&lt;init&gt; (2 samples, 1.11%; +0.56%)</title><rect x="606.6" y="325" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="609.56" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.BoundMethodHandle.&lt;clinit&gt; (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="277" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="287.5" >j..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.56%; 0.00%)</title><rect x="691.8" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.78" y="383.5" ></text>
</g>
<g >
<title>java.util.Timer.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="173.9" y="533" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.89" y="543.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.resolve (1 samples, 0.56%; +0.56%)</title><rect x="954.0" y="85" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="957.00" y="95.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.56%; 0.00%)</title><rect x="849.1" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.11" y="479.5" ></text>
</g>
<g >
<title>java.lang.String.substring (1 samples, 0.56%; 0.00%)</title><rect x="95.2" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.22" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque.iterator (1 samples, 0.56%; 0.00%)</title><rect x="685.2" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.22" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer.findSpecies (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="261" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="271.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn (1 samples, 0.56%; 0.00%)</title><rect x="875.3" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.33" y="383.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="23.1" y="245" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="255.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType$ConcurrentWeakInternSet.expungeStaleElements (1 samples, 0.56%; +0.56%)</title><rect x="940.9" y="149" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="943.89" y="159.5" ></text>
</g>
<g >
<title>sun.nio.fs.LinuxFileSystemProvider.newFileSystem (2 samples, 1.11%; 0.00%)</title><rect x="1078.6" y="309" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="319.5" ></text>
</g>
<g >
<title>java.util.zip.InflaterInputStream.read (2 samples, 1.11%; 0.00%)</title><rect x="278.8" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="281.78" y="463.5" ></text>
</g>
<g >
<title>java.lang.Thread.run (1 samples, 0.56%; 0.00%)</title><rect x="147.7" y="549" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.67" y="559.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newClass (1 samples, 0.56%; 0.00%)</title><rect x="888.4" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="891.44" y="383.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaMetafactory.metafactory (5 samples, 2.78%; 0.00%)</title><rect x="868.8" y="437" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.78" y="447.5" >ja..</text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.invokeExact_MT (2 samples, 1.11%; 0.00%)</title><rect x="1019.6" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.56" y="479.5" ></text>
</g>
<g >
<title>java.nio.Buffer.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="613.1" y="309" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="616.11" y="319.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="691.8" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.78" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendUpdateIAballypadx_via_ia (6 samples, 3.33%; 0.00%)</title><rect x="678.7" y="469" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="681.67" y="479.5" >org..</text>
</g>
<g >
<title>java.util.jar.JarFile.getJarEntry (1 samples, 0.56%; 0.00%)</title><rect x="36.2" y="245" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.22" y="255.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.preparedLambdaForm (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="101" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="111.5" ></text>
</g>
<g >
<title>jdk.internal.ref.CleanerFactory.&lt;clinit&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1144.1" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1147.11" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="383.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.getBytes (3 samples, 1.67%; 0.00%)</title><rect x="1157.2" y="501" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.22" y="511.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.defineClass (7 samples, 3.89%; 0.00%)</title><rect x="82.1" y="469" width="45.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.11" y="479.5" >jdk...</text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$Itr.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="396.8" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.78" y="367.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.incrementScore (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="479.5" ></text>
</g>
<g >
<title>java.lang.ref.Cleaner.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1144.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1147.11" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.PositionxMessageType.instantiate (1 samples, 0.56%; 0.00%)</title><rect x="377.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="380.11" y="399.5" ></text>
</g>
<g >
<title>java.io.BufferedOutputStream.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="409.9" y="293" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="303.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.addType (1 samples, 0.56%; +0.56%)</title><rect x="908.1" y="229" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="911.11" y="239.5" ></text>
</g>
<g >
<title>no.sintef.jasm.ext.Event.setPort (1 samples, 0.56%; +0.56%)</title><rect x="383.7" y="373" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="386.67" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath$JarLoader.getJarFile (2 samples, 1.11%; 0.00%)</title><rect x="23.1" y="261" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="271.5" ></text>
</g>
<g >
<title>java.io.RandomAccessFile.&lt;init&gt; (5 samples, 2.78%; 0.00%)</title><rect x="1098.2" y="389" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.22" y="399.5" >ja..</text>
</g>
<g >
<title>java.io.FilePermission.&lt;clinit&gt; (1 samples, 0.56%; +0.56%)</title><rect x="16.6" y="293" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="19.56" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap$Traverser.advance (1 samples, 0.56%; +0.56%)</title><rect x="1170.3" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1173.33" y="383.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="367.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="206.7" y="501" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="209.67" y="511.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (2 samples, 1.11%; 0.00%)</title><rect x="1045.8" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.78" y="479.5" ></text>
</g>
<g >
<title>sun.nio.cs.StandardCharsets.aliasMap (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="1032.7" y="485" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.67" y="495.5" ></text>
</g>
<g >
<title>java.nio.file.Files.readAttributes (1 samples, 0.56%; 0.00%)</title><rect x="23.1" y="149" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="159.5" ></text>
</g>
<g >
<title>jdk.internal.util.jar.JarIndex.getJarIndex (1 samples, 0.56%; 0.00%)</title><rect x="36.2" y="261" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.22" y="271.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorrbval_via_display (1 samples, 0.56%; +0.56%)</title><rect x="586.9" y="453" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="589.89" y="463.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.removeBrick (1 samples, 0.56%; 0.00%)</title><rect x="449.2" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="452.22" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName$Factory.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="1026.1" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.11" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass (6 samples, 3.33%; 0.00%)</title><rect x="10.0" y="501" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >jdk..</text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="399.5" ></text>
</g>
<g >
<title>java.io.PrintStream.write (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="399.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="298.4" y="245" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="301.44" y="255.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="501.7" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.loader.Resource.getBytes (2 samples, 1.11%; 0.00%)</title><rect x="278.8" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="281.78" y="479.5" ></text>
</g>
<g >
<title>java.lang.Shutdown.runHooks (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="383.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Region.handle (1 samples, 0.56%; 0.00%)</title><rect x="147.7" y="501" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.67" y="511.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile.close (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="533" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="543.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava$$Lambda$.execute (7 samples, 3.89%; 0.00%)</title><rect x="783.6" y="501" width="45.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="786.56" y="511.5" >org...</text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="319.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.findLoadedClass (2 samples, 1.11%; 0.00%)</title><rect x="128.0" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.00" y="463.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull (5 samples, 2.78%; 0.00%)</title><rect x="10.0" y="453" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >jd..</text>
</g>
<g >
<title>java.util.Timer.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="173.9" y="549" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.89" y="559.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="731.1" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="734.11" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.SetColorrbvalMessageType$SetColorrbvalMessage.clone (1 samples, 0.56%; 0.00%)</title><rect x="508.2" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="511.22" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.get (1 samples, 0.56%; +0.56%)</title><rect x="265.7" y="405" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="268.67" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendSetColorrbval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="449.2" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="452.22" y="447.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.run (4 samples, 2.22%; 0.00%)</title><rect x="291.9" y="549" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="559.5" >n..</text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass (2 samples, 1.11%; 0.00%)</title><rect x="927.8" y="389" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.78" y="399.5" ></text>
</g>
<g >
<title>java.lang.ApplicationShutdownHooks$.run (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 1.11%; 0.00%)</title><rect x="718.0" y="389" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.00" y="399.5" ></text>
</g>
<g >
<title>java.lang.String.indexOf (1 samples, 0.56%; 0.00%)</title><rect x="128.0" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.00" y="415.5" ></text>
</g>
<g >
<title>no.sintef.jasm.CompositeState.handle (4 samples, 2.22%; 0.00%)</title><rect x="291.9" y="533" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="543.5" >n..</text>
</g>
<g >
<title>java.lang.invoke.VarHandleGuards.guard_LI_V (1 samples, 0.56%; +0.56%)</title><rect x="206.7" y="485" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="209.67" y="495.5" ></text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava.lambda$buildBasicIAController_SC$ (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="447.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.&lt;init&gt; (14 samples, 7.78%; 0.00%)</title><rect x="1058.9" y="501" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="511.5" >java.util...</text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.putIfAbsent (1 samples, 0.56%; 0.00%)</title><rect x="69.0" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.00" y="479.5" ></text>
</g>
<g >
<title>java.nio.charset.Charset.isSupported (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="415.5" ></text>
</g>
<g >
<title>sun.nio.cs.UTF_$Encoder.encodeLoop (1 samples, 0.56%; 0.00%)</title><rect x="652.4" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.44" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.findStatic (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="181" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="191.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="501" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="511.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.get (12 samples, 6.67%; 0.00%)</title><rect x="1065.4" y="421" width="78.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1068.44" y="431.5" >java.util..</text>
</g>
<g >
<title>java.lang.invoke.MethodType.makeImpl (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="229" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="239.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.toByteArray (1 samples, 0.56%; +0.56%)</title><rect x="881.9" y="389" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="884.89" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.park (2 samples, 1.11%; +0.56%)</title><rect x="232.9" y="517" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="235.89" y="527.5" ></text>
</g>
<g >
<title>java.io.BufferedOutputStream.flush (1 samples, 0.56%; 0.00%)</title><rect x="659.0" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.00" y="335.5" ></text>
</g>
<g >
<title>java.lang.System.exit (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.run (1 samples, 0.56%; 0.00%)</title><rect x="147.7" y="533" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.67" y="543.5" ></text>
</g>
<g >
<title>java.lang.Object.wait (1 samples, 0.56%; +0.56%)</title><rect x="193.6" y="501" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="196.56" y="511.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.getNamedPackage (1 samples, 0.56%; 0.00%)</title><rect x="265.7" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.67" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="986.8" y="341" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="989.78" y="351.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixNativeDispatcher$.run (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="229" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="239.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Transition.lambda$new$ (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="495.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles.identity (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="373" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="383.5" >j..</text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.lockInterruptibly (1 samples, 0.56%; 0.00%)</title><rect x="252.6" y="533" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="255.56" y="543.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.getClassLoadingLock (2 samples, 1.11%; +0.56%)</title><rect x="62.4" y="485" width="13.2" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="65.44" y="495.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="415.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="23.1" y="229" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="239.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$AbstractItr.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="685.2" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.22" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant (3 samples, 1.67%; 0.00%)</title><rect x="967.1" y="501" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.11" y="511.5" ></text>
</g>
<g >
<title>java.lang.StringCoding.lookupCharset (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="335.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.erasePad (6 samples, 3.33%; +0.56%)</title><rect x="514.8" y="453" width="39.3" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="517.78" y="463.5" >org..</text>
</g>
<g >
<title>java.io.FileOutputStream.writeBytes (1 samples, 0.56%; +0.56%)</title><rect x="409.9" y="261" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="412.89" y="271.5" ></text>
</g>
<g >
<title>java.io.PrintStream.print (5 samples, 2.78%; 0.00%)</title><rect x="632.8" y="437" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="635.78" y="447.5" >ja..</text>
</g>
<g >
<title>sun.nio.fs.LinuxFileSystemProvider.readAttributes (1 samples, 0.56%; 0.00%)</title><rect x="23.1" y="133" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="143.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.getBytes (1 samples, 0.56%; 0.00%)</title><rect x="36.2" y="181" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.22" y="191.5" ></text>
</g>
<g >
<title>no.sintef.jasm.ext.EventType.equals (1 samples, 0.56%; +0.56%)</title><rect x="331.2" y="469" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="334.22" y="479.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.collideBrick (1 samples, 0.56%; 0.00%)</title><rect x="449.2" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="452.22" y="479.5" ></text>
</g>
<g >
<title>java.security.AccessController.doPrivileged (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="309" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="319.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava$$Lambda$.execute (1 samples, 0.56%; 0.00%)</title><rect x="436.1" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.11" y="479.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.findVarHandle (3 samples, 1.67%; 0.00%)</title><rect x="1104.8" y="341" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="351.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixPath.encode (1 samples, 0.56%; +0.56%)</title><rect x="1085.1" y="245" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1088.11" y="255.5" ></text>
</g>
<g >
<title>no.sintef.jasm.AtomicState.handle (77 samples, 42.78%; 0.00%)</title><rect x="324.7" y="517" width="504.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.67" y="527.5" >no.sintef.jasm.AtomicState.handle</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.bricksLeft (1 samples, 0.56%; 0.00%)</title><rect x="442.7" y="469" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="445.67" y="479.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="383.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.initCEN (2 samples, 1.11%; +0.56%)</title><rect x="1131.0" y="389" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1134.00" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; 0.00%)</title><rect x="698.3" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.33" y="415.5" ></text>
</g>
<g >
<title>java.io.RandomAccessFile.readFully (1 samples, 0.56%; 0.00%)</title><rect x="285.3" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="288.33" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType.makeImpl (1 samples, 0.56%; 0.00%)</title><rect x="940.9" y="181" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="191.5" ></text>
</g>
<g >
<title>sun.nio.fs.LinuxFileSystemProvider.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="1078.6" y="357" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="731.1" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="734.11" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="770.4" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="773.44" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="541.0" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="544.00" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.LambdaMetafactory.metafactory (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="447.5" ></text>
</g>
<g >
<title>java.io.OutputStreamWriter.write (1 samples, 0.56%; 0.00%)</title><rect x="416.4" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.44" y="367.5" ></text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava.lambda$buildBasicIAController_SC$ (5 samples, 2.78%; 0.00%)</title><rect x="350.9" y="453" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="353.89" y="463.5" >or..</text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava$$Lambda$.execute (5 samples, 2.78%; 0.00%)</title><rect x="350.9" y="469" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="353.89" y="479.5" >or..</text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="383.5" ></text>
</g>
<g >
<title>sun.nio.fs.UnixFileSystem.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="1078.6" y="277" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="287.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava$$Lambda$.execute (51 samples, 28.33%; 0.00%)</title><rect x="442.7" y="501" width="334.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="445.67" y="511.5" >org.thingml.generated.BreakoutGameJava$$Lambd..</text>
</g>
<g >
<title>java.lang.invoke.MethodTypeForm.findForm (1 samples, 0.56%; 0.00%)</title><rect x="940.9" y="213" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="223.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$Itr.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="423.0" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="426.00" y="383.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="351.5" ></text>
</g>
<g >
<title>java.io.BufferedWriter.flushBuffer (4 samples, 2.22%; 0.00%)</title><rect x="632.8" y="405" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="635.78" y="415.5" >j..</text>
</g>
<g >
<title>no.sintef.jasm.Transition$$Lambda$.execute (2 samples, 1.11%; 0.00%)</title><rect x="291.9" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="495.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.findFactories (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="213" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="223.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.isTypeVisible (1 samples, 0.56%; +0.56%)</title><rect x="1032.7" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1035.67" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="447.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="501.7" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (3 samples, 1.67%; 0.00%)</title><rect x="685.2" y="437" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.22" y="447.5" ></text>
</g>
<g >
<title>java.util.zip.InflaterInputStream.read (1 samples, 0.56%; 0.00%)</title><rect x="121.4" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.44" y="447.5" ></text>
</g>
<g >
<title>all (180 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>java.lang.invoke.BoundMethodHandle$Specializer.&lt;clinit&gt; (1 samples, 0.56%; 0.00%)</title><rect x="940.9" y="261" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="271.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClassOrNull (5 samples, 2.78%; 0.00%)</title><rect x="259.1" y="517" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="527.5" >jd..</text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.checkAccess (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$AbstractItr.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="423.0" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="426.00" y="367.5" ></text>
</g>
<g >
<title>java.lang.invoke.MemberName.checkForTypeAlias (1 samples, 0.56%; 0.00%)</title><rect x="1026.1" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.11" y="351.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.loadSpecies (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="213" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="223.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.defineClass (4 samples, 2.22%; 0.00%)</title><rect x="82.1" y="437" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.11" y="447.5" >j..</text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="431.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.lambda$buildBreakoutGame_SC$ (2 samples, 1.11%; 0.00%)</title><rect x="305.0" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="308.00" y="479.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (3 samples, 1.67%; 0.00%)</title><rect x="1039.2" y="501" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.22" y="511.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendUpdateval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="463.5" ></text>
</g>
<g >
<title>sun.nio.fs.LinuxFileSystem.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="1078.6" y="293" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="580.3" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.33" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.findFactory (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="197" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="207.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.defineClassSourceLocation (1 samples, 0.56%; 0.00%)</title><rect x="82.1" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.11" y="431.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile.&lt;init&gt; (14 samples, 7.78%; 0.00%)</title><rect x="1058.9" y="469" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="479.5" >java.util...</text>
</g>
<g >
<title>no.sintef.jasm.Transition.lambda$action$ (2 samples, 1.11%; 0.00%)</title><rect x="291.9" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="479.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (2 samples, 1.11%; 0.00%)</title><rect x="501.7" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.67" y="447.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.loadClass (5 samples, 2.78%; 0.00%)</title><rect x="259.1" y="533" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="543.5" >jd..</text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull (8 samples, 4.44%; 0.00%)</title><rect x="75.6" y="485" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.56" y="495.5" >jdk.i..</text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.preparedLambdaForm (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="431.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.isClassAccessible (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="335.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendUpdateval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="770.4" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="773.44" y="479.5" ></text>
</g>
<g >
<title>java.lang.invoke.VarHandleGuards.guard_LLL_Z (1 samples, 0.56%; +0.56%)</title><rect x="724.6" y="309" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="727.56" y="319.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.lambda$buildBreakoutGame_SC$ (51 samples, 28.33%; 0.00%)</title><rect x="442.7" y="485" width="334.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="445.67" y="495.5" >org.thingml.generated.BreakoutGameJava.lambda..</text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSite (8 samples, 4.44%; 0.00%)</title><rect x="914.7" y="517" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="527.5" >java...</text>
</g>
<g >
<title>jdk.internal.reflect.Reflection.filterMethods (1 samples, 0.56%; +0.56%)</title><rect x="49.3" y="485" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="52.33" y="495.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.defineClass (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="447.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="350.9" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="353.89" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="770.4" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="773.44" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.ensureClassInitialized (1 samples, 0.56%; +0.56%)</title><rect x="842.6" y="389" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="845.56" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.BootstrapMethodInvoker.invoke (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="479.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Transition.lambda$action$ (13 samples, 7.22%; 0.00%)</title><rect x="350.9" y="485" width="85.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="353.89" y="495.5" >no.sintef...</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.drawBall (9 samples, 5.00%; 0.00%)</title><rect x="455.8" y="469" width="59.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="458.78" y="479.5" >org.th..</text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.readFullyAt (1 samples, 0.56%; 0.00%)</title><rect x="285.3" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="288.33" y="399.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="291.9" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="541.0" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="544.00" y="367.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.56%; +0.56%)</title><rect x="698.3" y="389" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="701.33" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.preparedLambdaForm (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="117" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="127.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.lambda$buildBreakoutGame_SC$ (8 samples, 4.44%; 0.00%)</title><rect x="383.7" y="453" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="386.67" y="463.5" >org.t..</text>
</g>
<g >
<title>org.thingml.generated.BasicIAControllerJava.sendPositionx_via_controls (3 samples, 1.67%; 0.00%)</title><rect x="364.0" y="437" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant (3 samples, 1.67%; 0.00%)</title><rect x="967.1" y="517" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.11" y="527.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.getClassModifiers (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="319.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.PositionxMessageType$PositionxMessage.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="377.1" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="380.11" y="383.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque.iterator (1 samples, 0.56%; 0.00%)</title><rect x="534.4" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="537.44" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType.methodType (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="245" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="255.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodType.makeImpl (1 samples, 0.56%; 0.00%)</title><rect x="986.8" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="989.78" y="383.5" ></text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.computeIfAbsent (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="389" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.ClassSpecializer$Factory.linkSpeciesDataToCode (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="197" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="207.5" ></text>
</g>
<g >
<title>no.sintef.jasm.CompositeState.handle (1 samples, 0.56%; 0.00%)</title><rect x="147.7" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.67" y="527.5" ></text>
</g>
<g >
<title>java.lang.Runtime.loadLibrary (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="181" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="191.5" ></text>
</g>
<g >
<title>java.nio.Buffer.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="645.9" y="293" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.89" y="303.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="541.0" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="544.00" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSite (3 samples, 1.67%; 0.00%)</title><rect x="1013.0" y="533" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1016.00" y="543.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock$Sync.tryRelease (1 samples, 0.56%; +0.56%)</title><rect x="226.3" y="485" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="229.33" y="495.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$CleanableResource.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="23.1" y="181" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="191.5" ></text>
</g>
<g >
<title>java.nio.charset.CharsetEncoder.encode (1 samples, 0.56%; 0.00%)</title><rect x="619.7" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.67" y="351.5" ></text>
</g>
<g >
<title>java.util.HashMap.getNode (1 samples, 0.56%; +0.56%)</title><rect x="114.9" y="341" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="117.89" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; +0.56%)</title><rect x="423.0" y="341" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="426.00" y="351.5" ></text>
</g>
<g >
<title>java.nio.file.FileSystems.&lt;clinit&gt; (4 samples, 2.22%; +0.56%)</title><rect x="1065.4" y="389" width="26.3" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1068.44" y="399.5" >j..</text>
</g>
<g >
<title>no.sintef.jasm.Transition$$Lambda$.execute (14 samples, 7.78%; 0.00%)</title><rect x="350.9" y="501" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="353.89" y="511.5" >no.sintef...</text>
</g>
<g >
<title>no.sintef.jasm.AtomicState.handle (4 samples, 2.22%; 0.00%)</title><rect x="291.9" y="501" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="294.89" y="511.5" >n..</text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="364.0" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="351.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.Frame.push (1 samples, 0.56%; 0.00%)</title><rect x="908.1" y="277" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="911.11" y="287.5" ></text>
</g>
<g >
<title>java.lang.String.replace (1 samples, 0.56%; 0.00%)</title><rect x="108.3" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.33" y="399.5" ></text>
</g>
<g >
<title>java.util.zip.InflaterInputStream.read (1 samples, 0.56%; 0.00%)</title><rect x="1157.2" y="469" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.22" y="479.5" ></text>
</g>
<g >
<title>java.lang.Long.getChars (1 samples, 0.56%; +0.56%)</title><rect x="665.6" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="668.56" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.send (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="431.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.FillRectxwidthheightMessageType$FillRectxwidthheightMessage.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="462.3" y="405" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="465.33" y="415.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendFillRectyval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="488.6" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="491.56" y="463.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.&lt;clinit&gt; (1 samples, 0.56%; +0.56%)</title><rect x="1058.9" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1061.89" y="431.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.flushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="659.0" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.00" y="399.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.defineClass (2 samples, 1.11%; 0.00%)</title><rect x="259.1" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="463.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.ensureClassInitialized (1 samples, 0.56%; 0.00%)</title><rect x="842.6" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="845.56" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.definePackage (1 samples, 0.56%; 0.00%)</title><rect x="259.1" y="293" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="303.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodTypeForm.findForm (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="213" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="223.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.56%; 0.00%)</title><rect x="849.1" y="517" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.11" y="527.5" ></text>
</g>
<g >
<title>java.lang.Integer.equals (1 samples, 0.56%; +0.56%)</title><rect x="816.3" y="421" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="819.33" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSiteImpl (1 samples, 0.56%; 0.00%)</title><rect x="993.3" y="501" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.33" y="511.5" ></text>
</g>
<g >
<title>java.lang.ref.Cleaner.create (1 samples, 0.56%; 0.00%)</title><rect x="1144.1" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1147.11" y="415.5" ></text>
</g>
<g >
<title>no.sintef.jasm.CompositeState.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="986.8" y="533" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="989.78" y="543.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle$Holder.invokeStatic (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="463.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.enq (1 samples, 0.56%; +0.56%)</title><rect x="554.1" y="325" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="557.11" y="335.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.findNative (1 samples, 0.56%; 0.00%)</title><rect x="1170.3" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.33" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque$Itr.firstNode (1 samples, 0.56%; +0.56%)</title><rect x="396.8" y="325" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="399.78" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="1032.7" y="501" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.67" y="511.5" ></text>
</g>
<g >
<title>org.thingml.generated.HeadlessDisplayJava.lambda$buildHeadlessDisplay$ (1 samples, 0.56%; 0.00%)</title><rect x="777.0" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="780.00" y="495.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="309" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="319.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.isClassAccessible (1 samples, 0.56%; +0.56%)</title><rect x="1117.9" y="293" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1120.89" y="303.5" ></text>
</g>
<g >
<title>java.lang.Thread.start (1 samples, 0.56%; 0.00%)</title><rect x="173.9" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.89" y="527.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.defineClass (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.offer (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles.constant (4 samples, 2.22%; 0.00%)</title><rect x="940.9" y="389" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.89" y="399.5" >j..</text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap.putVal (1 samples, 0.56%; +0.56%)</title><rect x="69.0" y="453" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="72.00" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.findStatic (1 samples, 0.56%; 0.00%)</title><rect x="1026.1" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.11" y="415.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath$JarLoader.&lt;init&gt; (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="341" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="351.5" ></text>
</g>
<g >
<title>java.lang.String.substring (1 samples, 0.56%; 0.00%)</title><rect x="809.8" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.78" y="367.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.findStatic (1 samples, 0.56%; 0.00%)</title><rect x="954.0" y="149" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.00" y="159.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Port.equals (1 samples, 0.56%; +0.56%)</title><rect x="324.7" y="469" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="327.67" y="479.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite (6 samples, 3.33%; 0.00%)</title><rect x="927.8" y="405" width="39.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.78" y="415.5" >jav..</text>
</g>
<g >
<title>java.lang.String.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="463.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.BoundMethodHandle$Specializer.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="947.4" y="261" width="13.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="950.44" y="271.5" ></text>
</g>
<g >
<title>java.lang.invoke.BootstrapMethodInvoker.invoke (5 samples, 2.78%; 0.00%)</title><rect x="868.8" y="485" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.78" y="495.5" >ja..</text>
</g>
<g >
<title>java.lang.invoke.MethodHandleNatives.linkCallSiteImpl (3 samples, 1.67%; 0.00%)</title><rect x="1013.0" y="517" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1016.00" y="527.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.eraseBall (5 samples, 2.78%; +0.56%)</title><rect x="455.8" y="453" width="32.8" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="458.78" y="463.5" >or..</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.drawPad (12 samples, 6.67%; 0.00%)</title><rect x="514.8" y="469" width="78.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="517.78" y="479.5" >org.thing..</text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="367.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava$$Lambda$.execute (8 samples, 4.44%; 0.00%)</title><rect x="383.7" y="469" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="386.67" y="479.5" >org.t..</text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="967.1" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.11" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.CompositeState.handle (77 samples, 42.78%; 0.00%)</title><rect x="324.7" y="549" width="504.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.67" y="559.5" >no.sintef.jasm.CompositeState.handle</text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.release (1 samples, 0.56%; 0.00%)</title><rect x="1183.4" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.44" y="463.5" ></text>
</g>
<g >
<title>sun.nio.fs.DefaultFileSystemProvider.create (3 samples, 1.67%; +0.56%)</title><rect x="1072.0" y="373" width="19.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1075.00" y="383.5" ></text>
</g>
<g >
<title>java.io.PrintStream.newLine (4 samples, 2.22%; 0.00%)</title><rect x="606.6" y="437" width="26.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="447.5" >j..</text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.preparedLambdaForm (1 samples, 0.56%; 0.00%)</title><rect x="973.7" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="976.67" y="431.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="200.1" y="533" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="203.11" y="543.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.visit (1 samples, 0.56%; 0.00%)</title><rect x="888.4" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="891.44" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.buildBreakoutGame_SC (22 samples, 12.22%; +0.56%)</title><rect x="855.7" y="549" width="144.2" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="858.67" y="559.5" >org.thingml.genera..</text>
</g>
<g >
<title>java.util.concurrent.ConcurrentHashMap$ValueIterator.next (1 samples, 0.56%; 0.00%)</title><rect x="1170.3" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.33" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.createBricks (1 samples, 0.56%; 0.00%)</title><rect x="383.7" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="386.67" y="447.5" ></text>
</g>
<g >
<title>java.nio.CharBuffer.wrap (2 samples, 1.11%; +0.56%)</title><rect x="639.3" y="341" width="13.1" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="642.33" y="351.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.56%; 0.00%)</title><rect x="757.3" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="760.33" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.getAndVerifyPackage (2 samples, 1.11%; 0.00%)</title><rect x="108.3" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.33" y="431.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getFieldVarHandle (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="325" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="335.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.preparedLambdaForm (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="437" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="560.7" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="399.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.Timer_startMessageType$Timer_startMessage.clone (1 samples, 0.56%; +0.56%)</title><rect x="672.1" y="437" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="675.11" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodForConstant (2 samples, 1.11%; 0.00%)</title><rect x="967.1" y="485" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.11" y="495.5" ></text>
</g>
<g >
<title>java.io.File.toPath (5 samples, 2.78%; 0.00%)</title><rect x="1065.4" y="405" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1068.44" y="415.5" >ja..</text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicBoolean.&lt;clinit&gt; (5 samples, 2.78%; +0.56%)</title><rect x="1098.2" y="357" width="32.8" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1101.22" y="367.5" >ja..</text>
</g>
<g >
<title>java.lang.invoke.LambdaMetafactory.metafactory (8 samples, 4.44%; 0.00%)</title><rect x="914.7" y="421" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="431.5" >java...</text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.defineClass (5 samples, 2.78%; 0.00%)</title><rect x="259.1" y="485" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.11" y="495.5" >jd..</text>
</g>
<g >
<title>sun.util.PreHashedMap.&lt;init&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1176.9" y="277" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="287.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="311.6" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="314.56" y="351.5" ></text>
</g>
<g >
<title>jdk.internal.loader.Resource.getByteBuffer (1 samples, 0.56%; +0.56%)</title><rect x="272.2" y="469" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="275.22" y="479.5" ></text>
</g>
<g >
<title>java.net.URI.create (1 samples, 0.56%; 0.00%)</title><rect x="1091.7" y="341" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.67" y="351.5" ></text>
</g>
<g >
<title>java.io.PrintStream.println (2 samples, 1.11%; 0.00%)</title><rect x="409.9" y="421" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="412.89" y="431.5" ></text>
</g>
<g >
<title>java.nio.file.FileSystems$DefaultFileSystemHolder.&lt;clinit&gt; (1 samples, 0.56%; 0.00%)</title><rect x="1091.7" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.67" y="383.5" ></text>
</g>
<g >
<title>java.nio.charset.CharsetEncoder.encode (1 samples, 0.56%; 0.00%)</title><rect x="652.4" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.44" y="335.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implWrite (3 samples, 1.67%; 0.00%)</title><rect x="639.3" y="357" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="642.33" y="367.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.loadLibrary (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="165" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="175.5" ></text>
</g>
<g >
<title>jdk.internal.loader.BuiltinClassLoader.findLoadedModule (1 samples, 0.56%; 0.00%)</title><rect x="42.8" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.78" y="431.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="350.9" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="353.89" y="415.5" ></text>
</g>
<g >
<title>java.lang.invoke.CallSite.makeSite (3 samples, 1.67%; 0.00%)</title><rect x="1013.0" y="501" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1016.00" y="511.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.defineAnonymousClass (1 samples, 0.56%; 0.00%)</title><rect x="934.3" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="937.33" y="383.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.Item.set (1 samples, 0.56%; +0.56%)</title><rect x="901.6" y="245" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="904.56" y="255.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; +0.56%)</title><rect x="1052.3" y="405" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1055.33" y="415.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="405" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingDeque.iterator (1 samples, 0.56%; 0.00%)</title><rect x="423.0" y="389" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="426.00" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.CallSite.makeSite (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="501" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="511.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="1052.3" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.33" y="447.5" ></text>
</g>
<g >
<title>java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor (1 samples, 0.56%; 0.00%)</title><rect x="927.8" y="373" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.78" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.drawScore (1 samples, 0.56%; 0.00%)</title><rect x="600.0" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.00" y="463.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="560.7" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="335.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile.&lt;init&gt; (14 samples, 7.78%; 0.00%)</title><rect x="1058.9" y="485" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.89" y="495.5" >java.util...</text>
</g>
<g >
<title>java.util.Arrays.copyOfRange (1 samples, 0.56%; +0.56%)</title><rect x="809.8" y="325" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="812.78" y="335.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.56%; 0.00%)</title><rect x="468.9" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="471.89" y="335.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="560.7" y="357" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.67" y="367.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.make (1 samples, 0.56%; 0.00%)</title><rect x="849.1" y="453" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.11" y="463.5" ></text>
</g>
<g >
<title>java.security.AccessController.doPrivileged (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="389" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="399.5" ></text>
</g>
<g >
<title>java.lang.invoke.Invokers$Holder.invokeExact_MT (2 samples, 1.11%; 0.00%)</title><rect x="836.0" y="469" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.00" y="479.5" ></text>
</g>
<g >
<title>sun.invoke.util.VerifyAccess.isSamePackage (1 samples, 0.56%; 0.00%)</title><rect x="960.6" y="69" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="963.56" y="79.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.PositionvalyMessageType$PositionvalyMessage.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="357.4" y="405" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="360.44" y="415.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.take (8 samples, 4.44%; 0.00%)</title><rect x="206.7" y="549" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="209.67" y="559.5" >java...</text>
</g>
<g >
<title>java.security.SecureClassLoader$.apply (2 samples, 1.11%; 0.00%)</title><rect x="10.0" y="357" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>java.lang.StringBuilder.append (1 samples, 0.56%; 0.00%)</title><rect x="665.6" y="453" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.56" y="463.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.setBlocker (1 samples, 0.56%; +0.56%)</title><rect x="239.4" y="501" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="242.44" y="511.5" ></text>
</g>
<g >
<title>java.lang.invoke.VarForm.&lt;init&gt; (2 samples, 1.11%; 0.00%)</title><rect x="1104.8" y="261" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.78" y="271.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendTimer_start_via_clock (1 samples, 0.56%; 0.00%)</title><rect x="429.6" y="437" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.56" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="685.2" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.22" y="383.5" ></text>
</g>
<g >
<title>java.lang.invoke.DirectMethodHandle.shouldBeInitialized (1 samples, 0.56%; +0.56%)</title><rect x="973.7" y="389" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="976.67" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.LinkedBlockingQueue.signalNotEmpty (1 samples, 0.56%; 0.00%)</title><rect x="364.0" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="367.00" y="383.5" ></text>
</g>
<g >
<title>java.util.jar.JarFile.getEntry (1 samples, 0.56%; 0.00%)</title><rect x="36.2" y="229" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.22" y="239.5" ></text>
</g>
<g >
<title>java.lang.invoke.BootstrapMethodInvoker.invoke (8 samples, 4.44%; 0.00%)</title><rect x="914.7" y="469" width="52.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.67" y="479.5" >java...</text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass (14 samples, 7.78%; 0.00%)</title><rect x="55.9" y="533" width="91.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.89" y="543.5" >jdk.intern..</text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendFillRectyval_via_display (1 samples, 0.56%; 0.00%)</title><rect x="390.2" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="393.22" y="431.5" ></text>
</g>
<g >
<title>java.util.Arrays.copyOfRange (1 samples, 0.56%; +0.56%)</title><rect x="29.7" y="101" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="32.67" y="111.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$AppClassLoader.defineOrCheckPackage (2 samples, 1.11%; 0.00%)</title><rect x="108.3" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.33" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.getDirectMethodCommon (2 samples, 1.11%; 0.00%)</title><rect x="967.1" y="453" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="970.11" y="463.5" ></text>
</g>
<g >
<title>java.lang.invoke.InvokerBytecodeGenerator.generateCustomizedCode (2 samples, 1.11%; 0.00%)</title><rect x="901.6" y="373" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.56" y="383.5" ></text>
</g>
<g >
<title>sun.net.www.protocol.file.FileURLConnection.getPermission (1 samples, 0.56%; 0.00%)</title><rect x="16.6" y="309" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.56" y="319.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newClass (1 samples, 0.56%; 0.00%)</title><rect x="875.3" y="341" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.33" y="351.5" ></text>
</g>
<g >
<title>jdk.internal.misc.Unsafe.unpark (1 samples, 0.56%; +0.56%)</title><rect x="731.1" y="325" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="734.11" y="335.5" ></text>
</g>
<g >
<title>no.sintef.jasm.Component.receive (1 samples, 0.56%; 0.00%)</title><rect x="554.1" y="421" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="557.11" y="431.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.sendUpdate__via_display (3 samples, 1.67%; +0.56%)</title><rect x="750.8" y="469" width="19.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="753.78" y="479.5" ></text>
</g>
<g >
<title>java.net.URLStreamHandler.toExternalForm (1 samples, 0.56%; +0.56%)</title><rect x="82.1" y="373" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="85.11" y="383.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.initCEN (1 samples, 0.56%; 0.00%)</title><rect x="29.7" y="133" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.67" y="143.5" ></text>
</g>
<g >
<title>org.thingml.generated.TimerJava.lambda$buildTimerJava_SoftTimer$ (7 samples, 3.89%; 0.00%)</title><rect x="783.6" y="485" width="45.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="786.56" y="495.5" >org...</text>
</g>
<g >
<title>java.util.zip.ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.56%; 0.00%)</title><rect x="285.3" y="405" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="288.33" y="415.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.56%; 0.00%)</title><rect x="285.3" y="437" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="288.33" y="447.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.ReentrantLock.unlock (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="309" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="319.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.&lt;clinit&gt; (1 samples, 0.56%; +0.56%)</title><rect x="200.1" y="501" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="203.11" y="511.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.56%; 0.00%)</title><rect x="691.8" y="389" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.78" y="399.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (2 samples, 1.11%; 0.00%)</title><rect x="219.8" y="501" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="222.78" y="511.5" ></text>
</g>
<g >
<title>org.thingml.generated.BreakoutGameJava.drawBrick (1 samples, 0.56%; 0.00%)</title><rect x="383.7" y="421" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="386.67" y="431.5" ></text>
</g>
<g >
<title>java.nio.CharBuffer.wrap (2 samples, 1.11%; 0.00%)</title><rect x="606.6" y="357" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="609.56" y="367.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.56%; 0.00%)</title><rect x="1032.7" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.67" y="527.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.LockSupport.unpark (1 samples, 0.56%; 0.00%)</title><rect x="298.4" y="261" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.44" y="271.5" ></text>
</g>
<g >
<title>java.lang.invoke.BoundMethodHandle$Specializer.makeFactory (1 samples, 0.56%; 0.00%)</title><rect x="947.4" y="229" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="950.44" y="239.5" ></text>
</g>
<g >
<title>jdk.internal.loader.URLClassPath.getLoader (3 samples, 1.67%; 0.00%)</title><rect x="23.1" y="421" width="19.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="431.5" ></text>
</g>
<g >
<title>java.util.Objects.requireNonNull (1 samples, 0.56%; +0.56%)</title><rect x="160.8" y="549" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="163.78" y="559.5" ></text>
</g>
<g >
<title>jdk.internal.org.objectweb.asm.ClassWriter.newStringishItem (1 samples, 0.56%; 0.00%)</title><rect x="875.3" y="325" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.33" y="335.5" ></text>
</g>
<g >
<title>java.lang.ClassLoader.loadLibrary (1 samples, 0.56%; 0.00%)</title><rect x="1078.6" y="149" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.56" y="159.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.UpdateIAballypadxMessageType.instantiate (1 samples, 0.56%; +0.56%)</title><rect x="711.4" y="421" width="6.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="714.44" y="431.5" ></text>
</g>
<g >
<title>sun.nio.cs.StreamEncoder.implFlushBuffer (1 samples, 0.56%; 0.00%)</title><rect x="659.0" y="373" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.00" y="383.5" ></text>
</g>
<g >
<title>org.thingml.generated.messages.FillRectyvalMessageType$FillRectyvalMessage.&lt;init&gt; (1 samples, 0.56%; +0.56%)</title><rect x="488.6" y="421" width="6.5" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="491.56" y="431.5" ></text>
</g>
<g >
<title>java.util.zip.ZipFile$Source.get (2 samples, 1.11%; 0.00%)</title><rect x="23.1" y="165" width="13.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.11" y="175.5" ></text>
</g>
<g >
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.release (1 samples, 0.56%; 0.00%)</title><rect x="685.2" y="357" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.22" y="367.5" ></text>
</g>
<g >
<title>jdk.internal.loader.ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.56%; 0.00%)</title><rect x="141.1" y="485" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.11" y="495.5" ></text>
</g>
<g >
<title>java.lang.invoke.MethodHandles$Lookup.resolveOrFail (1 samples, 0.56%; 0.00%)</title><rect x="1117.9" y="325" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.89" y="335.5" ></text>
</g>
</g>
</svg>
